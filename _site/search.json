[
  {
    "objectID": "Hinweise.html",
    "href": "Hinweise.html",
    "title": "Hinweise",
    "section": "",
    "text": "Beachten Sie Hinweise aus dem Hinweisbuch, insbesondere:\n\nallgemeine Prüfungshinweise\nfür quantitative Prüfungen"
  },
  {
    "objectID": "Hinweise.html#bearbeitungshinweise",
    "href": "Hinweise.html#bearbeitungshinweise",
    "title": "Hinweise",
    "section": "",
    "text": "Beachten Sie Hinweise aus dem Hinweisbuch, insbesondere:\n\nallgemeine Prüfungshinweise\nfür quantitative Prüfungen"
  },
  {
    "objectID": "posts/tidymodels-poly02/tidymodels-poly02.html",
    "href": "posts/tidymodels-poly02/tidymodels-poly02.html",
    "title": "tidymodels-poly02",
    "section": "",
    "text": "Aufgabe\nFitten Sie ein Polynomial-Modell für folgende Modellgleichung:\nbody_mass_g ~ bill_length_mm.\nGesucht ist der RMSE im Test-Set (optimal hinsichtlich minimalem Prognosefehler).\nHinweise:\n\nDatensatz penguins (palmerpenguins)\nVerwenden Sie Tidymodels\nFitten Sie Polynome des Grades 1 bis 10.\nDefinieren Sie die Polynomegrade als Tuningparameter.\nEntfernen Sie fehlende Werte in den Prädiktoren.\nWie immer gilt: Verwenden Sie die Standardeinstellungen der Funktionen, soweit nicht anders angegeben.\n\n         \n\n\nLösung\nSetup:\n\nlibrary(tidymodels)\ndata(penguins, package = \"palmerpenguins\")\n\nDatenaufteilung:\n\nd_split &lt;- initial_split(penguins)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\nRezept:\n\nrec1 &lt;- \n  recipe(body_mass_g ~ bill_length_mm, data = penguins) %&gt;% \n  step_naomit(all_predictors()) %&gt;% \n  step_poly(all_predictors(), degree = tune()) %&gt;% \n  update_role(contains(\"_poly_\"), new_role = \"predictor\")\n\nWarning: No columns were selected in `update_role()`.\n\n\nCheck:\n\nd_baked &lt;- bake(prep(rec1), new_data = NULL)\n\nRezepte mit Tuningparametern kann man nicht preppen/backen.\nWorkflow:\n\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(linear_reg()) %&gt;% \n  add_recipe(rec1)\n\nTuning:\n\nset.seed(42)\ntune1 &lt;-\n  tune_grid(\n    wf1,\n    resamples = vfold_cv(data = penguins),\n    metrics = metric_set(rmse),\n    grid = grid_regular(degree(range = c(1, 10)),\n                               levels = 10),\n    control = control_grid(save_workflow = TRUE)\n  )\n\n\nautoplot(tune1)\n\n\n\n\n\nshow_best(tune1)\n\n# A tibble: 5 × 7\n  degree .metric .estimator  mean     n std_err .config              \n   &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1      2 rmse    standard    638.    10    22.7 Preprocessor02_Model1\n2      4 rmse    standard    641.    10    23.7 Preprocessor04_Model1\n3      1 rmse    standard    643.    10    21.8 Preprocessor01_Model1\n4      5 rmse    standard    643.    10    23.5 Preprocessor05_Model1\n5      3 rmse    standard    643.    10    24.2 Preprocessor03_Model1\n\n\nFinalisieren:\n\nbest1 &lt;- fit_best(tune1)\nbest1\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_naomit()\n• step_poly()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n          (Intercept)  bill_length_mm_poly_1  bill_length_mm_poly_2  \n                 4202                   8813                  -1708  \n\n\nPredicten:\n\nfinal1 &lt;- last_fit(best1, d_split)\ncollect_metrics(final1)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     666.    Preprocessor1_Model1\n2 rsq     standard       0.287 Preprocessor1_Model1\n\n\nOder so:\n\nsol &lt;- \npredict(best1, new_data = d_test) %&gt;% \n  bind_cols(d_test) %&gt;% \n  rmse(truth = body_mass_g, estimate = .pred) %&gt;% \n  pull(.estimate) %&gt;% \n  pluck(1)\n\nsol\n\n[1] 657.5297\n\n\nDie Antwort lautet: 657.5296534.\n\nCategories:\n\nR\nstatlearning\ntidymodels\nnum"
  },
  {
    "objectID": "posts/summarise05/summarise05.html",
    "href": "posts/summarise05/summarise05.html",
    "title": "summarise05",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\n\nGruppieren Sie danach, wie viele Lenkräder bei der Auktion dabei waren.\nFassen Sie die Spalte total_pr zusammen und zwar zur MAA und zum IQR - pro Gruppe!\n\nGeben Sie den erste Wert des IQR als Antwort zurück!\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nOder so:\n\ndata(mariokart, package = \"openintro\")  # aus dem Paket \"openintro\"\n\nDazu muss das Paket openintro auf Ihrem Computer installiert sein.\nZusammenfassen:\n\nlibrary(DescTools)\nmariokart_gruppiert &lt;- group_by(mariokart, wheels)  # Gruppieren\nmariokart_klein &lt;- summarise(mariokart_gruppiert, \n                             pr_iqr = IQR(total_pr),\n                             pr_maa = mean(abs(total_pr - mean(total_pr))),\n                             pr_maa2 = MeanAD(total_pr)\n                             )  # zusammenfassen\nmariokart_klein\n\n# A tibble: 5 × 4\n  wheels pr_iqr pr_maa pr_maa2\n   &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1      0   7      7.05    7.05\n2      1   5.32   3.25    3.25\n3      2   7.18  11.9    11.9 \n4      3   5.25   5.25    5.25\n5      4   0      0       0   \n\n\nMöchte man den MAA nicht von Hand ausrechnen, so kann man die Funktion MeanAD aus dem Paket DescTools nutzen (Denken Sie daran, dass Sie das Paket einmalig installiert haben müssen.)\nDie Lösung lautet: 7.00\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nvariability\nnum"
  },
  {
    "objectID": "posts/tmdb03/tmdb03.html",
    "href": "posts/tmdb03/tmdb03.html",
    "title": "tmdb03",
    "section": "",
    "text": "Aufgabe\nWir bearbeiten hier die Fallstudie TMDB Box Office Prediction - Can you predict a movie’s worldwide box office revenue?, ein Kaggle-Prognosewettbewerb.\nZiel ist es, genaue Vorhersagen zu machen, in diesem Fall für Filme.\nDie Daten können Sie von der Kaggle-Projektseite beziehen oder so:\n\nd_train_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/train.csv\"\nd_test_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/test.csv\"\n\n\n\nAufgabe\nReichen Sie bei Kaggle eine Submission für die Fallstudie ein! Berichten Sie den Score!\nHinweise:\n\nSie müssen sich bei Kaggle ein Konto anlegen (kostenlos und anonym möglich); alternativ können Sie sich mit einem Google-Konto anmelden.\nVerwenden Sie mehrere, und zwar folgende Algorithmen: Random Forest, Boosting, lineare Regression. Tipp: Ein Workflow-Set ist hilfreich.\nLogarithmieren Sie budget.\nBetreiben Sie Feature Engineering, zumindest etwas. Insbesondere sollten Sie den Monat und das Jahr aus dem Datum extrahieren und als Features (Prädiktoren) nutzen.\nVerwenden Sie tidymodels.\nDie Zielgröße ist revenue in Dollars; nicht in “Log-Dollars”. Sie müssen also rücktransformieren, falls Sie revenue logarithmiert haben.\n\n         \n\n\nLösung\nVorbereitung\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(tictoc)  # Rechenzeit messen\n#library(Metrics)\nlibrary(lubridate)  # Datumsangaben\nlibrary(VIM)  # fehlende Werte\nlibrary(visdat)  # Datensatz visualisieren\nlibrary(lubridate)  # Datum/Uhrzeit verarbeiten\nlibrary(doParallel)  # mehrere CPUs nutzen\n\n\nd_train_raw &lt;- read_csv(d_train_path)\nd_test &lt;- read_csv(d_test_path)\n\nMal einen Blick werfen:\n\nglimpse(d_train_raw)\n\nRows: 3,000\nColumns: 23\n$ id                    &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 313576, 'name': 'Hot Tub Time Machine C…\n$ budget                &lt;dbl&gt; 1.40e+07, 4.00e+07, 3.30e+06, 1.20e+06, 0.00e+00…\n$ genres                &lt;chr&gt; \"[{'id': 35, 'name': 'Comedy'}]\", \"[{'id': 35, '…\n$ homepage              &lt;chr&gt; NA, NA, \"http://sonyclassics.com/whiplash/\", \"ht…\n$ imdb_id               &lt;chr&gt; \"tt2637294\", \"tt0368933\", \"tt2582802\", \"tt182148…\n$ original_language     &lt;chr&gt; \"en\", \"en\", \"en\", \"hi\", \"ko\", \"en\", \"en\", \"en\", …\n$ original_title        &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ overview              &lt;chr&gt; \"When Lou, who has become the \\\"father of the In…\n$ popularity            &lt;dbl&gt; 6.575393, 8.248895, 64.299990, 3.174936, 1.14807…\n$ poster_path           &lt;chr&gt; \"/tQtWuwvMf0hCc2QR2tkolwl7c3c.jpg\", \"/w9Z7A0GHEh…\n$ production_companies  &lt;chr&gt; \"[{'name': 'Paramount Pictures', 'id': 4}, {'nam…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'US', 'name': 'United States of…\n$ release_date          &lt;chr&gt; \"2/20/15\", \"8/6/04\", \"10/10/14\", \"3/9/12\", \"2/5/…\n$ runtime               &lt;dbl&gt; 93, 113, 105, 122, 118, 83, 92, 84, 100, 91, 119…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}]\", \"[{'…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"The Laws of Space and Time are About to be Viol…\n$ title                 &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ Keywords              &lt;chr&gt; \"[{'id': 4379, 'name': 'time travel'}, {'id': 96…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 4, 'character': 'Lou', 'credit_id'…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '59ac067c92514107af02c8c8', 'dep…\n$ revenue               &lt;dbl&gt; 12314651, 95149435, 13092000, 16000000, 3923970,…\n\nglimpse(d_test)\n\nRows: 4,398\nColumns: 22\n$ id                    &lt;dbl&gt; 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, …\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 34055, 'name': 'Pokémon Collection', 'p…\n$ budget                &lt;dbl&gt; 0.00e+00, 8.80e+04, 0.00e+00, 6.80e+06, 2.00e+06…\n$ genres                &lt;chr&gt; \"[{'id': 12, 'name': 'Adventure'}, {'id': 16, 'n…\n$ homepage              &lt;chr&gt; \"http://www.pokemon.com/us/movies/movie-pokemon-…\n$ imdb_id               &lt;chr&gt; \"tt1226251\", \"tt0051380\", \"tt0118556\", \"tt125595…\n$ original_language     &lt;chr&gt; \"ja\", \"en\", \"en\", \"fr\", \"en\", \"en\", \"de\", \"en\", …\n$ original_title        &lt;chr&gt; \"ディアルガVSパルキアVSダークライ\", \"Attack of t…\n$ overview              &lt;chr&gt; \"Ash and friends (this time accompanied by newco…\n$ popularity            &lt;dbl&gt; 3.851534, 3.559789, 8.085194, 8.596012, 3.217680…\n$ poster_path           &lt;chr&gt; \"/tnftmLMemPLduW6MRyZE0ZUD19z.jpg\", \"/9MgBNBqlH1…\n$ production_companies  &lt;chr&gt; NA, \"[{'name': 'Woolner Brothers Pictures Inc.',…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'JP', 'name': 'Japan'}, {'iso_3…\n$ release_date          &lt;chr&gt; \"7/14/07\", \"5/19/58\", \"5/23/97\", \"9/4/10\", \"2/11…\n$ runtime               &lt;dbl&gt; 90, 65, 100, 130, 92, 121, 119, 77, 120, 92, 88,…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}, {'iso_…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"Somewhere Between Time & Space... A Legend Is B…\n$ title                 &lt;chr&gt; \"Pokémon: The Rise of Darkrai\", \"Attack of the 5…\n$ Keywords              &lt;chr&gt; \"[{'id': 11451, 'name': 'pok√©mon'}, {'id': 1155…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 3, 'character': 'Tonio', 'credit_i…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '52fe44e7c3a368484e03d683', 'dep…\n\n\nTrain-Set verschlanken\n\nd_train &lt;-\n  d_train_raw %&gt;% \n  select(popularity, runtime, revenue, budget, release_date) \n\nDatensatz kennenlernen\n\nlibrary(visdat)\nvis_dat(d_train)\n\n\n\n\nFehlende Werte prüfen\nWelche Spalten haben viele fehlende Werte?\n\nvis_miss(d_train)\n\n\n\n\nMit {VIM} kann man einen Datensatz gut auf fehlende Werte hin untersuchen:\n\naggr(d_train)\n\n\n\n\nRezept definieren\n\nrec1 &lt;-\n  recipe(revenue ~ ., data = d_train) %&gt;% \n  #update_role(all_predictors(), new_role = \"id\") %&gt;% \n  #update_role(popularity, runtime, revenue, budget, original_language) %&gt;% \n  #update_role(revenue, new_role = \"outcome\") %&gt;% \n  step_mutate(budget = if_else(budget &lt; 10, 10, budget)) %&gt;% \n  step_log(budget) %&gt;% \n  step_mutate(release_date = mdy(release_date)) %&gt;% \n  step_date(release_date, features = c(\"year\"), keep_original_cols = FALSE) %&gt;% \n  step_impute_bag(all_predictors()) %&gt;% \n  step_dummy(all_nominal())\n\nrec1\n\n\ntidy(rec1)\n\n# A tibble: 6 × 6\n  number operation type       trained skip  id              \n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;      &lt;lgl&gt;   &lt;lgl&gt; &lt;chr&gt;           \n1      1 step      mutate     FALSE   FALSE mutate_7GZRr    \n2      2 step      log        FALSE   FALSE log_9bqVu       \n3      3 step      mutate     FALSE   FALSE mutate_bGMkA    \n4      4 step      date       FALSE   FALSE date_mHs3V      \n5      5 step      impute_bag FALSE   FALSE impute_bag_57NLQ\n6      6 step      dummy      FALSE   FALSE dummy_l6So6     \n\n\nCheck das Rezept \n\nprep(rec1, verbose = TRUE)\n\noper 1 step mutate [training] \noper 2 step log [training] \noper 3 step mutate [training] \noper 4 step date [training] \noper 5 step impute bag [training] \noper 6 step dummy [training] \nThe retained training set is ~ 0.1 Mb  in memory.\n\n\n\nd_train_baked &lt;- \nprep(rec1) %&gt;% \n  bake(new_data = NULL) \n\nd_train_baked\n\n# A tibble: 3,000 × 5\n   popularity runtime budget  revenue release_date_year\n        &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;             &lt;int&gt;\n 1      6.58       93  16.5  12314651              2015\n 2      8.25      113  17.5  95149435              2004\n 3     64.3       105  15.0  13092000              2014\n 4      3.17      122  14.0  16000000              2012\n 5      1.15      118   2.30  3923970              2009\n 6      0.743      83  15.9   3261638              1987\n 7      7.29       92  16.5  85446075              2012\n 8      1.95       84   2.30  2586511              2004\n 9      6.90      100   2.30 34327391              1996\n10      4.67       91  15.6  18750246              2003\n# ℹ 2,990 more rows\n\n\n\nd_train_baked %&gt;% \n  map_df(~ sum(is.na(.)))\n\n# A tibble: 1 × 5\n  popularity runtime budget revenue release_date_year\n       &lt;int&gt;   &lt;int&gt;  &lt;int&gt;   &lt;int&gt;             &lt;int&gt;\n1          0       0      0       0                 0\n\n\nKeine fehlenden Werte mehr in den Prädiktoren.\nNach fehlenden Werten könnte man z.B. auch so suchen:\n\ndatawizard::describe_distribution(d_train_baked)\n\nVariable          |     Mean |       SD |      IQR |              Range | Skewness | Kurtosis |    n | n_Missing\n----------------------------------------------------------------------------------------------------------------\npopularity        |     8.46 |    12.10 |     6.88 | [1.00e-06, 294.34] |    14.38 |   280.10 | 3000 |         0\nruntime           |   107.85 |    22.08 |    24.00 |     [0.00, 338.00] |     1.02 |     8.20 | 3000 |         0\nbudget            |    12.51 |     6.44 |    14.88 |      [2.30, 19.76] |    -0.87 |    -1.09 | 3000 |         0\nrevenue           | 6.67e+07 | 1.38e+08 | 6.66e+07 |   [1.00, 1.52e+09] |     4.54 |    27.78 | 3000 |         0\nrelease_date_year |  2004.58 |    15.48 |    17.00 | [1969.00, 2068.00] |     1.22 |     3.94 | 3000 |         0\n\n\nSo bekommt man gleich noch ein paar Infos über die Verteilung der Variablen. Praktische Sache.\nCheck Test-Sample\nDas Test-Sample backen wir auch mal. Das hat nur den Zwecke, zu prüfen, ob unser Rezept auch richtig funktioniert. Das Preppen und Backen des Test-Samples wir automatisch von predict() bzw. last_fit() erledigt.\nWichtig: Wir preppen den Datensatz mit dem Train-Sample, auch wenn wir das Test-Sample backen wollen.\n\nrec1_prepped &lt;- prep(rec1)\n\nd_test_baked &lt;-\n  bake(rec1_prepped, new_data = d_test)\n\nd_test_baked %&gt;% \n  head()\n\n# A tibble: 6 × 4\n  popularity runtime budget release_date_year\n       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;             &lt;int&gt;\n1       3.85      90   2.30              2007\n2       3.56      65  11.4               2058\n3       8.09     100   2.30              1997\n4       8.60     130  15.7               2010\n5       3.22      92  14.5               2005\n6       8.68     121   2.30              1996\n\n\n\n\nKreuzvalidierung\nNur aus Zeitgründen ist hier \\(v=5\\) eingestellt; besser wäre z.B. \\(v=10\\) und \\(r=3\\).\n\ncv_scheme &lt;- vfold_cv(d_train,\n                      v = 5, \n                      repeats = 1)\n\n\n\nModelle\nBaum\n\nmod_tree &lt;-\n  decision_tree(cost_complexity = tune(),\n                tree_depth = tune(),\n                mode = \"regression\")\n\nRandom Forest\n\nmod_rf &lt;-\n  rand_forest(mtry = tune(),\n              min_n = tune(),\n              trees = 1000,\n              mode = \"regression\") \n\nXGBoost\n\nmod_boost &lt;- boost_tree(mtry = tune(),\n                        min_n = tune(),\n                        trees = tune()) %&gt;% \n  set_mode(\"regression\")\n\nLM\n\nmod_lm &lt;-\n  linear_reg()\n\nWorkflow-Set\n\npreproc &lt;- list(rec1 = rec1)\nmodels &lt;- list(tree1 = mod_tree, \n               rf1 = mod_rf, \n               boost1 = mod_boost, \n               lm1 = mod_lm)\n \nall_workflows &lt;- workflow_set(preproc, models)\n\nFitten und tunen\n\n\nFitten/Tunen\nWenn man das Ergebnis-Objekt abgespeichert hat, dann kann man es einfach laden, spart Rechenzeit (der Tag ist kurz):\n\nresult_obj_file &lt;- \"tmdb_model_set.rds\"\n\n(Davon ausgehend, dass die Datei im Arbeitsverzeichnis liegt.)\nDann könnte man Folgendes machen:\n\nif (file.exists(result_obj_file)) {\n  tmdb_model_set &lt;- read_rds(result_obj_file)\n} else {\n  \n  &lt;computer_workflow_set_and_be_happy&gt;\n  \n}\n\nAchtung Gefährlich! Zwischenspeichern auf der Festplatte birgt die Gefahr, dass man vergisst, das Objekt auf der Festplatte zu aktualisieren und Sie noch in einem Jahr und nach 100 Updates Ihres Rezepts immer noch das uralte Objekt von der Festplatte laden …\nUm Rechenzeit zu sparen, kann man das Ergebnisobjekt abspeichern, dann muss man beim nächsten Mal nicht wieder von Neuem berechnen:\n\n#write_rds(tmdb_model_set, \"objects/tmdb_model_set.rds\")\n\nHier berechnen wir aber lieber das Modell neu:\n\ntic()\ntmdb_model_set &lt;-\n  all_workflows %&gt;% \n  workflow_map(\n    resamples = cv_scheme,\n    #grid = 10,\n    metrics = metric_set(rmse),\n    seed = 42,  # reproducibility\n    control = control_grid(verbose = FALSE))\ntoc()\n\n225.039 sec elapsed\n\n\nOhne Parallelisierung dauerte die Berechnung bei mir knapp 4 Minuten (225 Sec). Ich habe hier auf Parallelisierung verzichtet, da Tidymodels einen Fehler aufwarf mit der Begründung, dass das Paket lubridate in den parallel laufenden Instanzen nicht verfügbar sei (und der parameter pckgs = 'lubridate keine Linderung brachte).\nCheck:\n\ntmdb_model_set[[\"result\"]][[1]]\n\n# Tuning results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits             id    .metrics          .notes          \n  &lt;list&gt;             &lt;chr&gt; &lt;list&gt;            &lt;list&gt;          \n1 &lt;split [2400/600]&gt; Fold1 &lt;tibble [10 × 6]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [2400/600]&gt; Fold2 &lt;tibble [10 × 6]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [2400/600]&gt; Fold3 &lt;tibble [10 × 6]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [2400/600]&gt; Fold4 &lt;tibble [10 × 6]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [2400/600]&gt; Fold5 &lt;tibble [10 × 6]&gt; &lt;tibble [0 × 3]&gt;\n\n\nFinalisieren\nWelcher Algorithmus schneidet am besten ab?\nGenauer gesagt, welches Modell, denn es ist ja nicht nur ein Algorithmus, sondern ein Algorithmus plus ein Rezept plus die Parameterinstatiierung plus ein spezifischer Datensatz.\n\ntune::autoplot(tmdb_model_set)\n\n\n\n\nR-Quadrat ist nicht so entscheidend; rmse ist wichtiger.\nDie Ergebnislage ist nicht ganz klar, aber einiges spricht für das Random-Forest-Modell.\n\ntmdb_model_set %&gt;% \n  collect_metrics() %&gt;% \n  arrange(mean) %&gt;% \n  slice_head(n = 10)\n\n# A tibble: 10 × 9\n   wflow_id .config        preproc model .metric .estimator   mean     n std_err\n   &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;\n 1 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.10e7     5  3.37e6\n 2 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.12e7     5  3.37e6\n 3 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.14e7     5  3.29e6\n 4 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.14e7     5  3.56e6\n 5 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.14e7     5  3.42e6\n 6 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.15e7     5  3.43e6\n 7 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.19e7     5  3.55e6\n 8 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.23e7     5  3.67e6\n 9 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.28e7     5  3.66e6\n10 rec1_rf1 Preprocessor1… recipe  rand… rmse    standard   8.30e7     5  3.55e6\n\n\n\nbest_model_params &lt;-\nextract_workflow_set_result(tmdb_model_set, \"rec1_rf1\") %&gt;% \n  select_best()\n\nbest_model_params\n\n# A tibble: 1 × 3\n   mtry min_n .config              \n  &lt;int&gt; &lt;int&gt; &lt;chr&gt;                \n1     2    24 Preprocessor1_Model06\n\n\nFinalisieren\n\nbest_wf &lt;- \nall_workflows %&gt;% \n  extract_workflow(\"rec1_rf1\")\n\nbest_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: rand_forest()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n6 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_mutate()\n• step_date()\n• step_impute_bag()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nRandom Forest Model Specification (regression)\n\nMain Arguments:\n  mtry = tune()\n  trees = 1000\n  min_n = tune()\n\nComputational engine: ranger \n\n\n\nbest_wf_finalized &lt;- \n  best_wf %&gt;% \n  finalize_workflow(best_model_params)\n\nbest_wf_finalized\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: rand_forest()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n6 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_mutate()\n• step_date()\n• step_impute_bag()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nRandom Forest Model Specification (regression)\n\nMain Arguments:\n  mtry = 2\n  trees = 1000\n  min_n = 24\n\nComputational engine: ranger \n\n\nFinal Fit\n\nfit_final &lt;-\n  best_wf_finalized %&gt;% \n  fit(d_train)\n\nfit_final\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: rand_forest()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n6 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_mutate()\n• step_date()\n• step_impute_bag()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nRanger result\n\nCall:\n ranger::ranger(x = maybe_data_frame(x), y = y, mtry = min_cols(~2L,      x), num.trees = ~1000, min.node.size = min_rows(~24L, x),      num.threads = 1, verbose = FALSE, seed = sample.int(10^5,          1)) \n\nType:                             Regression \nNumber of trees:                  1000 \nSample size:                      3000 \nNumber of independent variables:  4 \nMtry:                             2 \nTarget node size:                 24 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       6.58465e+15 \nR squared (OOB):                  0.6518847 \n\n\n\nd_test$revenue &lt;- NA\n\nfinal_preds &lt;- \n  fit_final %&gt;% \n  predict(new_data = d_test) %&gt;% \n  bind_cols(d_test)\n\nSubmission\n\nsubmission_df &lt;-\n  final_preds %&gt;% \n  select(id, revenue = .pred)\n\nAbspeichern und einreichen:\n\n#write_csv(submission_df, file = \"submission.csv\")\n\nKaggle Score\nDiese Submission erzielte einen Score von 4.79227 (RMSLE).\n\nsol &lt;- 4.79227\n\n\nCategories:\n\nds1\ntidymodels\nstatlearning\ntmdb\nrandom-forest\nnum"
  },
  {
    "objectID": "posts/sicherheit/sicherheit.html",
    "href": "posts/sicherheit/sicherheit.html",
    "title": "sicherheit",
    "section": "",
    "text": "Aufgabe\nEin Betreiber eines komplexen technischen Geräts versucht, Sie zu beruhigen. Die Wahrscheinlichkeit eines Ausfalls (Ereignis \\(A\\)) betrage nur 0.001. Allerdings pro Komponente des Geräts. Das Gerät besteht aus 10 Komponenten.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nUnterstellen Sie Unabhängkeit der einzelnen Ereignisse.\n\n         \n\n\nLösung\nDen Ausfall der Komponente \\(i\\) bezeichnen wir als \\(A_i\\) und entsprechend \\(Pr(A_i) = 0.001\\).\n\\(Pr(\\neg A_i) = 1- Pr(A_i)\\)\n\nPr_Ai &lt;- 0.001\nPr_negAi &lt;- 1 - Pr_Ai\nPr_negAi\n\n[1] 0.999\n\n\nDie Wahrscheinlichkeit, dass keine der Komponenten ausfällt, ist dann über den Multiplikationssatzu bestimmen:\n\nPr_negA &lt;- Pr_negAi^10\nPr_negA\n\n[1] 0.9900449\n\n\nDie Lösung lautet 0.9900449.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html",
    "href": "posts/tmdb04/tmdb04.html",
    "title": "tmdb04",
    "section": "",
    "text": "Wir bearbeiten hier die Fallstudie TMDB Box Office Prediction - Can you predict a movie’s worldwide box office revenue?, ein Kaggle-Prognosewettbewerb.\nZiel ist es, genaue Vorhersagen zu machen, in diesem Fall für Filme.\nDie Daten können Sie von der Kaggle-Projektseite beziehen oder so:\n\nd_train_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/train.csv\"\nd_test_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/test.csv\""
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#train-set-verschlanken",
    "href": "posts/tmdb04/tmdb04.html#train-set-verschlanken",
    "title": "tmdb04",
    "section": "Train-Set verschlanken",
    "text": "Train-Set verschlanken\n\nd_train_raw_reduced &lt;-\n  d_train_raw %&gt;% \n  select(id, popularity, runtime, revenue, budget)"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#test-set-verschlanken",
    "href": "posts/tmdb04/tmdb04.html#test-set-verschlanken",
    "title": "tmdb04",
    "section": "Test-Set verschlanken",
    "text": "Test-Set verschlanken\n\nd_test &lt;-\n  d_test_raw %&gt;% \n  select(id,popularity, runtime, budget)"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#outcome-logarithmieren",
    "href": "posts/tmdb04/tmdb04.html#outcome-logarithmieren",
    "title": "tmdb04",
    "section": "Outcome logarithmieren",
    "text": "Outcome logarithmieren\nDer Outcome sollte nicht im Rezept transformiert werden (vgl. Part 3, S. 30, in dieser Unterlage).\n\nd_train &lt;-\n  d_train_raw_reduced %&gt;% \n  mutate(revenue = if_else(revenue &lt; 10, 10, revenue)) %&gt;% \n  mutate(revenue = log(revenue)) \n\nPrüfen, ob das funktioniert hat:\n\nd_train$revenue %&gt;% is.infinite() %&gt;% any()\n\n[1] FALSE\n\n\nKeine unendlichen Werte mehr, auf dieser Basis können wir weitermachen."
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#rezept-definieren",
    "href": "posts/tmdb04/tmdb04.html#rezept-definieren",
    "title": "tmdb04",
    "section": "Rezept definieren",
    "text": "Rezept definieren\n\nrec2 &lt;-\n  recipe(revenue ~ ., data = d_train) %&gt;% \n  step_mutate(budget = ifelse(budget == 0, NA, budget)) %&gt;%  # log mag keine 0\n  step_log(budget) %&gt;% \n  step_impute_knn(all_predictors()) %&gt;% \n  step_dummy(all_nominal_predictors())  %&gt;% \n  update_role(id, new_role = \"id\")\n\nrec2\n\nSchauen Sie mal, der Log mag keine Nullen:\n\nx &lt;- c(1,2, NA, 0)\n\nlog(x)\n\n[1] 0.0000000 0.6931472        NA      -Inf\n\n\nDa \\(log(0) = -\\infty\\). Aus dem Grund wandeln wir 0 lieber in NA um.\n\ntidy(rec2)\n\n# A tibble: 4 × 6\n  number operation type       trained skip  id              \n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;      &lt;lgl&gt;   &lt;lgl&gt; &lt;chr&gt;           \n1      1 step      mutate     FALSE   FALSE mutate_5IvPK    \n2      2 step      log        FALSE   FALSE log_HuvzM       \n3      3 step      impute_knn FALSE   FALSE impute_knn_bzUap\n4      4 step      dummy      FALSE   FALSE dummy_Gm3kh"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#check-das-rezept",
    "href": "posts/tmdb04/tmdb04.html#check-das-rezept",
    "title": "tmdb04",
    "section": "Check das Rezept",
    "text": "Check das Rezept\nWir berechnen das Rezept:\n\nrec2_prepped &lt;-\n  prep(rec2, verbose = TRUE)\n\noper 1 step mutate [training] \noper 2 step log [training] \noper 3 step impute knn [training] \noper 4 step dummy [training] \nThe retained training set is ~ 0.12 Mb  in memory.\n\nrec2_prepped\n\nDas ist noch nicht auf einen Datensatz angewendet! Lediglich die steps wurden vorbereitet, “präpariert”: z.B. “Diese Dummy-Variablen impliziert das Rezept”.\nSo sieht das dann aus, wenn man das präparierte Rezept auf das Train-Sample anwendet:\n\nd_train_baked2 &lt;-\n  rec2_prepped %&gt;% \n  bake(new_data = NULL) \n\nhead(d_train_baked2)\n\n# A tibble: 6 × 5\n     id popularity runtime budget revenue\n  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1     1      6.58       93   16.5    16.3\n2     2      8.25      113   17.5    18.4\n3     3     64.3       105   15.0    16.4\n4     4      3.17      122   14.0    16.6\n5     5      1.15      118   15.8    15.2\n6     6      0.743      83   15.9    15.0\n\n\n\nd_train_baked2 %&gt;% \n  map_df(sum_isna)\n\n# A tibble: 1 × 5\n     id popularity runtime budget revenue\n  &lt;int&gt;      &lt;int&gt;   &lt;int&gt;  &lt;int&gt;   &lt;int&gt;\n1     0          0       0      0       0\n\n\nKeine fehlenden Werte mehr in den Prädiktoren.\nNach fehlenden Werten könnte man z.B. auch so suchen:\n\ndatawizard::describe_distribution(d_train_baked2)\n\nVariable   |    Mean |     SD |     IQR |              Range | Skewness | Kurtosis |    n | n_Missing\n-----------------------------------------------------------------------------------------------------\nid         | 1500.50 | 866.17 | 1500.50 |    [1.00, 3000.00] |     0.00 |    -1.20 | 3000 |         0\npopularity |    8.46 |  12.10 |    6.88 | [1.00e-06, 294.34] |    14.38 |   280.10 | 3000 |         0\nruntime    |  107.85 |  22.08 |   24.00 |     [0.00, 338.00] |     1.02 |     8.20 | 3000 |         0\nbudget     |   16.09 |   1.89 |    1.90 |      [0.00, 19.76] |    -2.93 |    18.71 | 3000 |         0\nrevenue    |   15.97 |   3.04 |    3.37 |      [2.30, 21.14] |    -1.60 |     3.82 | 3000 |         0\n\n\nSo bekommt man gleich noch ein paar Infos über die Verteilung der Variablen. Praktische Sache."
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#check-test-sample",
    "href": "posts/tmdb04/tmdb04.html#check-test-sample",
    "title": "tmdb04",
    "section": "Check Test-Sample",
    "text": "Check Test-Sample\nDas Test-Sample backen wir auch mal, um zu prüfen, das alles läuft:\n\nd_test_baked2 &lt;-\n  bake(rec2_prepped, new_data = d_test)\n\nd_test_baked2 %&gt;% \n  head()\n\n# A tibble: 6 × 4\n     id popularity runtime budget\n  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1  3001       3.85      90   15.8\n2  3002       3.56      65   11.4\n3  3003       8.09     100   16.4\n4  3004       8.60     130   15.7\n5  3005       3.22      92   14.5\n6  3006       8.68     121   16.1\n\n\nSieht soweit gut aus."
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#lm",
    "href": "posts/tmdb04/tmdb04.html#lm",
    "title": "tmdb04",
    "section": "LM",
    "text": "LM\n\nmod_lm &lt;-\n  linear_reg()"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#finalisieren-1",
    "href": "posts/tmdb04/tmdb04.html#finalisieren-1",
    "title": "tmdb04",
    "section": "Finalisieren",
    "text": "Finalisieren\nFinalisieren bedeutet:\n\nBesten Workflow identifizieren (zur Erinnerung: Workflow = Rezept + Modell)\nDen besten Workflow mit den optimalen Modell-Parametern ausstatten\nDamit dann den ganzen Train-Datensatz fitten\nAuf dieser Basis das Test-Sample vorhersagen\n\n\nbest_wf2 &lt;- \nall_workflows2 %&gt;% \n  extract_workflow(\"rec1_lm1\")\n\nbest_wf2\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n4 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_impute_knn()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n\n\nbest_wf_finalized2 &lt;- \n  best_wf2 %&gt;% \n  finalize_workflow(best_model_params2)\n\nbest_wf_finalized2\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n4 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_impute_knn()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#final-fit",
    "href": "posts/tmdb04/tmdb04.html#final-fit",
    "title": "tmdb04",
    "section": "Final Fit",
    "text": "Final Fit\n\nfit_final2 &lt;-\n  best_wf_finalized2 %&gt;% \n  fit(d_train)\n\nfit_final2\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n4 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_impute_knn()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n(Intercept)   popularity      runtime       budget  \n    1.26186      0.03755      0.01289      0.80752  \n\n\n\npreds &lt;- \nfit_final2 %&gt;% \n  predict(new_data = d_test)\n\nhead(preds)\n\n# A tibble: 6 × 1\n  .pred\n  &lt;dbl&gt;\n1  15.3\n2  11.4\n3  16.1\n4  16.0\n5  14.3\n6  16.1\n\n\nAchtung, wenn die Outcome-Variable im Rezept verändert wurde, dann würde obiger Code nicht durchlaufen.\nGrund ist hier beschrieben:\n\nWhen predict() is used, it only has access to the predictors (mirroring how this would work with new samples). Even if the outcome column is present, it is not exposed to the recipe. This is generally a good idea so that we can avoid information leakage.\n\n\nOne approach is the use the skip = TRUE option in step_log() so that it will avoid that step during predict() and/or bake(). However, if you are using this recipe with the tune package, there will still be an issue because the metric function(s) would get the predictions in log units and the observed outcome in the original units.\n\n\nThe better approach is, for simple transformations like yours, to log the outcome outside of the recipe (before data analysis and the initial split)."
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#submission-df",
    "href": "posts/tmdb04/tmdb04.html#submission-df",
    "title": "tmdb04",
    "section": "Submission df",
    "text": "Submission df\n\nsubmission_df &lt;-\n  d_test %&gt;% \n  select(id) %&gt;% \n  bind_cols(preds) %&gt;% \n  rename(revenue = .pred)\n\nhead(submission_df)\n\n# A tibble: 6 × 2\n     id revenue\n  &lt;dbl&gt;   &lt;dbl&gt;\n1  3001    15.3\n2  3002    11.4\n3  3003    16.1\n4  3004    16.0\n5  3005    14.3\n6  3006    16.1"
  },
  {
    "objectID": "posts/tmdb04/tmdb04.html#zurücktransformieren",
    "href": "posts/tmdb04/tmdb04.html#zurücktransformieren",
    "title": "tmdb04",
    "section": "Zurücktransformieren",
    "text": "Zurücktransformieren\n\nsubmission_df &lt;-\n  submission_df %&gt;% \n  mutate(revenue = exp(revenue)-1)\n\nhead(submission_df)\n\n# A tibble: 6 × 2\n     id   revenue\n  &lt;dbl&gt;     &lt;dbl&gt;\n1  3001  4435143.\n2  3002    91755.\n3  3003  9782986.\n4  3004  8573795.\n5  3005  1598106.\n6  3006 10061439.\n\n\nHier ein Beispiel, warum \\(e^x-1\\) genauer ist für kleine Zahlen als \\(e^x\\).\nAbspeichern und einreichen:\n\nwrite_csv(submission_df, file = \"submission.csv\")"
  },
  {
    "objectID": "posts/filter-na3/filter-na3.html",
    "href": "posts/filter-na3/filter-na3.html",
    "title": "filter-na3",
    "section": "",
    "text": "Filtern Sie alle Zeilen mit fehlende Werte im Datensatz penguins!\nLiefern Sie die Spalten zurück, die fehlende Werte aufweisen."
  },
  {
    "objectID": "posts/filter-na3/filter-na3.html#setup",
    "href": "posts/filter-na3/filter-na3.html#setup",
    "title": "filter-na3",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnrow(d)\n\n[1] 344"
  },
  {
    "objectID": "posts/filter-na3/filter-na3.html#weg-1",
    "href": "posts/filter-na3/filter-na3.html#weg-1",
    "title": "filter-na3",
    "section": "Weg 1",
    "text": "Weg 1\n\nd_na_only &lt;-\n  d %&gt;% \n  filter(!complete.cases(.)) \n\nd_na_only %&gt;% \n  names()\n\n[1] \"rownames\"          \"species\"           \"island\"           \n[4] \"bill_length_mm\"    \"bill_depth_mm\"     \"flipper_length_mm\"\n[7] \"body_mass_g\"       \"sex\"               \"year\""
  },
  {
    "objectID": "posts/filter-na3/filter-na3.html#weg-2",
    "href": "posts/filter-na3/filter-na3.html#weg-2",
    "title": "filter-na3",
    "section": "Weg 2",
    "text": "Weg 2\n\nd %&gt;% \n  filter(if_any(everything(), ~ is.na(.))) %&gt;% \n  names()\n\n[1] \"rownames\"          \"species\"           \"island\"           \n[4] \"bill_length_mm\"    \"bill_depth_mm\"     \"flipper_length_mm\"\n[7] \"body_mass_g\"       \"sex\"               \"year\"             \n\n\n\nCategories:\n\n2023\neda\nna\nstring"
  },
  {
    "objectID": "posts/penguins-regr02/penguins-regr02.html",
    "href": "posts/penguins-regr02/penguins-regr02.html",
    "title": "penguins-regr02",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nAufgabe\nBeantworten Sie folgende Forschungsfrage:\nGibt es einen Zusammenhang von Schnabellänge und Gewicht (AV) bei Pinguinen?\nHinweise:\n\nNutzen Sie den Datensatz aus dem R-Paket palmerpenguins.\nVerwenden Sie das Rope-Verfahren\n\n         \n\n\nLösung\nWir rufen Stan:\n\nlibrary(rstanarm)\n\nLoading required package: Rcpp\n\n\nThis is rstanarm version 2.26.1\n\n\n- See https://mc-stan.org/rstanarm/articles/priors for changes to default priors!\n\n\n- Default priors may change, so it's safest to specify priors, even if equivalent to the defaults.\n\n\n- For execution on a local, multicore CPU with excess RAM we recommend calling\n\n\n  options(mc.cores = parallel::detectCores())\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\ndata(penguins)\nm1 &lt;- stan_glm(body_mass_g ~ bill_length_mm, \n               seed = 42,\n               refresh = 0,\n               data = penguins)\n\n\nplot(rope(m1))\n\n\n\n\nHier ist also keine klare Aussage zur Frage, ob der Effekt vernachlässigbar klein ist oder größer, möglich.\n\nCategories:\n\nlm\nbayes\nrope\nstring"
  },
  {
    "objectID": "posts/mariokart-mean3/mariokart-mean3.html",
    "href": "posts/mariokart-mean3/mariokart-mean3.html",
    "title": "mariokart-mean3",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie den mittleren Verkaufspreis (total_pr) für Spiele, die sowohl neu sind als auch über Lenkräder (wheels) verfügen.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;-\nd  %&gt;% \n  filter(cond == \"new\" & wheels &gt; 0) %&gt;% \n  summarise(pr_mean = mean(total_pr))\n\nsolution\n\n   pr_mean\n1 54.28418\n\n\nLösung: 54.28.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nnum"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html",
    "href": "posts/vis-mtcars/vis-mtcars.html",
    "title": "vis-mtcars",
    "section": "",
    "text": "In dieser Fallstudie (YACSDA: Yet another Case Study on Data Analysis) untersuchen wir den Datensatz mtcars.\nSie können den Datensatz so beziehen:\nEin Codebook finden Sie hier.\nDie Forschungsfrage lautet:\nWas ist der Einfluss der Schaltung und der PS-Zahl auf den Spritverbrauch?\n\nAbhängige Variable (metrisch), y: Spritverbrauch (mpg)\nUnabhängige Variable 1 (nominal), x1: Schaltung (am)\nUnabhängige Variable 2 (metrisch), x2: PS-Zahl (hp)\n\nVisualisieren Sie dazu folgende Aspekte der Forschungsfrage!"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#umbenennen",
    "href": "posts/vis-mtcars/vis-mtcars.html#umbenennen",
    "title": "vis-mtcars",
    "section": "Umbenennen",
    "text": "Umbenennen"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-y-auf-zwei-verschiedene-arten.",
    "href": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-y-auf-zwei-verschiedene-arten.",
    "title": "vis-mtcars",
    "section": "Visualisieren Sie die Verteilung von y auf zwei verschiedene Arten.",
    "text": "Visualisieren Sie die Verteilung von y auf zwei verschiedene Arten.\nDas R-Paket ggpubr erstellt schöne Diagramme (basierend auf ggplot) auf einfache Art. Nehmen wir ein Dichtediagramm; die Variable y soll auf der X-Achse stehen:\n\n\n\n\n\nBeachten Sie, dass die Variable in Anführungsstriche gesetzt werden muss: x = \"y\".\nOder ein Histogramm:\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`."
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu.",
    "href": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu.",
    "title": "vis-mtcars",
    "section": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.",
    "text": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\nUm Diagramme mit Statistiken anzureichen, bietet sich das Paket ggstatsplot an:\n\n\n\n\n\nBeachten Sie, dass die Variable nicht in Anführungsstriche gesetzt werden darf: x = y."
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-x1-und-x2.",
    "href": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-x1-und-x2.",
    "title": "vis-mtcars",
    "section": "Visualisieren Sie die Verteilung von x1 und x2.",
    "text": "Visualisieren Sie die Verteilung von x1 und x2.\n\nx1\n\n\n\n\n\n\n\nx2"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-y-bedingt-auf-x1",
    "href": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-die-verteilung-von-y-bedingt-auf-x1",
    "title": "vis-mtcars",
    "section": "Visualisieren Sie die Verteilung von y bedingt auf x1",
    "text": "Visualisieren Sie die Verteilung von y bedingt auf x1\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: The following aesthetics were dropped during statistical transformation: fill\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\nOder so:\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`."
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu",
    "href": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu",
    "title": "vis-mtcars",
    "section": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu",
    "text": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-den-zusammenhang-von-y-und-x2",
    "href": "posts/vis-mtcars/vis-mtcars.html#visualisieren-sie-den-zusammenhang-von-y-und-x2",
    "title": "vis-mtcars",
    "section": "Visualisieren Sie den Zusammenhang von y und x2",
    "text": "Visualisieren Sie den Zusammenhang von y und x2"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#verbessern-sie-das-letzte-diagramm-so-dass-es-übersichtlicher-wird",
    "href": "posts/vis-mtcars/vis-mtcars.html#verbessern-sie-das-letzte-diagramm-so-dass-es-übersichtlicher-wird",
    "title": "vis-mtcars",
    "section": "Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird",
    "text": "Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird\nEs gibt mehrere Wege, das Diagramm übersichtlicher zu machen. Logarithmieren ist ein Weg.\n\n\n\n\n\nSynonym könnten wir schreiben:"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-dem-letzten-diagramm-relevante-kennzahlen-hinzu",
    "href": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-dem-letzten-diagramm-relevante-kennzahlen-hinzu",
    "title": "vis-mtcars",
    "section": "Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu",
    "text": "Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-dem-diagramm-zum-zusammenhang-von-y-und-x2-eine-regressionsgerade-hinzu",
    "href": "posts/vis-mtcars/vis-mtcars.html#fügen-sie-dem-diagramm-zum-zusammenhang-von-y-und-x2-eine-regressionsgerade-hinzu",
    "title": "vis-mtcars",
    "section": "Fügen Sie dem Diagramm zum Zusammenhang von y und x2 eine Regressionsgerade hinzu",
    "text": "Fügen Sie dem Diagramm zum Zusammenhang von y und x2 eine Regressionsgerade hinzu"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#ersetzen-sie-die-regressionsgerade-durch-eine-loess-gerade",
    "href": "posts/vis-mtcars/vis-mtcars.html#ersetzen-sie-die-regressionsgerade-durch-eine-loess-gerade",
    "title": "vis-mtcars",
    "section": "Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade",
    "text": "Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#gruppieren-sie-das-letzte-diagramm-nach-x1",
    "href": "posts/vis-mtcars/vis-mtcars.html#gruppieren-sie-das-letzte-diagramm-nach-x1",
    "title": "vis-mtcars",
    "section": "Gruppieren Sie das letzte Diagramm nach x1",
    "text": "Gruppieren Sie das letzte Diagramm nach x1"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#dichotomisieren-sie-y-und-zählen-sie-die-häufigkeiten",
    "href": "posts/vis-mtcars/vis-mtcars.html#dichotomisieren-sie-y-und-zählen-sie-die-häufigkeiten",
    "title": "vis-mtcars",
    "section": "Dichotomisieren Sie y und zählen Sie die Häufigkeiten",
    "text": "Dichotomisieren Sie y und zählen Sie die Häufigkeiten\nNehmen wir einen Mediansplit, um zu dichotomisieren.\n\n\n\n\n\nGleich viele! Das sollte nicht verwundern."
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#gruppieren-sie-das-letzte-diagramm-nach-den-stufen-von-x1",
    "href": "posts/vis-mtcars/vis-mtcars.html#gruppieren-sie-das-letzte-diagramm-nach-den-stufen-von-x1",
    "title": "vis-mtcars",
    "section": "Gruppieren Sie das letzte Diagramm nach den Stufen von x1",
    "text": "Gruppieren Sie das letzte Diagramm nach den Stufen von x1\n\n\n  y_dicho x1  n\n1    high  0  4\n2    high  1 11\n3     low  0 15\n4     low  1  2"
  },
  {
    "objectID": "posts/vis-mtcars/vis-mtcars.html#variieren-sie-das-letzte-diagramm-so-dass-anteile-relative-häufigkeiten-statt-absoluter-häufigkeiten-gezeigt-werden",
    "href": "posts/vis-mtcars/vis-mtcars.html#variieren-sie-das-letzte-diagramm-so-dass-anteile-relative-häufigkeiten-statt-absoluter-häufigkeiten-gezeigt-werden",
    "title": "vis-mtcars",
    "section": "Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden",
    "text": "Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden\n\n\n  y_dicho x1  n prop\n1    high  0  4 0.12\n2    high  1 11 0.34\n3     low  0 15 0.47\n4     low  1  2 0.06\n\n\nCheck:\n\n\n  sum(prop)\n1      0.99\n\n\nGut! Die Anteile summieren sich zu ca. 1 (100 Prozent).\n\n\n\n\n\nMan beachten, dass sich die Anteile auf das “Gesamt-N” beziehen.\n\nCategories:\n\nvis\nyacsda\nggquick\nmtcars\nstring"
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html",
    "title": "germeval08-extract-spacy",
    "section": "",
    "text": "Extrahieren Sie deutsche Worembedding aus SpaCy für den GermEval-Datensatz (Train).\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#setup",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#setup",
    "title": "germeval08-extract-spacy",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n\nimport spacy\nimport de_core_news_sm\nimport pandas as pd\nnlp = de_core_news_sm.load()"
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#daten-in-python-importieren",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#daten-in-python-importieren",
    "title": "germeval08-extract-spacy",
    "section": "Daten in Python importieren",
    "text": "Daten in Python importieren\n\ncsv_file_path = '/home/sebastian/git-repos/pradadata/data-raw/germeval_train.csv'\n\ngermeval_train = pd.read_csv(csv_file_path)"
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#vorbereiten",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#vorbereiten",
    "title": "germeval08-extract-spacy",
    "section": "Vorbereiten",
    "text": "Vorbereiten\nAls String konvertieren:\n\ntweets = germeval_train['text']\ntweets2 = tweets.astype(str)\ntweets3 = tweets2.to_string()\n\nNLP-Features berechnen:\n\ndoc = nlp(tweets3)"
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#wortvektoren-berechnen",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#wortvektoren-berechnen",
    "title": "germeval08-extract-spacy",
    "section": "Wortvektoren berechnen",
    "text": "Wortvektoren berechnen\n\nwordvec = [token.vector for token in doc]\nlen(wordvec)"
  },
  {
    "objectID": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#export",
    "href": "posts/germeval08-extract-spacy/germeval08-extract-spacy.html#export",
    "title": "germeval08-extract-spacy",
    "section": "Export",
    "text": "Export\nals Pandas DF:\n\ndf = pd.DataFrame(wordvec)\n\ndimensions = df.shape\ndimensions\n\nIn CSV schreiben:\n\ndf.to_csv(\"germeval_spacy_embed.csv\")\n\n\nCategories:\n\nwordembedding\ntextmining\npython\nstring"
  },
  {
    "objectID": "posts/twitter05/twitter05.html",
    "href": "posts/twitter05/twitter05.html",
    "title": "twitter05",
    "section": "",
    "text": "Exercise\nLaden Sie \\(n=10^k\\) Tweets von Twitter herunter (mit \\(k=2\\)) via der Twitter API; Suchterm soll sein “@karl_lauterbach”. Bereiten Sie die Textdaten mit grundlegenden Methoden des Textminings auf (Tokenisieren, Stopwörter entfernen, Zahlen entfernen, …).\nNutzen Sie die Daten, um eine Sentimentanalyse zu erstellen.\n         \n\n\nSolution\nNutzen Sie die Daten der letzten Aufgabe, um eine Sentimentanalyse zu erstellen.\nZuerst muss man sich anmelden und die Tweets herunterladen; dieser Teil ist hier nicht aufgeführt (s. andere Aufgaben).\n\nlibrary(rtweet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks rtweet::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytext)\nlibrary(lsa)  # Stopwörter\n\nLoading required package: SnowballC\n\nlibrary(SnowballC)  # Stemming\n\nBeachten Sie, dass die Spalten je nach Funktion, die Sie zum Herunterladen der Tweets verwenden, unterschiedlich heißen können.\n\nkarl2 &lt;- \n  karl1 %&gt;% \n  select(contains(\"text\"))\n\n\nkarl3 &lt;- \n  karl2 %&gt;% \n  unnest_tokens(output = word, input = text)\n\n\nkarl4 &lt;- \nkarl3 %&gt;% \n  anti_join(tibble(word = lsa::stopwords_de)) \n\nJoining with `by = join_by(word)`\n\n\n\nkarl5 &lt;- \n  karl4 %&gt;% \n  mutate(word = str_replace_na(word, \"^[:digit:]+$\")) %&gt;% \n  mutate(word = str_replace_na(word, \"hptts?://\\\\w+\")) %&gt;% \n  mutate(word = str_replace_na(word, \" +\")) %&gt;% \n  drop_na()\n\n\ndata(sentiws, package = \"pradadata\")\n\n\nkarl7 &lt;-\n  karl5 %&gt;% \n  inner_join(sentiws)\n\nJoining with `by = join_by(word)`\n\n\n\nkarl7 %&gt;% \n  group_by(neg_pos) %&gt;% \n  summarise(senti_avg = mean(value, na.rm = TRUE),\n            senti_sd = sd(value, na.rm = TRUE),\n            senti_n = n())\n\n# A tibble: 2 × 4\n  neg_pos senti_avg senti_sd senti_n\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;int&gt;\n1 neg        -0.347    0.186       2\n2 pos         0.167    0.283       3\n\n\nAchtung, Sentimentanalyse sollte vor dem Stemming kommen.\n\nCategories:\n\ntextmining\ntwitter"
  },
  {
    "objectID": "posts/Wertberechnen/Wertberechnen.html",
    "href": "posts/Wertberechnen/Wertberechnen.html",
    "title": "Wertberechnen",
    "section": "",
    "text": "Aufgabe\nWelchen Wert bzw. welches Ergebnis liefert folgende R-Syntax für ergebnis zurück?\nx hat zu Beginn den Wert 3.\nHinweis: sqrt(x) liefert die (positive) Quadratwurzel von x zurück.\n         \n\n\nLösung\nEs wird 2 zurückgeliefert.\n\nCategories:\n\nR\ndyn\nnum"
  },
  {
    "objectID": "posts/kausal24/kausal28.html",
    "href": "posts/kausal24/kausal28.html",
    "title": "kausal24",
    "section": "",
    "text": "library(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\n\nGegeben sei der DAG (Graph) g (s. u.). Der DAG verfügt über mehrere Variablen, die als Knoten im Graph dargestellt sind.\n\ng &lt;-\n  dagify(\n    y ~ z + m,\n    m ~ x + z,\n    exposure = \"x\",\n    outcome = \"y\"\n  )\n\nHier ist die Definition des DAGs:\n\n\ndag {\nm\nx [exposure]\ny [outcome]\nz\nm -&gt; y\nx -&gt; m\nz -&gt; m\nz -&gt; y\n}\n\n\nUnd so sieht er aus:\n\nggdag(g) + theme_dag_blank()\n\n\n\n\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x\nAV: y\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\n\n\n\n\n{m}\n{z}\n{m, z}\n{ }\nkeine Lösung"
  },
  {
    "objectID": "posts/kausal24/kausal28.html#answerlist",
    "href": "posts/kausal24/kausal28.html#answerlist",
    "title": "kausal24",
    "section": "",
    "text": "{m}\n{z}\n{m, z}\n{ }\nkeine Lösung"
  },
  {
    "objectID": "posts/kausal24/kausal28.html#answerlist-1",
    "href": "posts/kausal24/kausal28.html#answerlist-1",
    "title": "kausal24",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nRichtig\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/Griech-Buchstaben-Inferenz/Griech-Buchstaben-Inferenz.html",
    "href": "posts/Griech-Buchstaben-Inferenz/Griech-Buchstaben-Inferenz.html",
    "title": "Griech-Buchstaben-Inferenz",
    "section": "",
    "text": "Exercise\nFür Statistiken (Stichprobe) verwendet man meist lateinische Buchstaben; für Parameter (Population) verwendet man meist (die entsprechenden) griechischen Buchstaben.\nVervollständigen Sie folgende Tabelle entsprechend!\n\n\n\n\n\nKennwert\nStatistik\nParameter\n\n\n\n\nMittelwert\n\\(\\bar{X}\\)\nNA\n\n\nMittelwertsdifferenz\n\\(\\bar{X}_1-\\bar{X}_2\\)\nNA\n\n\nStreuung\nsd\nNA\n\n\nAnteil\np\nNA\n\n\nKorrelation\nr\nNA\n\n\nRegressionsgewicht\nb\nNA\n\n\n\n\n\n         \n\n\nSolution\n\n\n\n\n\nKennwert\nStatistik\nParameter\n\n\n\n\nMittelwert\n\\[\\bar{X}\\]\n\\[\\mu\\]\n\n\nMittelwertsdifferenz\n\\[d=\\bar{X}_1-\\bar{X}_2\\]\n\\[\\mu_1\\]- \\[\\mu_2\\]\n\n\nStreuung\nsd\n\\[\\sigma\\]\n\n\nAnteil\np\n\\[\\pi\\]\n\n\nKorrelation\nr\n\\[\\rho\\]\n\n\nRegressionsgewicht\nb\n\\[\\beta\\]\n\n\n\n\n\n\nCategories:\n\nqm2\ninference\nparameters"
  },
  {
    "objectID": "posts/kausal23/kausal23.html",
    "href": "posts/kausal23/kausal23.html",
    "title": "kausal23",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über mehrere Variablen, die als Knoten im Graph dargestellt sind und mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x6.\nAV: x5.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “/”.\n\n\n\n\n\n\n\n\n\n{ x3, x4 }\n{ x6 }\n{ x1, x4 }\n/\n/"
  },
  {
    "objectID": "posts/kausal23/kausal23.html#answerlist",
    "href": "posts/kausal23/kausal23.html#answerlist",
    "title": "kausal23",
    "section": "",
    "text": "{ x3, x4 }\n{ x6 }\n{ x1, x4 }\n/\n/"
  },
  {
    "objectID": "posts/kausal23/kausal23.html#answerlist-1",
    "href": "posts/kausal23/kausal23.html#answerlist-1",
    "title": "kausal23",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nFalsch\nRichtig\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/Tengku-Hanis01/Tengku-Hanis01.html",
    "href": "posts/Tengku-Hanis01/Tengku-Hanis01.html",
    "title": "Tengku-Hanis01",
    "section": "",
    "text": "Aufgabe\nBearbeiten Sie diese Fallstudie von Tengku Hanis!\n         \n\n\nLösung\nDie folgende Lösung basiert auf der oben angegebenen Fallstudie.\nPakete laden:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.8     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nlibrary(finetune)\n\nDaten importieren:\n\ndata(income, package = \"kernlab\")\n\nDatensatz vereinfachen:\n\nset.seed(2021)\nincome2 &lt;- \n  income %&gt;% \n  filter(INCOME == \"[75.000-\" | INCOME == \"[50.000-75.000)\") %&gt;% \n  slice_sample(n = 600) %&gt;% \n  mutate(INCOME = fct_drop(INCOME), \n         INCOME = fct_recode(INCOME, \n                             rich = \"[75.000-\",\n                             less_rich = \"[50.000-75.000)\"), \n         INCOME = factor(INCOME, ordered = F)) %&gt;% \n  mutate(across(-INCOME, fct_drop))\n\nCheck:\n\nDataExplorer::plot_missing(income)\n\n\n\n\n{DataExplorer} sieht nach einem nützlichen Paket aus. Check it out hier!\nDaten aufteilen (“Spending our data budget”):\n\nset.seed(2021)\ndat_index &lt;- initial_split(income2, strata = INCOME)\ndat_train &lt;- training(dat_index)\ndat_test &lt;- testing(dat_index)\n\nKreuzvalidierung:\n\nset.seed(2021)\ndat_cv &lt;- vfold_cv(dat_train, v = 10, repeats = 1, strata = INCOME)\n\nRezept:\n\ndat_rec &lt;- \n  recipe(INCOME ~ ., data = dat_train) %&gt;% \n  step_impute_mode(all_predictors()) %&gt;% \n  step_ordinalscore(AGE, EDUCATION, AREA, HOUSEHOLD.SIZE, UNDER18)\n\nAls Modell (im engeren Sinne) nutzen wir ein Random-Forest-Modell:\n\nrf_mod &lt;- \n  rand_forest(mtry = tune(),\n              trees = tune(),\n              min_n = tune()) %&gt;% \n  set_mode(\"classification\") %&gt;% \n  set_engine(\"ranger\")\n\nWie man sieht, geben wir 3 Tuningparameter an.\nModell und Rezept zum Workflow zusammenfassen:\n\nrf_wf &lt;- \n  workflow() %&gt;% \n  add_recipe(dat_rec) %&gt;% \n  add_model(rf_mod)\n\nTuning Grids definieren:\nWichtig ist, dass wir genau die Parameter angeben im Grid, die wir auch zum Tunen getaggt haben. Das kann man händisch erledigen:\n\n# Regular grid:\nreg_grid &lt;- grid_regular(mtry(c(1, 13)), \n                         trees(), \n                         min_n(), \n                         levels = 3)\n\n# Random grid mit 100 Kandidaten:\nrand_grid &lt;- grid_random(mtry(c(1, 13)), \n                         trees(), \n                         min_n(), \n                         size = 100)\n\nWir speichern die Vorhersagen aller Folds im Train-Sample, um die Modellgüte im Train- bzw. Validierungssample anschauen zu können:\n\nctrl &lt;- control_grid(save_pred = T,\n                     extract = extract_model)\nmeasure &lt;- metric_set(roc_auc)\n\nAußerdem haben wir als Gütemaß roc_auc definiert.\nIn der Fallstudie wurde noch extract = extract_model bei control_grid() ergänzt. Das lassen wir der Einfachheit halber mal weg.\nParallelisieren auf mehreren Kernen, um Rechenzeit zu sparen:\n\nlibrary(doParallel)\n\nLoading required package: foreach\n\n\n\nAttaching package: 'foreach'\n\n\nThe following objects are masked from 'package:purrr':\n\n    accumulate, when\n\n\nLoading required package: iterators\n\n\nLoading required package: parallel\n\n# Create a cluster object and then register: \ncl &lt;- makePSOCKcluster(4)\nregisterDoParallel(cl)\n\nWie viele CPUs hat mein Computer?\n\ndetectCores(logical = FALSE)\n\n[1] 4\n\n\nJetzt geht’s ab: Tuning und Fitting!\nHier das “reguläre Gitter” an Tuningkandidaten:\n\nset.seed(2021)\ntune_regular &lt;- \n  rf_wf %&gt;% \n  tune_grid(\n    resamples = dat_cv, \n    grid = reg_grid,         \n    control = ctrl, \n    metrics = measure)\n\nstopCluster(cl)\n\nDie Modellgüte im Vergleich zwischen den Tuning-Kandidaten kann man sich schön ausgeben lassen:\n\nautoplot(tune_regular)\n\n\n\n\nGeht aber nur, wenn man oben gesagt hat, dass man die Predictions speichern möchte.\nWelche Kandidatin war am besten:\n\nshow_best(tune_regular)\n\n# A tibble: 5 × 9\n   mtry trees min_n .metric .estimator  mean     n std_err .config              \n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1     7  2000     2 roc_auc binary     0.690    10  0.0178 Preprocessor1_Model08\n2     7  2000    40 roc_auc binary     0.689    10  0.0184 Preprocessor1_Model26\n3     7  1000     2 roc_auc binary     0.688    10  0.0162 Preprocessor1_Model05\n4    13  1000    21 roc_auc binary     0.687    10  0.0155 Preprocessor1_Model15\n5     7  2000    21 roc_auc binary     0.687    10  0.0161 Preprocessor1_Model17\n\n\nSo kann man sich die beste Kandidatin anschauen:\n\nshow_best(tune_regular) %&gt;% \n  arrange(-mean) %&gt;% \n  slice(1)\n\n# A tibble: 1 × 9\n   mtry trees min_n .metric .estimator  mean     n std_err .config              \n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1     7  2000     2 roc_auc binary     0.690    10  0.0178 Preprocessor1_Model08\n\n\nAber man kann sich auch von Tidymodels einfach die beste Kandidatin sagen lassen:\n\nbest_rf &lt;-\n  select_best(tune_regular, \"roc_auc\")\n\nAuf dieser Basis können wir jetzt den Workflow finalisieren, also die Tuningparameter einfüllen:\n\nfinal_wf &lt;- \n  rf_wf %&gt;% \n  finalize_workflow(best_rf)\nfinal_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: rand_forest()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_impute_mode()\n• step_ordinalscore()\n\n── Model ───────────────────────────────────────────────────────────────────────\nRandom Forest Model Specification (classification)\n\nMain Arguments:\n  mtry = 7\n  trees = 2000\n  min_n = 2\n\nComputational engine: ranger \n\n\nUnd mit diesen Werten den ganzen Train-Datensatz fitten:\n\ntest_fit &lt;- \n  final_wf %&gt;%\n  last_fit(dat_index) \n\nWie gut ist das jetzt?\n\ntest_fit %&gt;%\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.576 Preprocessor1_Model1\n2 roc_auc  binary         0.599 Preprocessor1_Model1\n\n\n\nCategories:\n\ntidymodels\nprediction\nyacsda\nstatlearning\ntrees\nspeed\nstring"
  },
  {
    "objectID": "posts/subjektiv-Bayes/subjektiv-Bayes.html",
    "href": "posts/subjektiv-Bayes/subjektiv-Bayes.html",
    "title": "subjektiv-Bayes",
    "section": "",
    "text": "Exercise\nNennen Sie einen Aspekte der bayesianischen Analyse, der (in Teilen) subjektiv ist - abgesehen von der Wahl der Priori-Verteilung.\n         \n\n\nSolution\n\nLinearitätsannahme in (linearen) Modellen\nWahl des Likelihoods\nWahl der Daten\nMethoden der Modellprüfung\nGeneralisierung des Modells auf andere Situationen\nWahl der Prädiktoren\n\n\nCategories:\n~"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html",
    "href": "posts/regr-tree02/regr-tree02.html",
    "title": "regr-tree02",
    "section": "",
    "text": "library(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts."
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#setup",
    "href": "posts/regr-tree02/regr-tree02.html#setup",
    "title": "regr-tree02",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\ndata(mtcars)\nlibrary(tictoc)  # Zeitmessung\n\nFür Klassifikation verlangt Tidymodels eine nominale AV, keine numerische:\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(am = factor(am))"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#daten-teilen",
    "href": "posts/regr-tree02/regr-tree02.html#daten-teilen",
    "title": "regr-tree02",
    "section": "Daten teilen",
    "text": "Daten teilen\n\nd_split &lt;- initial_split(mtcars)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#modelle",
    "href": "posts/regr-tree02/regr-tree02.html#modelle",
    "title": "regr-tree02",
    "section": "Modell(e)",
    "text": "Modell(e)\n\nmod_tree &lt;-\n  decision_tree(mode = \"classification\",\n                cost_complexity = tune(),\n                tree_depth = tune(),\n                min_n = tune())"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#rezepte",
    "href": "posts/regr-tree02/regr-tree02.html#rezepte",
    "title": "regr-tree02",
    "section": "Rezept(e)",
    "text": "Rezept(e)\n\nrec1 &lt;- \n  recipe(am ~ ., data = d_train)"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#resampling",
    "href": "posts/regr-tree02/regr-tree02.html#resampling",
    "title": "regr-tree02",
    "section": "Resampling",
    "text": "Resampling\n\nrsmpl &lt;- vfold_cv(d_train, v = 2)"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#workflow",
    "href": "posts/regr-tree02/regr-tree02.html#workflow",
    "title": "regr-tree02",
    "section": "Workflow",
    "text": "Workflow\n\nwf1 &lt;-\n  workflow() %&gt;%  \n  add_recipe(rec1) %&gt;% \n  add_model(mod_tree)"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#tuningfitting",
    "href": "posts/regr-tree02/regr-tree02.html#tuningfitting",
    "title": "regr-tree02",
    "section": "Tuning/Fitting",
    "text": "Tuning/Fitting\n\nfit1 &lt;-\n  tune_grid(object = wf1,\n            metrics = metric_set(roc_auc),\n            resamples = rsmpl)\n\n→ A | warning: 30 samples were requested but there were 12 rows in the data. 12 will be used.\n\n\nThere were issues with some computations   A: x1\n\n\n→ B | warning: 18 samples were requested but there were 12 rows in the data. 12 will be used.\n\n\nThere were issues with some computations   A: x1\n→ C | warning: 27 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x1\n→ D | warning: 17 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x1\n→ E | warning: 33 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x1\nThere were issues with some computations   A: x1   B: x1   C: x1   D: x1   E: x1\n→ F | warning: 22 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x1   B: x1   C: x1   D: x1   E: x1\n→ G | warning: 37 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x1   B: x1   C: x1   D: x1   E: x1\nThere were issues with some computations   A: x2   B: x2   C: x2   D: x2   E: x…"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#bester-kandidat",
    "href": "posts/regr-tree02/regr-tree02.html#bester-kandidat",
    "title": "regr-tree02",
    "section": "Bester Kandidat",
    "text": "Bester Kandidat\n\nautoplot(fit1)\n\n\n\n\n\nshow_best(fit1)\n\n# A tibble: 5 × 9\n  cost_complexity tree_depth min_n .metric .estimator  mean     n std_err\n            &lt;dbl&gt;      &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;\n1        5.46e- 2          8     3 roc_auc binary     0.879     2  0.121 \n2        4.23e- 5         13    30 roc_auc binary     0.816     2  0.0589\n3        1.06e- 7          2    18 roc_auc binary     0.816     2  0.0589\n4        2.41e- 5         15     8 roc_auc binary     0.816     2  0.0589\n5        9.18e-10         10    11 roc_auc binary     0.816     2  0.0589\n# ℹ 1 more variable: .config &lt;chr&gt;"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#finalisieren",
    "href": "posts/regr-tree02/regr-tree02.html#finalisieren",
    "title": "regr-tree02",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nwf1_finalized &lt;-\n  wf1 %&gt;% \n  finalize_workflow(select_best(fit1))"
  },
  {
    "objectID": "posts/regr-tree02/regr-tree02.html#last-fit",
    "href": "posts/regr-tree02/regr-tree02.html#last-fit",
    "title": "regr-tree02",
    "section": "Last Fit",
    "text": "Last Fit\n\nfinal_fit &lt;- \n  last_fit(object = wf1_finalized, d_split)\n\ncollect_metrics(final_fit)\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary             1 Preprocessor1_Model1\n2 roc_auc  binary             1 Preprocessor1_Model1\n\n\n\nCategories:\n\nstatlearning\ntrees\ntidymodels\nstring"
  },
  {
    "objectID": "posts/mtcars-post/mtcars-post.html",
    "href": "posts/mtcars-post/mtcars-post.html",
    "title": "mtcars-post",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mtcars: Berichten Sie die Breite eines Schätzintervalls (89%, HDI) zum mittleren Spritverbrauch! Nutzen Sie Methoden der Bayes-Statistik.\nHinweise\n         \n\n\nLösung\nSetup:\n\ndata(mtcars)\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(easystats)\n\nModell berechnen:\n\nm1 &lt;- stan_glm(mpg ~ 1, \n               data = mtcars,\n               seed = 42,\n               refresh = 0)\n\nModellparameter auslesen, wobei wir als CI-Methode ein HDI auswählen, und als CI-Größe 89%:\n\nparameters(m1, ci = .89, ci_method = \"hdi\")\n\nParameter   | Median |         89% CI |   pd |  Rhat |     ESS |                   Prior\n----------------------------------------------------------------------------------------\n(Intercept) |  20.10 | [18.26, 21.64] | 100% | 1.001 | 2838.00 | Normal (20.09 +- 15.07)\n\n\nIm Standard wird ein 95%-Perzentilintervall berechnet, s. die Dokumentation zur Funktion hier.\nDie Lösung lautet also:\n\nsolution &lt;- 21.64 - 18.26\nsolution\n\n[1] 3.38\n\n\n\nCategories:\n\nbayes\npost\nestimation\nexam-22"
  },
  {
    "objectID": "posts/mtcars-simple3/mtcars-simple3.html",
    "href": "posts/mtcars-simple3/mtcars-simple3.html",
    "title": "mtcars-simple3",
    "section": "",
    "text": "We will use the dataset mtcars in this exercise.\nAssume your causal model of your research dictates that fuel economy is a linear function of horse power, cylinder count and displacement of the engine.\nWhich of the predictors in the above model has the weakest causal impact on the output variable?\nNotes:\n\nUse can either use frequentist or bayesian modeling.\nUse R for all computations.\nThere are multiple ways to find a solution.\n\n\n\n\ncyl\nhp\ndisp\nAll are equally strong\nnone of the above"
  },
  {
    "objectID": "posts/mtcars-simple3/mtcars-simple3.html#answerlist",
    "href": "posts/mtcars-simple3/mtcars-simple3.html#answerlist",
    "title": "mtcars-simple3",
    "section": "",
    "text": "cyl\nhp\ndisp\nAll are equally strong\nnone of the above"
  },
  {
    "objectID": "posts/mtcars-simple3/mtcars-simple3.html#answerlist-1",
    "href": "posts/mtcars-simple3/mtcars-simple3.html#answerlist-1",
    "title": "mtcars-simple3",
    "section": "Answerlist",
    "text": "Answerlist\n\nwrong\ncorrect\nwrong\nwrong\nwrong\n\n\nCategories:\n\nregression\nen\nbayes\nfrequentist\nqm1\nstats-nutshell"
  },
  {
    "objectID": "posts/PPV1a-mtcars/PPV1a-mtcars.html",
    "href": "posts/PPV1a-mtcars/PPV1a-mtcars.html",
    "title": "PPV1a-mtcars",
    "section": "",
    "text": "Im Folgenden ist der Datensatz mtcars zu analysieren.\nEine Möglichkeit, den Datensatz zu beziehen, ist diese Sammlung an Datensätzen. Suchen Sie dort nach dem Namen des Datensatzes. Importieren Sie dann die Daten in R.\nHilfe zum Datensatz ist auf dieser Webseite abrufbar.\nBerechnen Sie das folgende lineare Modell:\nAV: mpg.\nUVs: hp, am.\nAufgabe: Was ist der Wert des Punktschätzers für eine Beobachtung, bei der alle Prädiktoren den Wert 0 aufweisen?\nHinweise\nWählen Sie die am besten passende Antwortoption!\n\n\n\n-27\n-17\n-7\n17\n27"
  },
  {
    "objectID": "posts/PPV1a-mtcars/PPV1a-mtcars.html#answerlist",
    "href": "posts/PPV1a-mtcars/PPV1a-mtcars.html#answerlist",
    "title": "PPV1a-mtcars",
    "section": "",
    "text": "-27\n-17\n-7\n17\n27"
  },
  {
    "objectID": "posts/PPV1a-mtcars/PPV1a-mtcars.html#answerlist-1",
    "href": "posts/PPV1a-mtcars/PPV1a-mtcars.html#answerlist-1",
    "title": "PPV1a-mtcars",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nFalsch\nWahr\n\n\nCategories:\n\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/mariokart-mean2/mariokart-mean2.html",
    "href": "posts/mariokart-mean2/mariokart-mean2.html",
    "title": "mariokart-mean2",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie den mittleren Verkaufspreis (total_pr) für neue Spiele.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;-\nd  %&gt;% \n  filter(cond == \"new\") %&gt;% \n  summarise(pr_mean = mean(total_pr))\n\nsolution\n\n   pr_mean\n1 53.77068\n\n\nLösung: 53.77.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nnum"
  },
  {
    "objectID": "posts/twitter03/twitter03.html",
    "href": "posts/twitter03/twitter03.html",
    "title": "twitter03",
    "section": "",
    "text": "Exercise\nLaden Sie die neuesten Tweets an karl_lauterbach herunter, die mindestens 100 Likes oder 100 Retweets haben.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rtweet)\n\n\nAttaching package: 'rtweet'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\nEinloggen bei Twitter; zuerst die Credentials bereithalten:\n\nsource(\"/Users/sebastiansaueruser/credentials/hate-speech-analysis-v01-twitter.R\")\n\nDann anmelden:\n\nauth &lt;- rtweet_app(bearer_token = Bearer_Token)\n\nTweets an Karl Lauterbach suchen:\n\nkarl1 &lt;- search_tweets(\"@karl_lauterbach min_faves:100 OR min_retweets:100\", n = 10)\n\n\nkarl1 %&gt;% \n  select(retweet_count, favorite_count)\n\n# A tibble: 10 × 2\n   retweet_count favorite_count\n           &lt;int&gt;          &lt;int&gt;\n 1            56            210\n 2            56            229\n 3            44           1626\n 4            60            225\n 5            30            494\n 6             5            148\n 7            27            435\n 8            12            178\n 9            13            162\n10            46            375\n\nCategories:\n\ntextmining\ntwitter"
  },
  {
    "objectID": "posts/tmdb05/tmdb05.html",
    "href": "posts/tmdb05/tmdb05.html",
    "title": "tmdb05",
    "section": "",
    "text": "Melden Sie sich an für die Kaggle Competition TMDB Box Office Prediction - Can you predict a movie’s worldwide box office revenue?.\nSie benötigen dazu ein Konto; es ist auch möglich, sich mit seinem Google-Konto anzumelden.\nBei diesem Prognosewettbewerb geht es darum, vorherzusagen, wieviel Umsatz wohl einige Filme machen werden. Als Prädiktoren stehen einige Infos wie Budget, Genre, Titel etc. zur Verfügung. Eine klassische “predictive Competition” also :-) Allerdings können immer ein paar Schwierigkeiten auftreten ;-)\nAufgabe\nErstellen Sie ein Boosting-Modell mit Tidymodels!\nHinweise\n\n\nFür den Start empfehle ich, etwaige Vorverarbeitung erstmal klein zu halten. Nach dem Motto: Erstmal das Modell zum Laufen kriegen, dann erst verbessern.\nTunen Sie die typischen Parameter.\nReichen Sie das Modell bei Kaggle ein und berichten Sie Ihren Score.\nIm Übrigen sind Sie frei in Ihrem Vorgehen."
  },
  {
    "objectID": "posts/tmdb05/tmdb05.html#rezept-checken",
    "href": "posts/tmdb05/tmdb05.html#rezept-checken",
    "title": "tmdb05",
    "section": "Rezept checken",
    "text": "Rezept checken\n\nd_train_baked &lt;- prep(rec1) %&gt;% bake(new_data = NULL)\nd_train_baked\n\n# A tibble: 3,000 × 4\n   budget popularity runtime  revenue\n    &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1 -0.230    -0.156   -0.673 12314651\n 2  0.472    -0.0177   0.233 95149435\n 3 -0.519     4.61    -0.129 13092000\n 4 -0.576    -0.437    0.640 16000000\n 5 -0.609    -0.604    0.459  3923970\n 6 -0.392    -0.638   -1.13   3261638\n 7 -0.230    -0.0972  -0.718 85446075\n 8 -0.609    -0.538   -1.08   2586511\n 9 -0.609    -0.129   -0.356 34327391\n10 -0.446    -0.313   -0.763 18750246\n# ℹ 2,990 more rows\n\n\nViele Modelle können nicht arbeiten mit nominalen Prädiktoren oder mit fehlenden Werten. Daher sollte man im Rezept diese Fehler vorab abfangen.\nEin letzter Blick:\n\ndescribe_distribution(d_train_baked)\n\nVariable   |      Mean |       SD |      IQR |            Range | Skewness | Kurtosis |    n | n_Missing\n--------------------------------------------------------------------------------------------------------\nbudget     | -1.33e-18 |     1.00 |     0.78 |    [-0.61, 9.65] |     3.10 |    13.23 | 3000 |         0\npopularity | -6.08e-17 |     1.00 |     0.57 |   [-0.70, 23.62] |    14.38 |   280.10 | 3000 |         0\nruntime    |  3.63e-17 |     1.00 |     1.09 |   [-4.88, 10.42] |     1.02 |     8.19 | 2998 |         2\nrevenue    |  6.67e+07 | 1.38e+08 | 6.66e+07 | [1.00, 1.52e+09] |     4.54 |    27.78 | 3000 |         0\n\n\nSieht ok aus."
  },
  {
    "objectID": "posts/diamonds-histogram/diamonds-histogram.html",
    "href": "posts/diamonds-histogram/diamonds-histogram.html",
    "title": "diamonds-histogram",
    "section": "",
    "text": "Die Daten beziehen sich auf den Datensatz diamonds und sind hier einzusehen bzw. können bei Interesse dort heruntergeladen werden.\n\n\n\n\n\n\n\n\nAuf der X-Achse ist eine nominalskalierte Variable abgetragen.\nDer vertikale Strich in jedem Bild passt gut zur Position des insgesamten Medians.\nDie Variable cut ist eine intervallskalierte Variable.\nAuf der x-Achse werden Häufigkeiten abgetragen.\nDie Gruppierungsvariable cut wird hier als ordinale Variable, also mit Ordnungsstruktur, verwendet."
  },
  {
    "objectID": "posts/diamonds-histogram/diamonds-histogram.html#answerlist",
    "href": "posts/diamonds-histogram/diamonds-histogram.html#answerlist",
    "title": "diamonds-histogram",
    "section": "",
    "text": "Auf der X-Achse ist eine nominalskalierte Variable abgetragen.\nDer vertikale Strich in jedem Bild passt gut zur Position des insgesamten Medians.\nDie Variable cut ist eine intervallskalierte Variable.\nAuf der x-Achse werden Häufigkeiten abgetragen.\nDie Gruppierungsvariable cut wird hier als ordinale Variable, also mit Ordnungsstruktur, verwendet."
  },
  {
    "objectID": "posts/diamonds-histogram/diamonds-histogram.html#answerlist-1",
    "href": "posts/diamonds-histogram/diamonds-histogram.html#answerlist-1",
    "title": "diamonds-histogram",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nvis\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/purrr-map02/purrr-map02.html",
    "href": "posts/purrr-map02/purrr-map02.html",
    "title": "purrr-map02",
    "section": "",
    "text": "Exercise\nBestimmen Sie die häufigsten Worte im Grundatzprogramm der Partei AfD (in der aktuellsten Version).\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nText aus PDF-Dateien kann man mit dem Paket pdftools einlesen:\n\nlibrary(pdftools)\n\nUsing poppler version 22.02.0\n\nd_path &lt;- \"~/Literatur/_Div/Politik/afd-grundsatzprogramm-2022.pdf\"\n\nd &lt;- tibble(text = pdf_text(d_path))\n\nDann erstellen wir eine Tidy-Version und tokenisieren nach Wörtern:\n\nlibrary(tidytext)\nd2 &lt;-\n  d %&gt;% \n  unnest_tokens(output = word, input = text)\n\nhead(d2)\n\n# A tibble: 6 × 1\n  word             \n  &lt;chr&gt;            \n1 programm         \n2 für              \n3 deutschland      \n4 das              \n5 grundsatzprogramm\n6 der              \n\n\nDann zählen wir die Wörter:\n\nd2 %&gt;% \n  count(word, sort = TRUE) %&gt;% \n  head(20)\n\n# A tibble: 20 × 2\n   word            n\n   &lt;chr&gt;       &lt;int&gt;\n 1 die          1151\n 2 und          1147\n 3 der           870\n 4 zu            435\n 5 für           392\n 6 in            392\n 7 den           271\n 8 von           257\n 9 ist           251\n10 das           225\n11 werden        214\n12 eine          211\n13 nicht         196\n14 ein           191\n15 deutschland   190\n16 sind          187\n17 wir           176\n18 afd           171\n19 des           169\n20 sich          158\n\n\n\nCategories:\n\nR\nmap\ntidyverse"
  },
  {
    "objectID": "posts/anova-skalenniveau/anova-skalenniveau.html",
    "href": "posts/anova-skalenniveau/anova-skalenniveau.html",
    "title": "anova-skalenniveau",
    "section": "",
    "text": "Die Varianzanalyse (ANOVA) ist ein inferenzstatistisches Verfahren des Frequentismus. Welches Skalenniveau passt zu diesem Verfahren?\n\n\n\nUV: nominal (mehrstufig), AV: metrisch\nUV: metrisch, AV: nominal (zweistufig)\nUV: nominal (mehrstufig), AV: nominal (mehrstufig)\nUV: metrisch, AV: nominal (zweistufig)\nUV: nominal (zweistufig), AV: metrisch"
  },
  {
    "objectID": "posts/anova-skalenniveau/anova-skalenniveau.html#answerlist",
    "href": "posts/anova-skalenniveau/anova-skalenniveau.html#answerlist",
    "title": "anova-skalenniveau",
    "section": "",
    "text": "UV: nominal (mehrstufig), AV: metrisch\nUV: metrisch, AV: nominal (zweistufig)\nUV: nominal (mehrstufig), AV: nominal (mehrstufig)\nUV: metrisch, AV: nominal (zweistufig)\nUV: nominal (zweistufig), AV: metrisch"
  },
  {
    "objectID": "posts/anova-skalenniveau/anova-skalenniveau.html#answerlist-1",
    "href": "posts/anova-skalenniveau/anova-skalenniveau.html#answerlist-1",
    "title": "anova-skalenniveau",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nvariable-levels\nanova"
  },
  {
    "objectID": "posts/filter-na5/filter-na5.html",
    "href": "posts/filter-na5/filter-na5.html",
    "title": "filter-na5",
    "section": "",
    "text": "Zählen Sie fehlende Werte im Datensatz penguins zeilenweise."
  },
  {
    "objectID": "posts/filter-na5/filter-na5.html#setup",
    "href": "posts/filter-na5/filter-na5.html#setup",
    "title": "filter-na5",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnrow(d)\n\n[1] 344"
  },
  {
    "objectID": "posts/filter-na5/filter-na5.html#weg-1",
    "href": "posts/filter-na5/filter-na5.html#weg-1",
    "title": "filter-na5",
    "section": "Weg 1",
    "text": "Weg 1\n\napply(d, 1, function(x) sum(is.na(x)))\n\n  [1] 0 0 0 5 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [38] 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\n[186] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n[223] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n[260] 0 0 0 0 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[297] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[334] 0 0 0 0 0 0 0 0 0 0 0"
  },
  {
    "objectID": "posts/filter-na5/filter-na5.html#weg-2",
    "href": "posts/filter-na5/filter-na5.html#weg-2",
    "title": "filter-na5",
    "section": "Weg 2",
    "text": "Weg 2\n\nd_na_only &lt;- \n  d %&gt;% \n  rowwise() %&gt;% \n  mutate(na_n = sum(is.na(cur_data()))) %&gt;% \n  ungroup()\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `na_n = sum(is.na(cur_data()))`.\nℹ In row 1.\nCaused by warning:\n! `cur_data()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\nd_na_only %&gt;% \n  pull(na_n)\n\n  [1] 0 0 0 5 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [38] 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\n[186] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n[223] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n[260] 0 0 0 0 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[297] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[334] 0 0 0 0 0 0 0 0 0 0 0"
  },
  {
    "objectID": "posts/filter-na5/filter-na5.html#weg-3",
    "href": "posts/filter-na5/filter-na5.html#weg-3",
    "title": "filter-na5",
    "section": "Weg 3",
    "text": "Weg 3\n\nd_na_only &lt;- \n  d %&gt;% \n  mutate(na_n = rowSums(is.na(.)))\n \n\nd_na_only %&gt;% \n  pull(na_n)\n\n  [1] 0 0 0 5 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [38] 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\n[186] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n[223] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n[260] 0 0 0 0 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[297] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[334] 0 0 0 0 0 0 0 0 0 0 0"
  },
  {
    "objectID": "posts/purrr-map05/purrr-map05.html",
    "href": "posts/purrr-map05/purrr-map05.html",
    "title": "purrr-map05",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nExercise\nErstellen Sie eine Tabelle mit mit folgenden Spalten:\n\nID-Spalte: \\(1,2,..., 10\\)\nEine Spalte, in der jede Zelle eine Tabelle mit einem Vektor \\(x\\), einer standardnormalverteilten Zufallszahlen (n=1000), enthält\n\nBerechnen Sie den Mittelwert von jedem \\(x\\)! Diese Ergebnisse sollen als weitere Spalte der Tabelle hinzugefügt werden.\n         \n\n\nSolution\n\nd &lt;- tibble(\n  id = 1:10) %&gt;% \n  mutate(x = map(id, ~ rnorm(n = 1e3))\n) \n\nstr(d)\n\ntibble [10 × 2] (S3: tbl_df/tbl/data.frame)\n $ id: int [1:10] 1 2 3 4 5 6 7 8 9 10\n $ x :List of 10\n  ..$ : num [1:1000] -0.114 0.607 1.288 0.372 -0.438 ...\n  ..$ : num [1:1000] 0.982 -0.376 0.421 -0.59 1.143 ...\n  ..$ : num [1:1000] 0.429 0.417 0.592 -1.735 -1.192 ...\n  ..$ : num [1:1000] 0.514 -0.244 1.358 0.432 1.227 ...\n  ..$ : num [1:1000] 0.47 -0.621 -0.15 -0.959 2.287 ...\n  ..$ : num [1:1000] 0.0743 0.1768 -0.8956 -0.029 1.1695 ...\n  ..$ : num [1:1000] 1.672 -0.976 1.019 -0.327 -0.165 ...\n  ..$ : num [1:1000] -0.0175 2.7151 -0.464 -0.4519 0.4463 ...\n  ..$ : num [1:1000] -0.18 0.729 -0.494 0.127 -0.391 ...\n  ..$ : num [1:1000] -1.058 0.898 1.085 0.142 3.171 ...\n\n\nSo kann man sich die Mittelwerte ausgeben lassen:\n\nd$x %&gt;% \n  map(mean)\n\n[[1]]\n[1] 0.01370096\n\n[[2]]\n[1] 0.005118962\n\n[[3]]\n[1] -0.001769942\n\n[[4]]\n[1] -0.01192552\n\n[[5]]\n[1] 0.01277106\n\n[[6]]\n[1] -0.04090293\n\n[[7]]\n[1] 0.05199444\n\n[[8]]\n[1] 0.01361518\n\n[[9]]\n[1] 0.001292623\n\n[[10]]\n[1] -0.005675222\n\n\nJetzt fügen wir den letzten Schritt als Spalte hinzu:\n\nd2 &lt;-\n  d %&gt;% \n  mutate(x_mean = map_dbl(x, ~ mean(.x))) \n\nhead(d2)\n\n# A tibble: 6 × 3\n     id x               x_mean\n  &lt;int&gt; &lt;list&gt;           &lt;dbl&gt;\n1     1 &lt;dbl [1,000]&gt;  0.0137 \n2     2 &lt;dbl [1,000]&gt;  0.00512\n3     3 &lt;dbl [1,000]&gt; -0.00177\n4     4 &lt;dbl [1,000]&gt; -0.0119 \n5     5 &lt;dbl [1,000]&gt;  0.0128 \n6     6 &lt;dbl [1,000]&gt; -0.0409 \n\n\nHier hätten wir auch schreiben können:\n\nd %&gt;% \n  mutate(x_mean = map(x, mean)) %&gt;% \n  unnest(x_mean) %&gt;% \n  head()\n\n# A tibble: 6 × 3\n     id x               x_mean\n  &lt;int&gt; &lt;list&gt;           &lt;dbl&gt;\n1     1 &lt;dbl [1,000]&gt;  0.0137 \n2     2 &lt;dbl [1,000]&gt;  0.00512\n3     3 &lt;dbl [1,000]&gt; -0.00177\n4     4 &lt;dbl [1,000]&gt; -0.0119 \n5     5 &lt;dbl [1,000]&gt;  0.0128 \n6     6 &lt;dbl [1,000]&gt; -0.0409 \n\n\n\nCategories:\n\nprogramming\nloop"
  },
  {
    "objectID": "posts/Zwielichter-Dozent-Bayes/Zwielichter-Dozent-Bayes.html",
    "href": "posts/Zwielichter-Dozent-Bayes/Zwielichter-Dozent-Bayes.html",
    "title": "Zwielichter-Dozent-Bayes",
    "section": "",
    "text": "options(digits = 2)\n\n\nExercise\nNach einem langen Unitag machen Sie sich auf den Weg nach Hause; ihr Weg führt Sie durch eine dunkle Ecke. Just dort regt sich auf einmal eine Gestalt in den Schatten. Die Person spricht Sie an: „Na, Lust auf ein Spielchen?“. Sie willigen sofort ein. Die Person stellt sich als ein Statistiker vor, dessen Namen nichts zur Sache tue; das Gesicht kommt Ihnen vage bekannt vor. „Pass auf“, erklärt der Statistiker, „wir werfen eine Münze, ich setze auf Zahl“. Dass er auf Zahl setzt, überrascht Sie nicht. „Wenn ich gewinne“, fährt der Statistiker fort, „bekomme ich 10 Euro von Dir, wenn Du gewinnst, bekommst Du 11 Euro von mir. Gutes Spiel, oder?“. Sie einigen sich auf 10 Durchgänge, in denen der Statistiker jedes Mal eine Münze wirft, fängt und dann die oben liegende Seite prüft. Erster Wurf: Zahl! Der Statistiker gewinnt. Pech für Sie. Zweiter Wurf: Zahl! Schon wieder 10 Euro für den Statistiker. Hm. Dritter Wurf: . . . Zahl! Schon wieder. Aber kann ja passieren, bei einer fairen Münze, oder? Vierter Wurf: Zahl! Langsam regen sich Zweifel bei Ihnen. Kann das noch mit rechten Dingen zugehen? Ist die Münze fair? Insgesamt gewinnt der zwielichte Statistiker 8 von 10 Durchgängen.\nUnter leisem Gelächter des Statistikers (und mit leeren Taschen) machen Sie sich von dannen. Hat er falsch gespielt? Wie plausibel ist es, bei 10 Würfen 8 Treffer zu erhalten, wenn die Münze fair ist? Ist das ein häufiges, ein typisches Ereignis oder ein seltenes, untypisches Ereignis bei einer fairen Münze? Wenn es ein einigermaßen häufiges Ereignis sein sollte, dann spricht das für die Fairness der Münze. Zumindest spricht ein Ereignis, welches von einer Hypothese als häufig vorausgesagt wird und schließlich eintritt, nicht gegen eine Hypothese. Zuhause angekommen, denken Sie sich, jetzt müssen Sie erstmal in Ruhe die Posteriori-Verteilung und die PPV ausrechnen!\n\nBerechnen Sie die Posteriori-Verteilung mit der Gittermethode! Gehen Sie von einer gleichverteilten Priori-Wahrscheinlichkeit aus. Visualisieren Sie sie. Alle folgenden Teil-Fragen bauen auf der Post-Verteilung auf.\nWie groß ist die Wahrscheinlichkeit, auf Basis der Post-Verteilung, dass die Münze zugunsten des Dozenten gezinkt ist?\nGeben Sie das 50%-PI und 50%-HDPI zum Parameterwert (\\(p\\) der Münze) an!\nMit welcher Wahrscheinlichkeit liegt die Trefferchance der Münze zwischen \\(p=.45\\) und \\(p=.55\\), ist also nicht “nennenswert” gezinkt?\nWas ist der wahrscheinlichste Parameterwert (Trefferchance der Münze)?\nGeben Sie das 90%-PI und 90%-HDI zu Parameterwert (\\(p\\) der Münze) an!\nBerechnen Sie die PPV! Visualisieren Sie sie. Interpretieren Sie die PPV.\nDiskutieren Sie die Annahme einer Gleichverteilung des Priori-Wertes von \\(p\\)!\n\n         \n\n\nSolution\n\nBerechnen Sie die Posteriori-Verteilung mit der Gittermethode! Visualisieren Sie sie. Alle folgenden Teil-Fragen bauen auf der Post-Verteilung auf.\n\n\np_grid &lt;- seq( from=0 , to=1 , length.out=1000 )  # Gitterwerte\n\nprior &lt;- rep( 1 , 1000 )  # Priori-Gewichte\n\nlikelihood &lt;- dbinom(8, size = 10, prob=p_grid) \n\nunstandardisierte_posterior &lt;- likelihood * prior \n\nposterior &lt;- unstandardisierte_posterior / sum(unstandardisierte_posterior)\n\n# Stichproben ziehen aus der Posteriori-Verteilung:\nsamples &lt;- \n  tibble(\n    gewinnchance_muenze = sample(p_grid , prob=posterior, size=1e4, replace=TRUE))\n\nVisualisierung:\n\nsamples %&gt;% \n  ggplot() +\n  aes(x = gewinnchance_muenze) +\n  geom_histogram() +\n  labs(title = \"Posterior-Verteilung\",\n       x = \"Gewinnchance der Münze (50%: faire Münze)\")\n\n\n\n\n\nWie groß ist die Wahrscheinlichkeit, auf Basis der Post-Verteilung, dass die Münze zugunsten des Dozenten gezinkt ist?\n\n\nsamples %&gt;% \n  count(gewinnchance_muenze &gt; .5) %&gt;% \n  mutate(prop = n / sum(n))\n\n# A tibble: 2 × 3\n  `gewinnchance_muenze &gt; 0.5`     n   prop\n  &lt;lgl&gt;                       &lt;int&gt;  &lt;dbl&gt;\n1 FALSE                         318 0.0318\n2 TRUE                         9682 0.968 \n\n\n\nGeben Sie das 50%-PI (Perzentilintervall) und 50%-HDI zum Parameterwert (\\(p\\) der Münze) an!\n\n\nlibrary(easystats)\neti(samples, ci = .5)\n\nEqual-Tailed Interval\n\nParameter           |      50% ETI\n----------------------------------\ngewinnchance_muenze | [0.67, 0.84]\n\nhdi(samples, ci = .5)\n\nHighest Density Interval\n\nParameter           |      50% HDI\n----------------------------------\ngewinnchance_muenze | [0.71, 0.87]\n\n\nEin PI wird auch equal tail interval genannt, weil die beiden “abgeschnitten Randbereiche” links und rechts die gleichen Flächenanteil (Wahrscheinlichkeitsmasse) aufweisen.\nInteresant ist, dass das PI und das HDI zu unterschiedlichen Ergebnissen kommen. Das lässt auf eine schiefe Verteilung schließen. Außerdem eröffnet es den Raum zur Diskussion, welches Intervall man berichtet. Um diese Frage besser zu verstehen, können wir die Intervalle visualisieren.\nBonus: Visualisieren wir die Intervalle:\nPI:\n\neti(samples, ci = .5) %&gt;% plot()\n\n\n\n\nHDI:\n\nhdi(samples, ci = .5) %&gt;% plot()\n\n\n\n\nDas HDI ist schmäler und liegt näher am Modus. Vermutlich ist das HDI zu bevorzugen.\n\nMit welcher Wahrscheinlichkeit liegt die Trefferchance der Münze zwischen \\(p=.45\\) und \\(p=.55\\), ist also nicht “nennenswert” gezinkt (auf Basis unserer Modellannahmen)?\n\n\nsamples %&gt;% \n  count(gewinnchance_muenze &gt;= 0.45 & gewinnchance_muenze &lt;= .55) %&gt;% \n  mutate(prop = n/sum(n))\n\n# A tibble: 2 × 3\n  `gewinnchance_muenze &gt;= 0.45 & gewinnchance_muenze &lt;= 0.55`     n   prop\n  &lt;lgl&gt;                                                       &lt;int&gt;  &lt;dbl&gt;\n1 FALSE                                                        9531 0.953 \n2 TRUE                                                          469 0.0469\n\n\nDie Wahrscheinlichkeit, dass die Münze nicht nennenswert gezinkt ist (nach unserer Definition), ist gering. Man sollte vielleicht erwähnen, dass unsere Definition von “nicht nennenswert gezinkt” plausibel ist, und andere (vernünftige) Definitionen zu einem sehr ähnlichen Ergebnis kämen.\n\nWas ist der wahrscheinlichste Parameterwert (Trefferchance der Münze)?\n\n\nsamples %&gt;% \n   map_estimate()\n\nMAP Estimate\n\nParameter           | MAP_Estimate\n----------------------------------\ngewinnchance_muenze |         0.82\n\n\nmap_estimate steht für …\n\nFind the Highest Maximum A Posteriori probability estimate (MAP) of a posterior, i.e., the value associated with the highest probability density (the “peak” of the posterior distribution). In other words, it is an estimation of the mode for continuous parameters.\n\n(aus der Hilfeseite der Funktion)\n\nGeben Sie das 90%-PI und 90%-HDI zum Parameterwert (\\(p\\) der Münze) an!\n\n\nlibrary(easystats)\neti(samples, ci = .9)\n\nEqual-Tailed Interval\n\nParameter           |      90% ETI\n----------------------------------\ngewinnchance_muenze | [0.53, 0.92]\n\nhdi(samples, ci = .9)\n\nHighest Density Interval\n\nParameter           |      90% HDI\n----------------------------------\ngewinnchance_muenze | [0.57, 0.94]\n\n\n\nBerechnen Sie die PPV! Visualisieren Sie sie. Interpretieren Sie die PPV.\n\n\nPPV &lt;-\n  samples %&gt;% \n  mutate(anzahl_kopf = rbinom(n = 1e4, size = 10, prob = gewinnchance_muenze))\n\nVisualisierung:\n\nPPV %&gt;% \n  ggplot() +\n  aes(x = anzahl_kopf) +\n  labs(title = \"PPV\") +\n  geom_bar()  # geom_bar() ginge auch, sieht aber bei wenig Balken nicht so gut aus.\n\n\n\n\nLaut der PPV sind 8 von 10 Treffern der Wert, der mit der höchsten Wahrscheinlichkeit zu beobachten sein wird. Allerdings sind 7 oder 9 Treffer fast genauso wahrscheinlich. Etwas genauer:\n\nPPV %&gt;% \n  count(between(anzahl_kopf, 7,9))   # \"zähle mir, wie oft ein Wert ZWISCHEN (between) 7 und 9 vorkommt\"\n\n# A tibble: 2 × 2\n  `between(anzahl_kopf, 7, 9)`     n\n  &lt;lgl&gt;                        &lt;int&gt;\n1 FALSE                         3840\n2 TRUE                          6160\n\n\nMit dieser Wahrscheinlichkeit ist ein Wert zwischen 7 und 9 zu beobachten, wenn man den Versuch wiederholt, laut dem Modell.\n\nPPV %&gt;% \n  eti(anzahl_kopf, ci = .9)\n\nEqual-Tailed Interval\n\nParameter           |       90% ETI\n-----------------------------------\ngewinnchance_muenze | [0.53,  0.92]\nanzahl_kopf         | [4.00, 10.00]\n\n\nUnser Modell sieht einen “Passungsbereich” (ein Perzentilintervall) von 4 bis 10 Treffern als mit 90% Wahrscheinlichkeit passend an.\n\nDiskutieren Sie die Annahme einer Gleichverteilung des Priori-Wertes von \\(p\\)!\n\nZwar hat eine Gleichverteilung der Priori-Werte den Vorteil, dass sie “objektiv” ist in dem Sinne, dass kein Wert “bevorteilt” wird; alle gelten als gleich wahrscheinlich. Aber das ist hochgradig unplausibel: So ist z.B. der Wert \\(p=1\\) logisch unmöglich, da wir nicht nur Treffer beobachtet haben. Ein Wert von z.B. \\(p=0.999\\) erscheint uns ebenfalls sehr unwahrscheinlich. Nützlicher erscheint daher vielleicht doch eine Priori-Verteilung, die extreme Werte von \\(p\\) als unwahrscheinlich bemisst.\n\nCategories:\n\nbayes\nprobability\nppv"
  },
  {
    "objectID": "posts/griech-buchstaben/griech-buchstaben.html",
    "href": "posts/griech-buchstaben/griech-buchstaben.html",
    "title": "Griech-Buchstaben-Inferenz",
    "section": "",
    "text": "Exercise\nFür Statistiken (Stichprobe) verwendet man meist lateinische Buchstaben; für Parameter (Population) verwendet man meist (die entsprechenden) griechischen Buchstaben.\nVervollständigen Sie folgende Tabelle entsprechend!\n\n\n\n\n\nKennwert\nStatistik\nParameter\n\n\n\n\nMittelwert\n\\(\\bar{X}\\)\nNA\n\n\nMittelwertsdifferenz\n\\(\\bar{X}_1-\\bar{X}_2\\)\nNA\n\n\nStreuung\nsd\nNA\n\n\nAnteil\np\nNA\n\n\nKorrelation\nr\nNA\n\n\nRegressionsgewicht\nb\nNA\n\n\n\n\n\n         \n\n\nSolution\n\n\n\n\n\nKennwert\nStatistik\nParameter\n\n\n\n\nMittelwert\n\\[\\bar{X}\\]\n\\[\\mu\\]\n\n\nMittelwertsdifferenz\n\\[d=\\bar{X}_1-\\bar{X}_2\\]\n\\[\\mu_1\\]- \\[\\mu_2\\]\n\n\nStreuung\nsd\n\\[\\sigma\\]\n\n\nAnteil\np\n\\[\\pi\\]\n\n\nKorrelation\nr\n\\[\\rho\\]\n\n\nRegressionsgewicht\nb\n\\[\\beta\\]\n\n\n\n\n\n\nCategories:\n\nqm2\ninference"
  },
  {
    "objectID": "posts/wozu-streudiagramm/wozu-streudiagramm.html",
    "href": "posts/wozu-streudiagramm/wozu-streudiagramm.html",
    "title": "wozu-streudiagramm",
    "section": "",
    "text": "Zu welchem Zweck ist ein Streudiagramm am besten geeignet?\n\n\n\nUm Verteilungen einer nominalen Variablen darzustellen.\nUm Verteilungen einer metrischen Variablen darzustellen.\nUm Verteilungen einer stetigen, metrischen Variablen darzustellen.\nUm Zusammenhänge zwischen zwei nominalen Variablen darzustellen.\nUm Zusammenhänge zwischen zwei metrischen Variablen darzustellen."
  },
  {
    "objectID": "posts/wozu-streudiagramm/wozu-streudiagramm.html#answerlist",
    "href": "posts/wozu-streudiagramm/wozu-streudiagramm.html#answerlist",
    "title": "wozu-streudiagramm",
    "section": "",
    "text": "Um Verteilungen einer nominalen Variablen darzustellen.\nUm Verteilungen einer metrischen Variablen darzustellen.\nUm Verteilungen einer stetigen, metrischen Variablen darzustellen.\nUm Zusammenhänge zwischen zwei nominalen Variablen darzustellen.\nUm Zusammenhänge zwischen zwei metrischen Variablen darzustellen."
  },
  {
    "objectID": "posts/wozu-streudiagramm/wozu-streudiagramm.html#answerlist-1",
    "href": "posts/wozu-streudiagramm/wozu-streudiagramm.html#answerlist-1",
    "title": "wozu-streudiagramm",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nFalsch\nWahr\n\n\nCategories:\n\nvis\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/haeufigkeit01/haeufigkeit01.html",
    "href": "posts/haeufigkeit01/haeufigkeit01.html",
    "title": "haeufigkeit01",
    "section": "",
    "text": "Aufgabe\nWerten Sie die Häufigkeiten (der Stufen) folgender Variablen aus wie unten beschrieben.\nDatensatz: mtcars.\nVariablen:\n\nam\ncyl\nvs\n\n\nErstellen Sie für jede der genannten Variablen eine univariate Häufigkeitsanalyse (also nur eine Variable).\nErstellen Sie dann für die ersten beiden genannten Variablen eine gemeinsame Häufigkeitsanalyse (bivariat).\nErstellen Sie dann für alle genannten Variablen eine gemeinsame Häufigkeitsanalyse.\nWie viele Gruppen (also Häufigkeitswerte) ergeben sich (theoretisch) in der letzten Auswertung?\n\n         \n\n\nLösung\n\nlibrary(\"tidyverse\")\ndata(\"mtcars\")\n\n\nunivariate Häufigkeitsanalyse\n\n\nmtcars %&gt;% \n  group_by(am) %&gt;% \n  summarise(zeilen_n = n())\n\n# A tibble: 2 × 2\n     am zeilen_n\n  &lt;dbl&gt;    &lt;int&gt;\n1     0       19\n2     1       13\n\n\nDer Befehle n() gibt die Anzahl der Zeilen (Reihen) zurück. Da in einem Dataframe alle Zeilen gleich lang sind, brauchen wir keine Spalte anzugeben.\nAlternativ könnte man auch schreiben:\n\nmtcars %&gt;% \n  count(am)\n\n  am  n\n1  0 19\n2  1 13\n\n\nDas ist haargenau der gleiche Effekt wie die vorherige Syntax.\nÜblich ist auch, eine Kontingenztabelle so darzustellen:\n\ngemeinsame Häufigkeitsanalyse (bivariat)\n\n\nmtcars %&gt;% \n  count(am, cyl)\n\n  am cyl  n\n1  0   4  3\n2  0   6  4\n3  0   8 12\n4  1   4  8\n5  1   6  3\n6  1   8  2\n\n\n\ntable(mtcars$am, mtcars$cyl)\n\n   \n     4  6  8\n  0  3  4 12\n  1  8  3  2\n\n\nWir sehen, dass wir \\(2\\cdot3=6\\) Gruppen haben, in denen sich die \\(n=32\\) Beobachtungen aufteilen.\n\nHäufigkeitsanalyse mit 3 Variablen\n\n\nmtcars %&gt;% \n  count(am, cyl, vs)\n\n  am cyl vs  n\n1  0   4  1  3\n2  0   6  1  4\n3  0   8  0 12\n4  1   4  0  1\n5  1   4  1  7\n6  1   6  0  3\n7  1   8  0  2\n\n\nDas sind drei Variablen mit \\(2 \\cdot 3 \\cdot 2 = 12\\) Gruppen.\nDa einige der 12 Gruppen in den Daten nicht vorkommen, sind sie in der Auszählung der Häufigkeiten nicht aufgenommen; in den Daten gibt es nur 7 der 12 Gruppen.\n\nCategories:\n\ndatawrangling\neda\ncount\nstring"
  },
  {
    "objectID": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html",
    "href": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html",
    "title": "Boxplot-Aussagen",
    "section": "",
    "text": "Hinweis: Female steht für Frauen; Male für Männer.\nDiese Aufgabe bezieht sich auf den Datensatz tips (aus dem R-Paket reshape2), den Sie ggf. hier herunterladen können. Ein Data-Dictionary findet sich hier.\n\n\n\n\n\n\n\n\nDer IQR der Männer ist größer als der der Frauen.\nDer Boxplot ist schlecht geeignet, um die Verteilung mehrerer Gruppen prägnant und übersichtlich zu visualisieren.\nDer Mittelwert der Männer ist kleiner als der der Frauen.\nDie Streuung in den RANDbereichen der Frauen ist größer als die der Männer.\nBei den Männern gibt es mehr Ausreißer als bei den Frauen.\nDie Streuung in den beiden äußeren Quartilen ist bei den Frauen größer als bei den Männern.\nDie Verteilungen sind beide nicht schief.\nDie Verteilungen sind beide symmetrisch.\nAuf der X-Achse steht eine metrische (quantitative) Variable.\nAuf der Y-Achse steht eine nominale (qualitative) Variable.\nAuf der Y-Achse steht eine metrische (quantitative) Variable.\nAuf der X-Achse steht eine nominale (qualitative) Variable."
  },
  {
    "objectID": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html#answerlist",
    "href": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html#answerlist",
    "title": "Boxplot-Aussagen",
    "section": "",
    "text": "Der IQR der Männer ist größer als der der Frauen.\nDer Boxplot ist schlecht geeignet, um die Verteilung mehrerer Gruppen prägnant und übersichtlich zu visualisieren.\nDer Mittelwert der Männer ist kleiner als der der Frauen.\nDie Streuung in den RANDbereichen der Frauen ist größer als die der Männer.\nBei den Männern gibt es mehr Ausreißer als bei den Frauen.\nDie Streuung in den beiden äußeren Quartilen ist bei den Frauen größer als bei den Männern.\nDie Verteilungen sind beide nicht schief.\nDie Verteilungen sind beide symmetrisch.\nAuf der X-Achse steht eine metrische (quantitative) Variable.\nAuf der Y-Achse steht eine nominale (qualitative) Variable.\nAuf der Y-Achse steht eine metrische (quantitative) Variable.\nAuf der X-Achse steht eine nominale (qualitative) Variable."
  },
  {
    "objectID": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html#answerlist-1",
    "href": "posts/Boxplot-Aussagen/Boxplot-Aussagen.html#answerlist-1",
    "title": "Boxplot-Aussagen",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\nFalsch\nFalsch\nFalsch\nFalsch\nFalsch\nWahr\nWahr\n\n\nCategories:\n\nvis\neda\ndyn\nschoice"
  },
  {
    "objectID": "posts/kausal22/kausal22.html",
    "href": "posts/kausal22/kausal22.html",
    "title": "kausal22",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über mehrere Variablen, die als Knoten im Graph dargestellt sind und mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x3.\nAV: x5.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\n\n\n\n\n\n\n\n\n\n{ x1, x4 }\n{ x5, x6 }\n{ }\n{ x2 }\n{ x4, x6 }"
  },
  {
    "objectID": "posts/kausal22/kausal22.html#answerlist",
    "href": "posts/kausal22/kausal22.html#answerlist",
    "title": "kausal22",
    "section": "",
    "text": "{ x1, x4 }\n{ x5, x6 }\n{ }\n{ x2 }\n{ x4, x6 }"
  },
  {
    "objectID": "posts/kausal22/kausal22.html#answerlist-1",
    "href": "posts/kausal22/kausal22.html#answerlist-1",
    "title": "kausal22",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nRichtig\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/tidymodels-penguins01/tidymodels-penguins01.html",
    "href": "posts/tidymodels-penguins01/tidymodels-penguins01.html",
    "title": "tidymodels-penguins01",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein lineares Modell mit tidymodels und zwar anhand des penguins Datensatzes.\nModellgleichung: body_mass_g ~ bill_length_mm, data = d_train.\nGesucht ist R-Quadrat als Maß für die Modellgüte im TEST-Sample.\nHinweise:\n\nFixieren Sie die Zufallszahlen auf den Startwert 42.\nNutzen Sie eine v=5,r=1 CV.\nEntfernen Sie fehlende Werte in den Variablen.\nVerzichten Sie auf weitere Schritte der Vorverarbeitung.\n\n         \n\n\nLösung\nSetup:\n\nlibrary(tidymodels)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd &lt;- read.csv(d_path)\n\nDatensatz aufteilen:\n\nset.seed(42)\nd_split &lt;- initial_split(penguins)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\nWorkflow:\n\nrec1 &lt;-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n  step_naomit(all_numeric())\n\nlm_mod &lt;-\n  linear_reg()\n\nwflow &lt;-\n  workflow() %&gt;%\n  add_recipe(rec1) %&gt;%\n  add_model(lm_mod)\n\nwflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n\nBacken:\n\nd_baked &lt;- prep(rec1) %&gt;% bake(new_data = NULL)\nd_baked %&gt;% head()\n\n# A tibble: 6 × 2\n  bill_length_mm body_mass_g\n           &lt;dbl&gt;       &lt;int&gt;\n1           36          3450\n2           50.9        3675\n3           46.1        4500\n4           45.8        4150\n5           48.6        5800\n6           39          3650\n\n\nAuf NA prüfen:\n\nsum(is.na(d_baked))\n\n[1] 0\n\n\nCV:\n\nset.seed(42)\nfolds &lt;- vfold_cv(d_train, v = 5)\nfolds\n\n#  5-fold cross-validation \n# A tibble: 5 × 2\n  splits           id   \n  &lt;list&gt;           &lt;chr&gt;\n1 &lt;split [206/52]&gt; Fold1\n2 &lt;split [206/52]&gt; Fold2\n3 &lt;split [206/52]&gt; Fold3\n4 &lt;split [207/51]&gt; Fold4\n5 &lt;split [207/51]&gt; Fold5\n\n\nResampling:\n\npenguins_resamples &lt;-\n  fit_resamples(\n    wflow,\n    resamples = folds\n  )\npenguins_resamples\n\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics         .notes          \n  &lt;list&gt;           &lt;chr&gt; &lt;list&gt;           &lt;list&gt;          \n1 &lt;split [206/52]&gt; Fold1 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [206/52]&gt; Fold2 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [206/52]&gt; Fold3 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [207/51]&gt; Fold4 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [207/51]&gt; Fold5 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\n\nLast Fit:\n\npenguins_last &lt;- last_fit(wflow, d_split)\n\nModellgüte im Test-Sample:\n\npenguins_last %&gt;% collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     652.    Preprocessor1_Model1\n2 rsq     standard       0.385 Preprocessor1_Model1\n\n\nR-Quadrat:\n\nsol &lt;-  collect_metrics(penguins_last)[[\".estimate\"]][2]\nsol\n\n[1] 0.3850608\n\n\n\nCategories:\n\nds1\ntidymodels\nprediction\nyacsda\nstatlearning\nnum"
  },
  {
    "objectID": "posts/zwert-berechnen/zwert-berechnen.html",
    "href": "posts/zwert-berechnen/zwert-berechnen.html",
    "title": "zwert-berechnen",
    "section": "",
    "text": "Exercise\nSei \\(X \\sim \\mathcal{N}(42, 7)\\) und \\(x_1 = 28\\).\nBerechnen Sie den z-Wert für \\(x_1\\)!\nHinweis:\n\nRunden Sie ggf. auf die nächste ganze Zahl.\n\n         \n\n\nSolution\n\nx1_z = (x1 - x_mw) / x_sd\n\n-2\n\nCategories:\n\nz-value\nR\nmath"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html",
    "title": "tidymodels-penguins06",
    "section": "",
    "text": "Berechnen Sie ein kNN-Modell mit tidymodels und zwar anhand des penguins Datensatzes.\nModellgleichung: body_mass_g ~ bill_length_mm.\nVergleichen Sie die Testfehlerhöhe im Test-Sample in folgenden zwei Szenarien:\n\nTrain-Test-Aufspaltung, 10 Mal wiederholt\n10-fache Kreuzvalidierung (im Train-Sample) (\\(v=10, r= 1\\))\n\nHinweise:\n\nTuning Sie - nur im 2. Szenario - \\(k\\) mit den Werten 5, 10, 15.\nLöschen Sie alle Zeilen mit fehlenden Werten in den Prädiktoren.\nBeachten Sie die üblichen Hinweise.\nNatürlich gilt: Ceteris paribus. Halten Sie also die Modelle im Übrigen vergleichbar bzw. identisch.\n\n\n\n\nSzenario 1 hat den geringeren Vorhersagefehler.\nSzenario 2 hat den geringeren Vorhersagefehler.\nDer Vorhersagefehler ist in beiden Szenarien gleich.\nKeine Antwort möglich."
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#answerlist",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#answerlist",
    "title": "tidymodels-penguins06",
    "section": "",
    "text": "Szenario 1 hat den geringeren Vorhersagefehler.\nSzenario 2 hat den geringeren Vorhersagefehler.\nDer Vorhersagefehler ist in beiden Szenarien gleich.\nKeine Antwort möglich."
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#setup",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#setup",
    "title": "tidymodels-penguins06",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nWir dürfen keine fehlenden Werte in der Y-Variable haben (im Train-Set), sonst meckert Tidymodels:\n\nd2 &lt;- \n  d %&gt;% \n  drop_na(body_mass_g)"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#daten-aufteilen",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#daten-aufteilen",
    "title": "tidymodels-penguins06",
    "section": "Daten aufteilen:",
    "text": "Daten aufteilen:\n\nset.seed(42)\nd_split &lt;- initial_split(d2)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#cv-1",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#cv-1",
    "title": "tidymodels-penguins06",
    "section": "CV",
    "text": "CV\n\nset.seed(42)\nfolds &lt;- vfold_cv(d_train, v = 10, repeats = 1)"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#workflow",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#workflow",
    "title": "tidymodels-penguins06",
    "section": "Workflow",
    "text": "Workflow\n\nrec1 &lt;-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n  step_naomit(all_numeric_predictors())\n\nknn_model &lt;-\n  nearest_neighbor(\n    mode = \"regression\",\n    neighbors = tune()\n  ) \n\nwflow &lt;-\n  workflow() %&gt;%\n  add_recipe(rec1) %&gt;%\n  add_model(knn_model)"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#fitten",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#fitten",
    "title": "tidymodels-penguins06",
    "section": "Fitten",
    "text": "Fitten\n\nd_resamples &lt;-\n  tune_grid(\n    wflow,\n    resamples = folds,\n    control = control_grid(save_workflow = TRUE),\n    grid = data.frame(neighbors = c(5, 10, 15)),\n    metrics = metric_set(rmse)\n    )"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#modellgüte",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#modellgüte",
    "title": "tidymodels-penguins06",
    "section": "Modellgüte",
    "text": "Modellgüte\n\nbestfit1 &lt;- fit_best(x = d_resamples)\nlastfit1 &lt;- last_fit(bestfit1, d_split)\ncollect_metrics(lastfit1)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     586.    Preprocessor1_Model1\n2 rsq     standard       0.410 Preprocessor1_Model1"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#cv-2",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#cv-2",
    "title": "tidymodels-penguins06",
    "section": "CV",
    "text": "CV\nWir resamplen nicht über das Train-Sample, sondern über die ganze Stichprobe:\n\nset.seed(42)\nfolds2 &lt;- vfold_cv(d2, v = 2, repeats = 10)"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#fitten-1",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#fitten-1",
    "title": "tidymodels-penguins06",
    "section": "Fitten",
    "text": "Fitten\n\nd_resamples2 &lt;-\n  tune_grid(\n    wflow,\n    resamples = folds2,\n    control = control_grid(save_workflow = TRUE),\n    grid = data.frame(neighbors = c(5, 10, 15)),\n    metrics = metric_set(rmse)\n    )"
  },
  {
    "objectID": "posts/tidymodels-penguins06/tidymodels-penguins06.html#modellgüte-1",
    "href": "posts/tidymodels-penguins06/tidymodels-penguins06.html#modellgüte-1",
    "title": "tidymodels-penguins06",
    "section": "Modellgüte",
    "text": "Modellgüte\n\nbestfit2 &lt;- fit_best(x = d_resamples2)\nlastfit2 &lt;- last_fit(bestfit2, d_split)\ncollect_metrics(lastfit2)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     586.    Preprocessor1_Model1\n2 rsq     standard       0.410 Preprocessor1_Model1\n\n\n\nCategories:\n\ntidymodels\nstatlearning\nschoice"
  },
  {
    "objectID": "posts/Urne1/Urne1.html",
    "href": "posts/Urne1/Urne1.html",
    "title": "Urne1",
    "section": "",
    "text": "Aufgabe\nIn einer Urne befinden sich fünf Kugeln, von denen 4 rot sind und 1 weiß.\nAufgabe: Wie groß ist die Wahrscheinlichkeit, dass bei 2 Ziehungen ohne Zurücklegen (ZoZ) genau 2 rote Kugeln gezogen werden?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nSei \\(R1\\) “rote Kugel im 1. Zug gezogen”.\nSei \\(R2\\) “rote Kugel im 2. Zug gezogen”.\nGesucht ist die gemeinsame Wahrscheinlichkeit für R1 und R2: \\(Pr(R1 \\cap R2)\\), die Wahrscheinlichkeit also, dass beide Ereignisse (R1 und R2) eintreten.\nFür R1 gilt: \\(Pr(R1) = 4/5\\).\nFür R2 gilt: \\(Pr(R2|R1) = 3/4\\).\nMan beachte, dass R1 und R2 nicht unabhängig sind, d.h. sie sind abhängig (voneinander).\n\nPr_R1 &lt;- 4/5\nPr_R2_geg_R1 &lt;- 3/4\nPr_R1_R2 &lt;- Pr_R1 * Pr_R2_geg_R1\nPr_R1_R2\n\n[1] 0.6\n\n\nDie Lösung lautet 0.6.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/kausal_corona_glatze/kausal_corona_glatze.html",
    "href": "posts/kausal_corona_glatze/kausal_corona_glatze.html",
    "title": "kausal_corona_glatze",
    "section": "",
    "text": "Exercise\nVor einiger Zeit war in der Presse Folgendes zu lesen:\n\nRecent studies linking male sex hormones to severe coronavirus infections point to a potential predictor of disease severity: baldness. International researchers studying global data on COVID-19 patients have found that in general, the more male hormones called androgens someone has, the easier it is for SARS-CoV-2 to enter and take over their immune systems. And bald men have more of these hormones than men with full manes, and women.\n\nQuelle\nAllerdings versäumten es einige (viele) der Pressemeldungen, eine belastbare Quelle, also den Forschungsartikel, auf dem dieses Befund beruhen muss, zu zitieren.\nEine mögliche Kausalhypothese für die obige Pressemitteilung ist, dass männliche Sexualhormone eine gemeinsame Ursache für Haarausfall und auch die Schwere eine Covid19-Infektion darstellen.\nAllerdings sind auch andere, skeptischere, Hypothesen denkbar. Skeptisch meint dabei, dass auf komplexere Erklärungen zugunsten einfachere verzichtet werden kann.\nSo benötigt etwa die Hypothese “Störche bringen Babies” komplexe Erkärungsmodelle; eine skeptischere (einfachere) Erklärung wäre, dass die (geringe) Urbanisierung eines Landstrichs die gemeinsame Ursache für sowohl die Häufigkeit von Störchen als auch von Babies darstellt.\nGeben Sie eine skeptische Kausalerkärung an für den Befund, dass Haarausfall und Schwere eines Coronaverlaufs assoziiert sind!.\n         \n\n\nSolution\nAlter ist sowohl die Ursache von Haarausfall (bei Männern) als auch von der Schwere eines Corona-Verlaufs. Daher sind Haarausfall (bei Männern) und die Schwerer eines Corona-Verlaufs durch das Alter konfundiert. Ohne Berücksichtigung der gemeinsamen Ursache erscheint Haarausfall mit Corona-Schwere korreliert zu sein. Nach Kontrolle der konfundierenden Variablen verschwindet die Korrelation.\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/Kung-height/Kung-height.html",
    "href": "posts/Kung-height/Kung-height.html",
    "title": "Kung-height",
    "section": "",
    "text": "Exercise\nBetrachten Sie den Datensatz zur Größe der !Kung:\n\nlibrary(tidyverse)\nurl_kung &lt;- \"https://raw.githubusercontent.com/rmcelreath/rethinking/master/data/Howell1.csv\"\nd &lt;-\n  read_delim(url_kung, delim = \";\")  # Strichpunkt als Trennzeichen in der CSV-Datei\n\n\nUntersuchen Sie mit Hilfe eines Diagramms, ob bzw. inwieweit sich die Größe der erwachsenen Personen normalverteilt.\nKennzahlen, die angegeben, inwieweit sich eine Größe normalverteilt, sind Schiefe und Kurtosis. Die Schiefe gibt an, wie symmetrische eine Verteilung ist.\n\nNormalverteilungen sind symmetrisch und haben daher einen Wert von 0 für Schiefe. Kurtosis gibt die “Wölbung”, also wie “spitz” oder “plattgedrückt” eine Verteilung ist. Eine Normalverteilung hat eine Wert von 3 für Kurtosis.\nEntsprechende R-Funktionen finden Sie z.B. im Paket moments. Berechnen Sie die beiden Kennzahlen für die Gruppe der Erwachsenen sowie aufgeteilt nach dem Geschlecht. Interpretieren Sie das Ergebnis.\n\nDiskutieren Sie, inwieweit man aus biologisch fundierten Sachverhalten (also ontologisch) eine Normalverteilung der Körpergröße annehmen kann.\n\n         \n\n\nSolution\n\nVisuelle Prüfung der Normalverteilung\n\n\nd2 &lt;- d %&gt;% \n  filter(age &gt;= 18)\n\nd3 &lt;- d2 %&gt;% \n  select(-male)\n\nggplot(d2, aes(x = height)) +\n  geom_density()\n\nggplot(d2, aes(x = height )) +\n  facet_wrap(~ male) +\n    geom_density()\n\nggplot(d2, aes(x = height)) +\n  facet_wrap(~ male) +\n  geom_histogram(data = d3, fill = \"grey60\", alpha = .6) +\n    geom_histogram() +\n  labs(caption = \"Grau hinterlegt ist das Histogramm für die Daten über beide Geschlechter\")\n\n\n\n\n\n\n\n\n\n\n\nSchiefe und Kurtosis\n\n\nlibrary(easystats)\nd2 %&gt;%  skewness()\n\nParameter | Skewness |    SE\n----------------------------\nheight    |    0.151 | 0.129\nweight    |    0.132 | 0.129\nage       |    0.665 | 0.129\nmale      |    0.126 | 0.129\n\nd2 %&gt;% kurtosis()\n\nParameter | Kurtosis |    SE\n----------------------------\nheight    |   -0.483 | 0.256\nweight    |   -0.506 | 0.256\nage       |   -0.213 | 0.256\nmale      |   -1.996 | 0.256\n\n\n\nNormalverteilung, Begründung\n\nEs ist plausibel anzunehmen, dass der Phänotyp Körpergröße das Resultat des (kausalen) Einflusses vieler Gene ist, vieler Gene, die über einen vergleichbar starken Einfluss verfügen.\nEine besondere Situation stellt das X- bzw. Y-Chromosom dar, das Gene zum Geschlecht bereitstellt. Das Geschlecht ist ein einzelner Faktor, der (erfahrungsgemäß) einen relativ großen Einfluss auf die Körpergröße hat (in Anbetracht, dass vielleicht Tausende Gene additiv die Größe bestimmen). Insofern ist eine klarere Annäherung an die Normalverteilung zu erwarten, wenn man die Geschlechter einzeln betrachtet.\n\nCategories:\n\nbayes\nppv\nprobability"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html",
    "href": "posts/germeval-senti01/germeval-senti01.html",
    "title": "germeval-senti01",
    "section": "",
    "text": "Führen Sie eine Sentiment-Analyse als Teils eines Tidymodels-Rezept durch. Modellieren Sie dann mit einem einfachen linearen Modell die abhängige Variable.\nVerwenden Sie diesen Datensatz:\n\n# Analyse-Daten:\ndata(\"germeval_train\", package = \"pradadata\")\ndata(\"germeval_test\", package = \"pradadata\")\n# Sentiment-Daten\ndata(\"sentiws\", package = \"pradadata\")\n\nDie AV ist c1.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#setup",
    "href": "posts/germeval-senti01/germeval-senti01.html#setup",
    "title": "germeval-senti01",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(syuzhet)  # get_sentiment\nlibrary(tidymodels)\nlibrary(tictoc)"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#daten",
    "href": "posts/germeval-senti01/germeval-senti01.html#daten",
    "title": "germeval-senti01",
    "section": "Daten",
    "text": "Daten\nc2 brauchen wir hier nicht:\n\nd_train &lt;-\n  germeval_train |&gt; \n  select(-c2) |&gt; \n  as_tibble()"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#rezept",
    "href": "posts/germeval-senti01/germeval-senti01.html#rezept",
    "title": "germeval-senti01",
    "section": "Rezept",
    "text": "Rezept\nRezept definieren:\n\nrec &lt;-\n  recipe(c1 ~ ., data = d_train) |&gt; \n  update_role(id, new_role = \"id\")  |&gt; \n  #update_role(c2, new_role = \"ignore\") |&gt; \n  update_role(text, new_role = \"ignore\") |&gt; \n  step_mutate(n_emo = get_sentiment(text,  # aus `syuzhet`\n                                    method = \"custom\",\n                                    lexicon = sentiws))  |&gt; \n  step_rm(text)  # Datensatz verschlanken\n\nstep_mutate ergänzt für die erzeugte (mutierte) Variable automatisch eine Rolle im Rezept, nimmt sie also als Prädiktor auf.\nMal schauen:\n\nrec\n\n\ntidy(rec)\n\n# A tibble: 2 × 6\n  number operation type   trained skip  id          \n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;   &lt;lgl&gt; &lt;chr&gt;       \n1      1 step      mutate FALSE   FALSE mutate_9nYuS\n2      2 step      rm     FALSE   FALSE rm_LjysR    \n\n\nPreppen und backen:\n\ntic()\nrec_prepped &lt;- prep(rec)\ntoc()\n\n10.089 sec elapsed\n\n\n\nrec_prepped\n\n\nrec_baked &lt;- bake(rec_prepped, new_data = NULL)\nhead(rec_baked)\n\n# A tibble: 6 × 3\n     id c1       n_emo\n  &lt;int&gt; &lt;fct&gt;    &lt;dbl&gt;\n1     1 OTHER    0.004\n2     2 OTHER   -0.347\n3     3 OTHER    0    \n4     4 OTHER    0    \n5     5 OFFENSE  0    \n6     6 OTHER   -0.346"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#model",
    "href": "posts/germeval-senti01/germeval-senti01.html#model",
    "title": "germeval-senti01",
    "section": "Model",
    "text": "Model\n\nmod &lt;-\n  logistic_reg()"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#workflow",
    "href": "posts/germeval-senti01/germeval-senti01.html#workflow",
    "title": "germeval-senti01",
    "section": "Workflow",
    "text": "Workflow\n\nwf &lt;- workflow() |&gt; \n  add_recipe(rec) |&gt; \n  add_model(mod)"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#fit",
    "href": "posts/germeval-senti01/germeval-senti01.html#fit",
    "title": "germeval-senti01",
    "section": "Fit",
    "text": "Fit\n\ntic()\nfit1 &lt;-\n  fit(wf,\n      data = d_train)\ntoc()\n\n9.015 sec elapsed\n\n\n\nfit1\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_mutate()\n• step_rm()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:  stats::glm(formula = ..y ~ ., family = stats::binomial, data = data)\n\nCoefficients:\n(Intercept)        n_emo  \n     0.6819       0.4802  \n\nDegrees of Freedom: 5008 Total (i.e. Null);  5007 Residual\nNull Deviance:      6402 \nResidual Deviance: 6392     AIC: 6396"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#test-set-güte",
    "href": "posts/germeval-senti01/germeval-senti01.html#test-set-güte",
    "title": "germeval-senti01",
    "section": "Test-Set-Güte",
    "text": "Test-Set-Güte\nVorhersagen im Test-Set:\n\ntic()\npreds &lt;-\n  predict(fit1, new_data = germeval_test)\ntoc()\n\n4.985 sec elapsed\n\n\nUnd die Vorhersagen zum Test-Set hinzufügen, damit man TRUTH und ESTIMATE vergleichen kann:\n\nd_test &lt;-\n  germeval_test |&gt; \n  bind_cols(preds) |&gt; \n  mutate(c1 = as.factor(c1))\n\n\nmetrics(d_test,\n        truth = c1,\n        estimate = .pred_class)\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.660\n2 kap      binary         0"
  },
  {
    "objectID": "posts/germeval-senti01/germeval-senti01.html#baseline",
    "href": "posts/germeval-senti01/germeval-senti01.html#baseline",
    "title": "germeval-senti01",
    "section": "Baseline",
    "text": "Baseline\nEin einfaches Referenzmodell ist, einfach die häufigste Kategorie vorherzusagen:\n\nd_train |&gt; \n  count(c1)\n\n# A tibble: 2 × 2\n  c1          n\n  &lt;chr&gt;   &lt;int&gt;\n1 OFFENSE  1688\n2 OTHER    3321\n\n\n\nCategories:\n\ntidymodels\ntextmining\nprediction\nsentimentanalysis\ngermeval\nstring"
  },
  {
    "objectID": "posts/rope2/rope2.html",
    "href": "posts/rope2/rope2.html",
    "title": "rope2",
    "section": "",
    "text": "Im Datensatz mtcars: Ist der (mittlere) Unterschied im Spritverbrauch zwischen den beiden Gruppen Automatik vs. Schaltgetriebe vernachlässigbar?\nDefinieren Sie selber, was “vernachlässigbar klein” bedeutet. Oder greifen Sie auf die Definition “höchstens eine Meile” zurück.\nPrüfen Sie rechnerisch, anhand des angegebenen Datensatzes, folgende Behauptung:\nBehauptung: “Der Unterschied ist vernachlässigbar klein!”\nWählen Sie die Antwortoption, die am besten zu der obigen Behauptung passt!\nHinweise\nAntwortoptionen:\n\n\n\nJa, die Behauptung ist korrekt.\nNein, die Behauptung ist falsch.\nDie Daten sind bzw. das Modell nicht konkludent; es ist keine Entscheidung über die Behauptung möglich.\nAuf Basis der bereitgestellten Informationen ist keine Antwort möglich."
  },
  {
    "objectID": "posts/rope2/rope2.html#answerlist",
    "href": "posts/rope2/rope2.html#answerlist",
    "title": "rope2",
    "section": "",
    "text": "Ja, die Behauptung ist korrekt.\nNein, die Behauptung ist falsch.\nDie Daten sind bzw. das Modell nicht konkludent; es ist keine Entscheidung über die Behauptung möglich.\nAuf Basis der bereitgestellten Informationen ist keine Antwort möglich."
  },
  {
    "objectID": "posts/rope2/rope2.html#answerlist-1",
    "href": "posts/rope2/rope2.html#answerlist-1",
    "title": "rope2",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nRichtig\nFalsch\nFalsch\n\n\nCategories:\n\nrope\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/mariokart-desk01/mariokart-desk01.html",
    "href": "posts/mariokart-desk01/mariokart-desk01.html",
    "title": "mariokart-desk01",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\nNutzen Sie describe_distribution um deskriptive Statistiken (Lagemaße, Streuungsmaße) für die Variable total_pr zu berechnen.\nWie viele Statistiken werden (im Default) berichtet?\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nOder so:\n\ndata(mariokart, package = \"openintro\")  # aus dem Paket \"openintro\"\n\nDazu muss das Paket openintro auf Ihrem Computer installiert sein.\nDaten zusammenfassen zu deskriptiven Statistiken:\nMit dataExplorer:\n\nmariokart %&gt;% \n  select(total_pr) %&gt;% \n  describe_distribution()  \n\nVariable |  Mean |    SD |   IQR |           Range | Skewness | Kurtosis |   n | n_Missing\n------------------------------------------------------------------------------------------\ntotal_pr | 49.88 | 25.69 | 12.99 | [28.98, 326.51] |     9.04 |    96.14 | 143 |         0\n\n\nFalls Sie Teile der R-Syntax nicht kennen: Im Zweifel einfach ignorieren :-)\nAntwort: Es werden 8 Statistiken berichtet (im Default).\n\nCategories:\n\ndatawrangling\neda\ntidyverse\nvis\nvariability\nnum"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html",
    "href": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html",
    "title": "Verteilungen-Quiz-12",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nBei einer symmetrischen Verteilung gilt: \\(\\bar{x} = Md = \\text{Modus}\\).\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html#answerlist",
    "href": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html#answerlist",
    "title": "Verteilungen-Quiz-12",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-12/Verteilungen-Quiz-12.html#answerlist-1",
    "title": "Verteilungen-Quiz-12",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/wrangle3/wrangle3.html",
    "href": "posts/wrangle3/wrangle3.html",
    "title": "wrangle3",
    "section": "",
    "text": "Welche Aussage zu der Funktionsweise folgender Funktionen im R-Paket dplyr ist richtig?\n\nfilter\nselect\nsummarise\ncount\ngroup_by\n\n\n\n\nDas erste Argument darf nie ein Dataframe sein.\nDas erste Argument ist immer die zu analysierende Variable.\nSpaltennamen müssen mit Anführungsstrichen benannt werden.\nEs wird immer eine Tabelle ausgegeben.\nFunktionsnamen sind (zumeist) nicht als Verben formuliert."
  },
  {
    "objectID": "posts/wrangle3/wrangle3.html#answerlist",
    "href": "posts/wrangle3/wrangle3.html#answerlist",
    "title": "wrangle3",
    "section": "",
    "text": "Das erste Argument darf nie ein Dataframe sein.\nDas erste Argument ist immer die zu analysierende Variable.\nSpaltennamen müssen mit Anführungsstrichen benannt werden.\nEs wird immer eine Tabelle ausgegeben.\nFunktionsnamen sind (zumeist) nicht als Verben formuliert."
  },
  {
    "objectID": "posts/wrangle3/wrangle3.html#answerlist-1",
    "href": "posts/wrangle3/wrangle3.html#answerlist-1",
    "title": "wrangle3",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nWahr\nFalsch\n\n\nCategories:\n\ndatawrangling\neda\nschoice"
  },
  {
    "objectID": "posts/korr01/korr01.html",
    "href": "posts/korr01/korr01.html",
    "title": "korr01",
    "section": "",
    "text": "Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\n\n\n\n\nWelcher Korrelationswert (Pearson) beschreibt die Korrelation in den Daten am besten?\n\n\n\n\\(r = 1\\)\n\\(r = -1\\)\n\\(r = 0\\)\n\\(r = .8\\)\n\\(r = -.8\\)"
  },
  {
    "objectID": "posts/korr01/korr01.html#answerlist",
    "href": "posts/korr01/korr01.html#answerlist",
    "title": "korr01",
    "section": "",
    "text": "\\(r = 1\\)\n\\(r = -1\\)\n\\(r = 0\\)\n\\(r = .8\\)\n\\(r = -.8\\)"
  },
  {
    "objectID": "posts/korr01/korr01.html#answerlist-1",
    "href": "posts/korr01/korr01.html#answerlist-1",
    "title": "korr01",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\ndyn\neda\nassociation\nschoice"
  },
  {
    "objectID": "posts/regex01/regex01.html",
    "href": "posts/regex01/regex01.html",
    "title": "regex01",
    "section": "",
    "text": "Aufgabe\nErstellen Sie einen Vektor mit den Namen aller CSV-Dateien eines beliebigen Ordners Ihres Computers.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nEinen Order auswählen:\nDateien als Strings einlesen:\n\n\ncharacter(0)\n\n\nDateien als Strings einlesen:\n\n\ncharacter(0)\n\n\nNur CSV-Dateien einlesen:\n\n\ncharacter(0)\n\n\n\nCategories:\n\ntextmining\nregex\nstring"
  },
  {
    "objectID": "posts/ReThink3m2/ReThink3m2.html",
    "href": "posts/ReThink3m2/ReThink3m2.html",
    "title": "ReThink3m2",
    "section": "",
    "text": "Exercise\nNehmen wir an, wir haben 8 (Wasser-)“Treffer” (\\(W=8\\)) bei 15 Würfen (\\(N=15\\)) erhalten (wieder im Globusversuch).\n\nZiehen Sie \\(10^4\\) Stichproben aus der Posteriori-Verteilung basierend auf der Gittermethode. Gehen Sie von einer gleichverteilung Priori-Wahrscheinlichkeit aus.\nVisualisieren Sie die Verteilung der Stichproben.\nBerechnen Sie ds 90%-HDI.\n\nHinweise:\n\nBerechnen Sie eine Bayes-Box (Gittermethode).\nVerwenden Sie 1000 Gitterwerte.\nFixieren Sie die Zufallszahlen mit dem Startwert 42, d.h. set.seed(42).\nGehen Sie von einem gleichverteilten Prior aus.\n\nQuelle: McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Aufl.). Taylor and Francis, CRC Press.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n\n\n\nPost-Verteilung berechnen:\n\np_grid &lt;- seq(from = 0, to = 1, length.out = 1000)\nprior &lt;- rep(1, 1000)\nlikelihood &lt;- dbinom(8, size = 15, prob = p_grid)\nposterior &lt;- likelihood * prior\nposterior &lt;- posterior / sum(posterior)\n\nStichproben-Postverteilung erstellen:\n\nsamples &lt;- \n  tibble(anteil_wasser = sample(p_grid, prob = posterior, size = 1e4, replace = TRUE))\n\nhead(samples)\n\n# A tibble: 6 × 1\n  anteil_wasser\n          &lt;dbl&gt;\n1         0.543\n2         0.571\n3         0.375\n4         0.358\n5         0.337\n6         0.527\n\n\n\n\n\n\nsamples %&gt;% \n  ggplot() +\n  aes(x = anteil_wasser) +\n  geom_histogram() + \n  labs(title = \"Stichproben aus der Posteriori-Verteilung\")\n\n\n\n\n\n\n\n\nlibrary(easystats)\nhdi(samples, prob = 0.9)\n\nHighest Density Interval\n\nParameter     |      95% HDI\n----------------------------\nanteil_wasser | [0.32, 0.77]\n\n\n\nCategories:\n\nbayes\npost\nprobability"
  },
  {
    "objectID": "posts/wskt-quiz06/wskt-quiz06.html",
    "href": "posts/wskt-quiz06/wskt-quiz06.html",
    "title": "wskt-quiz06",
    "section": "",
    "text": "Jemand geht zum Krebstest. Der Test habe eine Sicherheit von 95%. Die Grundrate des Krebs liege bei 0.001. Leider zeigt der Test einen positiven Befund, also Krebs.\nGilt: \\(Pr(K|T) = .95\\)?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz06/wskt-quiz06.html#answerlist",
    "href": "posts/wskt-quiz06/wskt-quiz06.html#answerlist",
    "title": "wskt-quiz06",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz06/wskt-quiz06.html#answerlist-1",
    "href": "posts/wskt-quiz06/wskt-quiz06.html#answerlist-1",
    "title": "wskt-quiz06",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/dplyr-uebersetzen/dplyr-uebersetzen.html",
    "href": "posts/dplyr-uebersetzen/dplyr-uebersetzen.html",
    "title": "dplyr-uebersetzen",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nAufgabe\nImportieren Sie den folgenden Datensatz in R:\n\nmtcars &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/mtcars.csv\")\n\nÜbersetzen Sie dann die folgende R-Sequenz ins Deutsche:\n\nmtcars %&gt;% \n  drop_na() %&gt;% \n  select(mpg, hp, cyl) %&gt;% \n  filter(hp &gt; 100, cyl &gt;= 6) %&gt;% \n  group_by(cyl) %&gt;% \n  summarise(mpg_mean = mean(mpg))\n\n# A tibble: 2 × 2\n    cyl mpg_mean\n  &lt;dbl&gt;    &lt;dbl&gt;\n1     6     19.7\n2     8     15.1\n\n\n         \n\n\nLösung\nHey R:\n\nNimm den Datensatz mtcars UND DANN\nhau alle Zeilen raus, in denen es fehlende Werte gibt UND DANN\nwähle (selektiere) die folgenden Spalten: Spritverbrauch, PS, Zylinder UND DANN\nfilter Autos mit mehr als 100 PS und mit mindestens 6 Zylindern UND DANN\ngruppiere nach der Zahl der Zylinder UND DANN\nfasse den Verbrauch zum Mittelwert zusammen.\n\n\nCategories:\n\ndatawrangling\ntidyverse\nstring"
  },
  {
    "objectID": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html",
    "href": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html",
    "title": "Histogramm-in-Boxplot",
    "section": "",
    "text": "Histogramm:\n\n\n\n\n\nBoxplots:\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\nBoxplot A\nBoxplot B\nBoxplot C\nBoxplot D\nBoxplot E"
  },
  {
    "objectID": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html#answerlist",
    "href": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html#answerlist",
    "title": "Histogramm-in-Boxplot",
    "section": "",
    "text": "Boxplot A\nBoxplot B\nBoxplot C\nBoxplot D\nBoxplot E"
  },
  {
    "objectID": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html#answerlist-1",
    "href": "posts/Histogramm-in-Boxplot/Histogramm-in-Boxplot.html#answerlist-1",
    "title": "Histogramm-in-Boxplot",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nvis\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/rope4/rope4.html",
    "href": "posts/rope4/rope4.html",
    "title": "rope4",
    "section": "",
    "text": "Einer der (bisher) größten Studien der Untersuchung psychologischer Konsequenzen (oder Korrelate) der Covid-Zeit ist die Studie COVIDiStress.\nIm Folgenden sollen Sie folgende Forschungsfrage untersuchen:\nForschungsfrage:\nIst der Unterschied zwischen Männern und Frauen (Dem_gender) im Hinblick zum Zusammenhang von Stress (PSS10_avg, AV) und Neurotizismus (neu, UV) vernachlässigbar klein?\nDen Datensatz können Sie so herunterladen (Achtung, groß):\n\nosf_d_path &lt;- \"https://osf.io/cjxua/?action=download\"\n\nd &lt;- read_csv(osf_d_path)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nHinweise:\n\nSie benötigen einen Computer, um diese Aufgabe zu lösen.\nVerwenden Sie die statistischen Methoden, die im Unterricht behandelt wurden.\nVerwenden Sie Ansätze aus der Bayes-Statistik zur Lösung dieser Aufgabe.\nBei der Variable für Geschlecht können Sie sich auf Fälle begrenzen, die Männer und Frauen umfassen.\nWandeln Sie die die Variable für Geschlecht in eine binäre Variable - also Werte mit 0 und 1 - um.\nAlle Daten (und weitere Informationen) zum Projekt sind hier abgelegt.\nEine Beschreibung der Variablen der Studie finden Sie hier.\nFixieren Sie die Zufallszahlen auf den Startwert 42.\n\nAntwortoptionen:\n\n\n\nJa\nNein\nDie Daten sind nicht konkludent; es ist keine Entscheidung möglich.\nAuf Basis der bereitgestellten Informationen ist keine Entscheidung möglich."
  },
  {
    "objectID": "posts/rope4/rope4.html#answerlist",
    "href": "posts/rope4/rope4.html#answerlist",
    "title": "rope4",
    "section": "",
    "text": "Ja\nNein\nDie Daten sind nicht konkludent; es ist keine Entscheidung möglich.\nAuf Basis der bereitgestellten Informationen ist keine Entscheidung möglich."
  },
  {
    "objectID": "posts/rope4/rope4.html#answerlist-1",
    "href": "posts/rope4/rope4.html#answerlist-1",
    "title": "rope4",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\nrope\nbayes"
  },
  {
    "objectID": "posts/nasa03/nasa03.html",
    "href": "posts/nasa03/nasa03.html",
    "title": "nasa03",
    "section": "",
    "text": "Aufgabe\nViele Quellen berichten Klimadaten unserer Erde, z.B. auch National Aeronautics and Space Administration - Goddard Institute for Space Studies.\nVon dieser Quelle beziehen wir diesen Datensatz.\nDie Datensatz sind auf der Webseite wie folgt beschrieben:\nTables of Global and Hemispheric Monthly Means and Zonal Annual Means\nCombined Land-Surface Air and Sea-Surface Water Temperature Anomalies (Land-Ocean Temperature Index, L-OTI)\nThe following are plain-text files in tabular format of temperature anomalies, i.e. deviations from the corresponding 1951-1980 means.\n\nGlobal-mean monthly, seasonal, and annual means, 1880-present, updated through most recent month: TXT, CSV\n\nStarten Sie zunächst das R-Paket tidyverse falls noch nicht geschehen.\n\nlibrary(tidyverse)\n\nImportieren Sie dann die Daten:\n\ndata_path &lt;- \"https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv\"\nd &lt;- read_csv(data_path, skip = 1)\n\nWir lassen die 1. Zeile des Datensatzes aus (Argument skip), da dort Metadaten stehen, also keine Daten, sondern Informationen (Daten) zu den eigentlichen Daten.\nAufgaben\n\nErstellen Sie für jeden Januar eine Variable (temp_is_above), die ausgibt, ob die Temperatur über oder unter dem Durchschnitt liegt (d.h. eine negative oder positive Abweichung ist). Nutzen Sie als Ausprägungen die Werte “yes” und “no”.\nErstellen Sie dann eine Variable, die das Jahrhundert angibt (19. JH. vs. 20 JH).\nZählen Sie dann wie oft temp_is_above “yes” aufweist pro Jahrhundert (“erhöhter Temperatur”).\nBerechnen Sie das Odds Ratio (Chancenverhältnis) von erhöhter Temperatur (vs. nicht erhöhter Temperatur) zwischen dem 19. und dem 20. Jahrhundert.\n\nFür “Wenn-Dann-Abfragen” eignet sich folgender R-Befehl (als “Pseudocode” dargestellt):\n\nd %&gt;% \n  mutate(neue_spalte = case_when(\n    erste_bedingung_bzw_wenn_teil ~ dann_teil1,\n    zweite_bedingung_bzw_zweiter_wenn_teil ~ dann_teil2\n  ))\n\nEs finden sich online viele Hilfsangebote zu case_when, falls Sie weitere Informationen benötigen.\n         \n\n\nLösung\ntemp_is_above erstellen:\n\nd &lt;-\n  d %&gt;% \n  mutate(temp_is_above = case_when(\n    Jan &gt; 0 ~ \"yes\",\n    Jan &lt;= 0 ~ \"no\"\n  ))\n\nJahrhundert berechnen:\n\nd &lt;-\n  d %&gt;% \n  mutate(century = case_when(\n    Year &lt; 1900 ~ \"19th\",\n    Year &gt;= 1900 ~ \"20th\"\n  ))\n\nErhöhte Werte der Januar-Temperatur pro Jahrhundert berechnen:\n\nd_summarized &lt;- \nd %&gt;% \n  group_by(century) %&gt;% \n  count(temp_is_above)\n\nd_summarized\n\n# A tibble: 4 × 3\n# Groups:   century [2]\n  century temp_is_above     n\n  &lt;chr&gt;   &lt;chr&gt;         &lt;int&gt;\n1 19th    no               19\n2 19th    yes               1\n3 20th    no               56\n4 20th    yes              68\n\n\nDer Befehl count() zählt aus, wie häufig die Ausprägungen der angegebenen Variablen X sind, m.a.W. er gibt die Verteilung von X wieder.\nEs macht vermutlich Sinn, noch die Anteile (relative Häufigkeiten) zu den absoluten Häufigkeiten zu ergänzen:\n\nd_summarized %&gt;% \n  mutate(prop = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   century [2]\n  century temp_is_above     n  prop\n  &lt;chr&gt;   &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt;\n1 19th    no               19 0.95 \n2 19th    yes               1 0.05 \n3 20th    no               56 0.452\n4 20th    yes              68 0.548\n\n\nOdds Ratio berechnen:\nWir bezeichnen mit c19 (für “Chance 1”) das Verhältnis von erhöhter Temperatur zu nicht erhöhter Temperatur im 19. Jahrhundert.\n\nc19 &lt;- 1 / 19\n\nMit c20 bezeichnen wir die analoge Chance für das 20. Jahrhundert:\n\nc20 &lt;- 56 / 67\n\nDas Verhältnis der beiden Chancen gibt das Chancenverhältnis (Odds Ratio, OR):\n\nc19 / c20\n\n[1] 0.06296992\n\n\nGenauso gut kann man das OR von c20 zu c19 ausrechnen, der Effekt bleibt identisch:\n\nc20 / c19\n\n[1] 15.8806\n\n\nIn beiden Fällen ist es ein Faktor von knapp 16.\n\nCategories:\n\ndata\neda\nassociation\nstring"
  },
  {
    "objectID": "posts/movie-sentiment1/movie-sentiment1.html",
    "href": "posts/movie-sentiment1/movie-sentiment1.html",
    "title": "movie-sentiment1",
    "section": "",
    "text": "Eine typische Aufgabe des Textminings ist die Sentimentanalyse. Betrachten wir dazu einen Datensatz des Filmbewertungsportal IMDB. Das Portal veröffentlicht Bewertungen (quantitativ und qualitativ, d.h. als Score oder Bewertung/Review) zu Filmen der Nutzerinnen und Nutzer. Der Datensatz kann über Kaggle bezogen werden.\nIm Rahmen einer Fallstudie soll eine Sentimentanalyse wie folgt abgearbeitet werden:\n\nDaten in R importieren\nRelevante Spalten auswählen (die die Reviews der Nutzer enthalten)\nDaten in das “Tidytext-Format” überführen\nNicht-Wörter (z.B. Zahlen) entfernen\nStopwörter entfernen\nSentimentanalyse durchführen zur Identifikation der Grundemotionen\nVisualisierung der Intensität der Emotionen der 10 häufigsten Wörter (sortierte Balken)\n\nHinweise:\n\nHier ist nur ein Teil des Datensatzes dargestellt (aus Gründen der Einfachheit).\nGehen Sie davon aus, dass die Daten unter dem Pfad verfügbar sind, der in dieser Variable gespeichert ist: path_to_data. Die relevanten Spalten sind dort schon ausgewählt.\n\nWelcher der folgenden R-Syntaxen führt diese Analyse korrekt aus? Wählen Sie die am besten passende Antwort!\n\n\nWarning in inner_join(., emo): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 18 of `x` matches multiple rows in `y`.\nℹ Row 11267 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nOption A\n\n\n\nlibrary(tidytext) \nlibrary(tidyverse)\n\nd &lt;- read_csv(path_to_data)\n\nstopwords &lt;- get_stopwords()\nemo &lt;- get_sentiments('nrc')\n\nwordcount_plot1 &lt;- \nd %&gt;% \n  select(review) %&gt;% \n  unnest_tokens(word, review) %&gt;% \n  filter(str_detect(word, '[a-z]+')) %&gt;% \n  anti_join(stopwords) %&gt;% \n  inner_join(emo) %&gt;% \n  count(word, sort = TRUE) %&gt;% \n  slice_head(n = 10) %&gt;% \n  mutate(word = fct_reorder(word, n)) %&gt;% \n  ggplot(aes(n, word)) +\n  geom_col()\n\n\nOption B\n\n\n\nlibrary(tidytext)\nlibrary(tidyverse)\n\nd &lt;- read_csv(path_to_data)\n\nstopwords &lt;- get_stopwords()\nemo &lt;- get_sentiments('afinn')\n\nwordcount_plot1 &lt;- \nd %&gt;% \n  select(review) %&gt;% \n  unnest_tokens(output = word, input = review) %&gt;% \n  filter(str_detect(word, '[a-z]+')) %&gt;% \n  left_join(stopwords) %&gt;% \n  inner_join(emo) %&gt;% \n  count(word, sort=TRUE) %&gt;% \n  slice_head(n = 10) %&gt;% \n  mutate(word = fct_reorder(word, n)) %&gt;% \n  ggplot(aes(x = n, y = word)) +\n  geom_col()\n\n\nOption C\n\n\n\nlibrary(tidytext)\nlibrary(tidyverse)\n\nd &lt;- read_csv(path_to_data)\n\nstopwords &lt;- get_stopwords()\nemo &lt;- get_sentiments('loughran')\n\nwordcount_plot1 &lt;- \nd %&gt;% \n  select(review) %&gt;% \n  unnest_tokens(word, review) %&gt;% \n  filter(str_detect(word, '\\w.')) %&gt;% \n  anti_join(stopwords) %&gt;% \n  inner_join(emo) %&gt;% \n  count(word, sort = TRUE) %&gt;% \n  slice_head(n = 10) %&gt;% \n  mutate(word = fct_reorder(word, n)) %&gt;% \n  ggplot(aes(n, word)) +\n  geom_col()\n\n\nOption D\n\n\n\nlibrary(tidytext)\nlibrary(tidyverse)\n\nd &lt;- read_csv(path_to_data)\n\nstopwords &lt;- get_stopwords()\nemo &lt;- get_sentiments('nrc')\n\nwordcount_plot1 &lt;- \nd %&gt;% \n  select(review) %&gt;% \n  unnest_tokens(word, review) %&gt;% \n  filter(str_detect(word, '[a-z]+')) %&gt;% \n  left_join(stopwords) %&gt;% \n  inner_join(emo) %&gt;% \n  count(word, sort = TRUE) %&gt;% \n  slice(n = 10) %&gt;% \n  ggplot(aes(x = n, y = word)) +\n  geom_bar()\n  \n\n\nOption E\n\n\nkeine der genannten\n\n\n\n\n\nSyntax A\nSyntax B\nSyntax C\nSyntax D\nSyntax E"
  },
  {
    "objectID": "posts/movie-sentiment1/movie-sentiment1.html#answerlist",
    "href": "posts/movie-sentiment1/movie-sentiment1.html#answerlist",
    "title": "movie-sentiment1",
    "section": "",
    "text": "Syntax A\nSyntax B\nSyntax C\nSyntax D\nSyntax E"
  },
  {
    "objectID": "posts/movie-sentiment1/movie-sentiment1.html#answerlist-1",
    "href": "posts/movie-sentiment1/movie-sentiment1.html#answerlist-1",
    "title": "movie-sentiment1",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ntextmining\nimdb\nschoice"
  },
  {
    "objectID": "posts/posterior_interval/posterior_interval.html",
    "href": "posts/posterior_interval/posterior_interval.html",
    "title": "posterior_interval",
    "section": "",
    "text": "Welches Ergebnis hat der R-Befehl posterior_interval() (R-Paket rstanarm)?\nWählen Sie die (am besten) passende Antwort aus.\nHinweis:\n\nSoweit nicht anders benannt, ist immer die Voreinstellung der betreffenden Funktion gemeint.\n\n\n\n\nEr liefert einen Vorhersagewert aus der Posteriori-Verteilung.\nEr liefert ein Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein 90%-Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein 95%-Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein HDI-Vorhersageinterval aus der Posteriori-Verteilung."
  },
  {
    "objectID": "posts/posterior_interval/posterior_interval.html#answerlist",
    "href": "posts/posterior_interval/posterior_interval.html#answerlist",
    "title": "posterior_interval",
    "section": "",
    "text": "Er liefert einen Vorhersagewert aus der Posteriori-Verteilung.\nEr liefert ein Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein 90%-Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein 95%-Vorhersageintervall aus der Posteriori-Verteilung.\nEr liefert ein HDI-Vorhersageinterval aus der Posteriori-Verteilung."
  },
  {
    "objectID": "posts/posterior_interval/posterior_interval.html#answerlist-1",
    "href": "posts/posterior_interval/posterior_interval.html#answerlist-1",
    "title": "posterior_interval",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\nbayes\nregression\npost"
  },
  {
    "objectID": "posts/CV1/CV1.html",
    "href": "posts/CV1/CV1.html",
    "title": "CV1",
    "section": "",
    "text": "Kreuzvalidierung (CV) ist ein gängiges Verfahren, um die Vorhersagegüte in einem Testdatensatz einzuschätzen und um Parameterwerte (Tuningparameter) auszuwählen. Welche der folgenden Aussagen zur Kreuzvalidierung ist richtig?\n\n\n\nBei der Kreuzvalidierung können unterschiedliche Fehlerwerte (z.B. \\(MSE\\)) resultieren in Abhängigkeit von der (zufälligen) Aufteilung in die jeweiligen Train- und Validierungsstichprobe.\nBei der Anzahl der Faltungen (folds) sollte stets \\(k=10\\) gewählt werden.\nBei der Anzahl der Faltungen (folds) sollte stets \\(k=5\\) gewählt werden.\nDie \\(k\\)-fache Kreuzvalidierung ist rechenintensiver als die LOOCV-Methode.\nDie wiederholte \\(k\\)-fache Kreuzvalidierung erhöht die Gefahr des Overfittings und sollte daher vermieden werden."
  },
  {
    "objectID": "posts/CV1/CV1.html#answerlist",
    "href": "posts/CV1/CV1.html#answerlist",
    "title": "CV1",
    "section": "",
    "text": "Bei der Kreuzvalidierung können unterschiedliche Fehlerwerte (z.B. \\(MSE\\)) resultieren in Abhängigkeit von der (zufälligen) Aufteilung in die jeweiligen Train- und Validierungsstichprobe.\nBei der Anzahl der Faltungen (folds) sollte stets \\(k=10\\) gewählt werden.\nBei der Anzahl der Faltungen (folds) sollte stets \\(k=5\\) gewählt werden.\nDie \\(k\\)-fache Kreuzvalidierung ist rechenintensiver als die LOOCV-Methode.\nDie wiederholte \\(k\\)-fache Kreuzvalidierung erhöht die Gefahr des Overfittings und sollte daher vermieden werden."
  },
  {
    "objectID": "posts/CV1/CV1.html#answerlist-1",
    "href": "posts/CV1/CV1.html#answerlist-1",
    "title": "CV1",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nstatlearning\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/pigs2/pigs2.html",
    "href": "posts/pigs2/pigs2.html",
    "title": "pigs2",
    "section": "",
    "text": "Aufgabe\n\nlibrary(tidyverse)  # Datenjudo\nlibrary(rstanarm)  # Bayes-Inferenz\nlibrary(easystats)  # Komfort\n\nLaden Sie den Datensatz toothgrowth, z.B. von dieser Quelle. In dem Datensatz sind die Daten eines einfaches Experiments berichtet.\nIn dem Experiment wird der (kausale) Effekt verschiedener Darreichungsformen und Konzentrationen von Vitamin C auf das Zahnwachstum von Meerschweinchen untersucht.\nForschungsfrage:\nHat die Dosis (dose) einen (kausalen) Effekt auf die AV, Zahnlänge (len)?\nWir gehen mal einfach davon aus, dass der Faktor experimentell (also randomisiert und auf Störeffekte hin kontrollliert) veraeicht wurde. Sonst wäre eine Kausalinterpretation nicht (ohne Weiteres) möglich.\nBerechnen Sie die Breite eines 95%-HDI für den Effekt!\nHinweise\n         \n\n\nLösung\n\nSchritt: Modell berechnen\n\n\nlm2 &lt;- stan_glm(len ~ dose, data = d,\n                seed = 42,\n                refresh = 0)\n\nZur Erinnerung: Bei der Regressionsformel gilt immer av ~  uv.\n\nSchritt: Posteriori-Verteilung betrachten\n\nMit parameters() kriegt man einen guten Überblick über die Modellparameter:\n\nparameters(lm2)\n\nParameter   | Median |        95% CI |   pd |  Rhat |     ESS |                   Prior\n---------------------------------------------------------------------------------------\n(Intercept) |   7.40 | [4.84,  9.96] | 100% | 0.999 | 3881.00 | Normal (18.81 +- 19.12)\ndose        |   9.76 | [7.81, 11.76] | 100% | 0.999 | 4144.00 |  Normal (0.00 +- 30.41)\n\n\nDas Modell zeigt einen positiven Effekt für dose:\nPro Einheit von dose steigt die Zahnlänge (len) um ca. 8-12 mm im Schnitt (laut unserem Modell).\nNull ist nicht im Intervall enthalten; die Nullhypothese ist demnach auszuschließen (falls das jemanden interessiert). Man sagt, man verwirft die Nullhypothese (oder weist sie zurück).\nDas können wir auch plotten:\n\nplot(parameters(lm2))\n\n\n\n\nMan kann sich auch ein HDI direkt ausgeben, ohne die sonstigen Informationen, die parameters() ausgibt:\n\nhdi(lm2, ci = .95)\n\nHighest Density Interval\n\nParameter   |       95% HDI\n---------------------------\n(Intercept) | [4.96, 10.06]\ndose        | [7.77, 11.70]\n\n\nWie wir sehen, wird im Standard ein 95%-Intervall berichtet, wie in der Aufgabenstellung verlangt.\nWieder sehen wir, die Null ist nicht im Intervall enthalten. Null ist also kein plausibler Wert für den gesuchten Effekt (laut unserem Modell).\nSchauen wir uns mal zum Vergleich die Stichproben-Daten an:\n\nd %&gt;% \n  ggplot(aes(y = len, x = dose)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\nMan sieht deutlich einen positiven Effekt: Die Regressionsgerade steigt.\nDie Breite des Schätzintervalls für den Effekt beträgt also:\n\nsol &lt;- 11.70 - 7.77\nsol\n\n[1] 3.93\n\n\n\nCategories:\n\nbayes\n~\nregression\nexam-22"
  },
  {
    "objectID": "posts/iq06/iq06.html",
    "href": "posts/iq06/iq06.html",
    "title": "iq06",
    "section": "",
    "text": "Aufgabe\nIntelligenz wird häufig mittels einem IQ-Test ermittelt.\nWie wahrscheinlich ist es, zur Gruppe der “durchschnittlich intelligenten” Menschen gehören?\nDabei sei “durchschnittlich intelligent” definiert als der Intelligenzwert \\(X\\), für den gilt \\(x-\\sigma &lt; x &lt; x + \\sigma\\).\nHinweise:\n\nNutzen Sie Simulationsmethoden.\nGehen Sie von folgender IQ-Verteilung aus: \\(IQ \\sim N(100,15)\\)\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nSimulieren Sie \\(n=10^3\\) Stichproben.\nNutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten)\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\nWir simulieren die Daten:\n\nset.seed(42)\nk &lt;- 3\nd &lt;- tibble(\n  id = 1:10^3,\n  iq = rnorm(n = 10^3, mean = 100, sd = 15))\n\nWir filtern die schlauesten 0,1 Prozent:\n\nd %&gt;% \n  count(iq &gt; 85 & iq &lt; 115) \n\n# A tibble: 2 × 2\n  `iq &gt; 85 & iq &lt; 115`     n\n  &lt;lgl&gt;                &lt;int&gt;\n1 FALSE                  327\n2 TRUE                   673\n\n\nDie Antwort auf die Frage\nWie wahrscheinlich ist es, zur Gruppe der “durchschnittlich intelligenten” Menschen gehören?,\nlautet also 0.673.\n\nCategories:\n\nprobability\nsimulation\nnormal-distribution\nnum"
  },
  {
    "objectID": "posts/germeval01-textfeatures/germeval01-textfeatures.html",
    "href": "posts/germeval01-textfeatures/germeval01-textfeatures.html",
    "title": "germeval01-textfeatures",
    "section": "",
    "text": "Aufgabe\nExtrahieren Sie typisches Text-Features aus einem Text.\nNutzen Sie das Paket textfeatures.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\nlibrary(easystats)\ndata(\"germeval_train\", package = \"pradadata\")\n\nNutzen Sie diesen Text-Datensatz, bevor Sie den größeren germeval-Datensatz verwenden:\n\n\nDaten\nTeststring:\n\ntext &lt;- c(\"Abbau, Abbruch ist jetzt\", \n          \"Test   🧑‍🎓 😄 heute!!\", \n          \"Abbruch #morgen #perfekt\", \n          \"Abmachung... LORE IPSUM\", \n          \"boese ja\", \"böse nein\", \n          \"hallo ?! www.google.de\", \n          \"gut schlecht I am you are he she it is\")\n\nn_emo &lt;- c(2, 0, 2, 1, 1, 1, 0, 2)\n\ntest_text &lt;-\n  data.frame(id = 1:length(text),\n         text = text,\n         n_emo = n_emo)\n\ntest_text\n\n  id                     text n_emo\n1  1 Abbau, Abbruch ist jetzt     2\n2  2   Test   🧑‍🎓 😄 heute!!     0\n3  3 Abbruch #morgen #perfekt     2\n [ reached 'max' / getOption(\"max.print\") -- omitted 5 rows ]\n\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nDas Paket textfeatures ist aktuelle nicht auf CRAN, aber über Github zu bekommen (oder im CRAN-Archiv).\n\nlibrary(tidyverse)\nlibrary(tictoc)\nlibrary(textfeatures)\n\n\n\nTest 1\nHier ein Test vom Autor des Pakets:\n\nx &lt;- c(\n  \"this is A!\\t sEntence https://github.com about #rstats @github\",\n  \"and another sentence here\", \"THe following list:\\n- one\\n- two\\n- three\\nOkay!?!\"\n)\n\n## get text features\ntextfeatures::textfeatures(x, verbose = FALSE)\n\n# A tibble: 3 × 36\n  n_urls n_uq_urls n_hashtags n_uq_hashtags n_mentions n_uq_mentions n_chars\n   &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;   &lt;dbl&gt;\n1  1.15      1.15       1.15          1.15       1.15          1.15    0.243\n2 -0.577    -0.577     -0.577        -0.577     -0.577        -0.577  -1.10 \n3 -0.577    -0.577     -0.577        -0.577     -0.577        -0.577   0.856\n# ℹ 29 more variables: n_uq_chars &lt;dbl&gt;, n_commas &lt;dbl&gt;, n_digits &lt;dbl&gt;,\n#   n_exclaims &lt;dbl&gt;, n_extraspaces &lt;dbl&gt;, n_lowers &lt;dbl&gt;, n_lowersp &lt;dbl&gt;,\n#   n_periods &lt;dbl&gt;, n_words &lt;dbl&gt;, n_uq_words &lt;dbl&gt;, n_caps &lt;dbl&gt;,\n#   n_nonasciis &lt;dbl&gt;, n_puncts &lt;dbl&gt;, n_capsp &lt;dbl&gt;, n_charsperword &lt;dbl&gt;,\n#   sent_afinn &lt;dbl&gt;, sent_bing &lt;dbl&gt;, sent_syuzhet &lt;dbl&gt;, sent_vader &lt;dbl&gt;,\n#   n_polite &lt;dbl&gt;, n_first_person &lt;dbl&gt;, n_first_personp &lt;dbl&gt;,\n#   n_second_person &lt;dbl&gt;, n_second_personp &lt;dbl&gt;, n_third_person &lt;dbl&gt;, …\n\n\n\n\nTest 2\n\ntextfeatures::textfeatures(test_text$text,\n                           sentiment = FALSE,\n                           word_dims = FALSE)\n\n\u001b[32m↪\u001b[39m \u001b[38;5;244mCounting features in text...\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mParts of speech...\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mWord dimensions started\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mNormalizing data\u001b[39m\n\u001b[32m✔\u001b[39m Job's done!\n\n\n# A tibble: 8 × 29\n  n_urls n_uq_urls n_hashtags n_uq_hashtags n_mentions n_uq_mentions n_chars\n   &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;   &lt;dbl&gt;\n1      0         0     -0.354        -0.354          0             0  0.532 \n2      0         0     -0.354        -0.354          0             0  0.0800\n3      0         0      2.47          2.47           0             0  0.589 \n4      0         0     -0.354        -0.354          0             0  0.532 \n5      0         0     -0.354        -0.354          0             0 -1.86  \n6      0         0     -0.354        -0.354          0             0 -1.25  \n7      0         0     -0.354        -0.354          0             0  0.471 \n8      0         0     -0.354        -0.354          0             0  0.910 \n# ℹ 22 more variables: n_uq_chars &lt;dbl&gt;, n_commas &lt;dbl&gt;, n_digits &lt;dbl&gt;,\n#   n_exclaims &lt;dbl&gt;, n_extraspaces &lt;dbl&gt;, n_lowers &lt;dbl&gt;, n_lowersp &lt;dbl&gt;,\n#   n_periods &lt;dbl&gt;, n_words &lt;dbl&gt;, n_uq_words &lt;dbl&gt;, n_caps &lt;dbl&gt;,\n#   n_nonasciis &lt;dbl&gt;, n_puncts &lt;dbl&gt;, n_capsp &lt;dbl&gt;, n_charsperword &lt;dbl&gt;,\n#   n_first_person &lt;dbl&gt;, n_first_personp &lt;dbl&gt;, n_second_person &lt;dbl&gt;,\n#   n_second_personp &lt;dbl&gt;, n_third_person &lt;dbl&gt;, n_tobe &lt;dbl&gt;,\n#   n_prepositions &lt;dbl&gt;\n\n\n\nCategories:\n\n2023\ntextmining\ndatawrangling\ngermeval\nstring"
  },
  {
    "objectID": "posts/wuerfel03/wuerfel03.html",
    "href": "posts/wuerfel03/wuerfel03.html",
    "title": "wuerfel03",
    "section": "",
    "text": "Exercise\nWas ist die Wahrscheinlichkeit, mit zwei fairen Würfeln höchstens 10 Augen zu werfen?\nHinweise:\n\nNutzen Sie exakte Methoden der Wahrscheinlichkeitsrechnung, keine Simulation.\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n\n         \n\n\nSolution\nErstellen wir uns eine Tabelle, die alle Permutationen der beiden Würfelergebnisse fasst, das sind 36 Paare: (1,1), (1,2), …, (1,6), …, (6,6).\nDas kann man von Hand erstellen, halbautomatisch in Excel oder z.B. so:\n\nlibrary(tidyverse)\nd &lt;- expand_grid(wuerfel1 = 1:6,\n         wuerfel2 = 1:6)\n\nd\n\n# A tibble: 36 × 2\n   wuerfel1 wuerfel2\n      &lt;int&gt;    &lt;int&gt;\n 1        1        1\n 2        1        2\n 3        1        3\n 4        1        4\n 5        1        5\n 6        1        6\n 7        2        1\n 8        2        2\n 9        2        3\n10        2        4\n# ℹ 26 more rows\n\n\nJetzt ergänzen wir eine Spalte für die Wahrscheinlichkeit jeder Kombination, das ist einfach, denn \\(p(A \\cap B) = p(A) \\cdot p(B) = 1/36\\) gilt.\n\nd2 &lt;-\n  d %&gt;% \n  mutate(prob = 1/36)\n\nhead(d2)\n\n# A tibble: 6 × 3\n  wuerfel1 wuerfel2   prob\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;\n1        1        1 0.0278\n2        1        2 0.0278\n3        1        3 0.0278\n4        1        4 0.0278\n5        1        5 0.0278\n6        1        6 0.0278\n\n\nAußerdem ergänzen wir die Summe der Augenzahlen, weil die Frage ja nach einer bestimmten Summe an Augenzahlen abzielt.\n\nd3 &lt;-\n  d2 %&gt;% \n  mutate(augensumme = wuerfel1 + wuerfel2)\n\nhead(d3)\n\n# A tibble: 6 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        1        1 0.0278          2\n2        1        2 0.0278          3\n3        1        3 0.0278          4\n4        1        4 0.0278          5\n5        1        5 0.0278          6\n6        1        6 0.0278          7\n\n\nFür manche Augensummen gibt es mehrere Möglichkeiten:\n\nd3 %&gt;% \n  filter(augensumme == 7)\n\n# A tibble: 6 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        1        6 0.0278          7\n2        2        5 0.0278          7\n3        3        4 0.0278          7\n4        4        3 0.0278          7\n5        5        2 0.0278          7\n6        6        1 0.0278          7\n\n\n… für andere weniger:\n\nd3 %&gt;% \n  filter(augensumme == 12)\n\n# A tibble: 1 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        6        6 0.0278         12\n\n\nJetzt summieren wir (nach dem Additionssatz der Wahrscheinlichkeit) die Wahrscheinlichkeiten pro Augenzahl:\n\nd4 &lt;- \n  d3 %&gt;% \n  group_by(augensumme) %&gt;% \n  summarise(totale_w_pro_augenzahl = sum(prob))\n\nd4\n\n# A tibble: 11 × 2\n   augensumme totale_w_pro_augenzahl\n        &lt;int&gt;                  &lt;dbl&gt;\n 1          2                 0.0278\n 2          3                 0.0556\n 3          4                 0.0833\n 4          5                 0.111 \n 5          6                 0.139 \n 6          7                 0.167 \n 7          8                 0.139 \n 8          9                 0.111 \n 9         10                 0.0833\n10         11                 0.0556\n11         12                 0.0278\n\n\nTest: Die Summe der Wahrscheinlichkeit muss insgesamt 1 sein.\n\nd4 %&gt;% \n  summarise(sum(totale_w_pro_augenzahl))\n\n# A tibble: 1 × 1\n  `sum(totale_w_pro_augenzahl)`\n                          &lt;dbl&gt;\n1                             1\n\n\nUnd:\n\nd2 %&gt;% \n  summarise(sum(prob))\n\n# A tibble: 1 × 1\n  `sum(prob)`\n        &lt;dbl&gt;\n1           1\n\n\nPasst!\nDie Wahrscheinlichkeit für die Augensumme von höchstens 10 beträgt also:\n\nloesung &lt;-\n  d4 %&gt;% \n  filter(augensumme &lt;= 10) %&gt;% \n  summarise(prob_sum = sum(totale_w_pro_augenzahl)) %&gt;% \n  pull(prob_sum)\n\nloesung\n\n[1] 0.9166667\n\n\n\nCategories:\n\nprobability\ndice"
  },
  {
    "objectID": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html",
    "href": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html",
    "title": "Typ-Fehler-R-02",
    "section": "",
    "text": "R gibt folgende Fehlermeldung aus:\n(Fehler in library(XXX): es gibt kein Paket namens 'XXX'),\nwobei für XXX ein Paketname wie tidyverse angeführt wird.\nWählen Sie die plausibelste Ursache aus!\n\n\n\nDas Paket XXX ist nicht installiert auf dem aktuellen Rechner.\nDas Paket XXX ist nicht verfügbar genau für dieses Betriebssystem.\nEs existiert kein Paket mit Namen XXX.\nDas Paket XXX ist nicht geladen.\nDas Paket XXX ist defekt."
  },
  {
    "objectID": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html#answerlist",
    "href": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html#answerlist",
    "title": "Typ-Fehler-R-02",
    "section": "",
    "text": "Das Paket XXX ist nicht installiert auf dem aktuellen Rechner.\nDas Paket XXX ist nicht verfügbar genau für dieses Betriebssystem.\nEs existiert kein Paket mit Namen XXX.\nDas Paket XXX ist nicht geladen.\nDas Paket XXX ist defekt."
  },
  {
    "objectID": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html#answerlist-1",
    "href": "posts/Typ-Fehler-R-02/Typ-Fehler-R-02.html#answerlist-1",
    "title": "Typ-Fehler-R-02",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig.\nFalsch.\nFalsch.\nFalsch.\nFalsch.\n\n\nCategories:\n\nR\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/Gem-Wskt1/Gem-Wskt1.html",
    "href": "posts/Gem-Wskt1/Gem-Wskt1.html",
    "title": "Gem-Wskt1",
    "section": "",
    "text": "Exercise\nProf. Süß-Sauer untersucht eine seiner Lieblingsfragen: Wie viel bringt das Lernen auf eine Klausur? Dabei konzentriert er sich auf das Fach Statistik (es gefällt ihm gut). In einer aktuellen Untersuchung hat er \\(n=80\\) Studierende untersucht (s. Tabelle und Diagramm) und jeweils erfasst, ob die Person die Klausur bestanden (\\(B\\)) hat oder durchgefallen (\\(\\neg B\\)) ist. Im Hinblick auf das Lernen, \\(L\\) (wie viel die Person gelernt hat) hat er zwei Gruppen unterschieden: Die “Viel-Lerner” (VL) und die “Wenig-Lerner” (WL).\nBerechnen Sie die folgende: gemeinsame Wahrscheinlichkeit: p(Durchfallen UND Viellerner).\nBeispiel: Wenn Sie ausrechnen, dass die Wahrscheinlichkeit bei 42 Prozentpunkten liegt, so geben Sie ein: 0,42 bzw. 0.42 (das Dezimalzeichen ist abhängig von Ihren Spracheinstellungen).\n\nGeben Sie nur eine Zahl ein (ohne Prozentzeichen o.Ä.), z.B. 0,42.\nAndere Angaben können u.U. nicht gewertet werden.\nRunden Sie auf zwei Dezimalstellen.\nAchten Sie darauf, das korrekte Dezimaltrennzeichen einzugeben; auf Geräten mit deutscher Spracheinstellung ist dies oft ein Komma.\n\nDas folgende Diagramm zeigt die Häufigkeiten pro Gruppe:\n\n\n\n\n\nHier ist die Kontingenztabelle mit den Häufigkeiten pro Gruppe:\n\n\n\n\n\n\n\nLerntyp\nBestehen\nDurchfallen\n\n\n\n\nViellerner\n22\n10\n\n\nWeniglerner\n37\n11\n\n\n\n\n\n\n         \n\n\nSolution\nDie gemeinsame Wahrscheinlichkeit beträgt 0.12.\n\n\n\n\n\n\n\n\nLerntyp\nKlausurergebnis\nn\nn_group\nprop_conditional_group\njoint_prob\n\n\n\n\nViellerner\nDurchfallen\n10\n32\n0.3125\n0.125\n\n\n\n\n\n\n\nDie gemeinsame Wahrscheinlichkeit berechnet sich hier als der Quotient der Zellenhäufigkeit und der Gesamthäufigkeit.\nMan kann auch die Formel für gemeinsame Wahrscheinlichkeiten anwenden: \\(Pr(A) \\cdot \\Pr(B)\\).\nDazu berechnet man die Anteile für jedes der beiden Ereignisse und multipliziert diese beiden Anteile:\n`Klausurergebnis_selected * Lerntyp_selected*\n\nCategories:\n\nprobability\n‘2022’"
  },
  {
    "objectID": "posts/Wertpruefen/Wertpruefen.html",
    "href": "posts/Wertpruefen/Wertpruefen.html",
    "title": "Wertpruefen",
    "section": "",
    "text": "Aufgabe\nGeben Sie die R-Syntax ein, um zu prüfen, dass die Variable loesung den Wert 42 hat.\nHinweis: Geben Sie Ihre Lösung ohne Leerzeichen an, da sonst eine richtige Lösung nicht erkannt werden kann.\n         \n\n\nLösung\nloesung==42\n\nCategories:\n\nR\n‘2023’\nstring"
  },
  {
    "objectID": "posts/na-per-col/na-per-col.html",
    "href": "posts/na-per-col/na-per-col.html",
    "title": "na-per-col",
    "section": "",
    "text": "Zählen Sie die Anzahl der fehlenden Werte pro Spalte im Datensatz penguins.\nZeigen Sie einen prägnanten Weg.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\ndata(\"penguins\", package = \"palmerpenguins\")"
  },
  {
    "objectID": "posts/na-per-col/na-per-col.html#weg-1",
    "href": "posts/na-per-col/na-per-col.html#weg-1",
    "title": "na-per-col",
    "section": "Weg 1",
    "text": "Weg 1\n\npenguins |&gt; \n  purrr::map_int(~ sum(is.na(.)))\n\n          species            island    bill_length_mm     bill_depth_mm \n                0                 0                 2                 2 \nflipper_length_mm       body_mass_g               sex              year \n                2                 2                11                 0"
  },
  {
    "objectID": "posts/na-per-col/na-per-col.html#weg-2",
    "href": "posts/na-per-col/na-per-col.html#weg-2",
    "title": "na-per-col",
    "section": "Weg 2",
    "text": "Weg 2\n\ncolSums(is.na(penguins))\n\n          species            island    bill_length_mm     bill_depth_mm \n                0                 0                 2                 2 \nflipper_length_mm       body_mass_g               sex              year \n                2                 2                11                 0 \n\n\n\nCategories:\n\nR\nwrangling\nna\nstring"
  },
  {
    "objectID": "posts/iq07/iq07.html",
    "href": "posts/iq07/iq07.html",
    "title": "iq07",
    "section": "",
    "text": "Aufgabe\nIntelligenz wird häufig mittels einem IQ-Test ermittelt.\nIn einer Population gebe es zwei Subgruppen, für die gilt:\n\\(IQ_1 \\sim N(85, 15)\\) \\(IQ_2 \\sim N(115, 15)\\)\nWie groß ist die Wahrscheinlichkeit, dass eine zufällig gezogene Person einen IQ-Wert von mind. 115 Punkten hat?\nHinweise:\n\nNutzen Sie Simulationsmethoden.\nGehen Sie von folgender IQ-Verteilung aus: \\(IQ \\sim N(100,15)\\)\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nSimulieren Sie \\(n=10^3\\) Stichproben pro Subpopulation.\nNutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten)\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\nWir simulieren die Daten; Subpopulation 1:\n\nset.seed(42)\n\nd1 &lt;- tibble(\n  id = 1:10^3,\n  iq = rnorm(n = 10^3, mean = 85, sd = 15))\n\nSubpopulation 2:\n\nset.seed(42)\n\nd2 &lt;- tibble(\n  id = 1:10^3,\n  iq = rnorm(n = 10^3, mean = 115, sd = 15))\n\nDann kombinieren wir die Daten zu einer Tabelle:\n\nd &lt;-\n  d1 %&gt;% \n  bind_rows(d2)\n\nDann filtern wir wie in der Angabe gefragt:\n\nsolution_d &lt;-\n  d %&gt;% \n  count(iq &gt; 115) %&gt;% \n  mutate(prop = n / sum(n))\n\nsolution_d\n\n# A tibble: 2 × 3\n  `iq &gt; 115`     n  prop\n  &lt;lgl&gt;      &lt;int&gt; &lt;dbl&gt;\n1 FALSE       1494 0.747\n2 TRUE         506 0.253\n\n\nDie Lösung lautet also 0.253.\nWenn Sie die Zufallszahlen mit set.seed fixiert haben, sollten Sie den exakt gleichen Wert gefunden haben.\nInteressant ist es vielleicht, die Gesamtpopulation zu visualisieren:\n\nggplot(d) +\n  aes(x = iq) +\n  geom_density()\n\n\n\n\nIm Vergleich dazu eine Normalverteilung mit MW=100 und SD=15:\n\n\n\n\n\nWir sehen, dass unsere Population über eine (deutlich) höhere Streuung verfügt:\n\nd %&gt;% \n  summarise(sd(iq))\n\n# A tibble: 1 × 1\n  `sd(iq)`\n     &lt;dbl&gt;\n1     21.2\n\n\n\nCategories:\n\nprobability\nsimulation\nnormal-distribution\nnum"
  },
  {
    "objectID": "posts/Kaefer1/Kaefer1.html",
    "href": "posts/Kaefer1/Kaefer1.html",
    "title": "Kaefer1",
    "section": "",
    "text": "Weltsensation?! Der Insektenforscher Prof. Mügge ist der Meinung, eine bislang unbekannte Käferart entdeckt zu haben. Nach nur 18 Monaten Feldforschung im brasilianischen Regenwald gelang ihm dieser Durchbruch. Wenn es denn nun wirklich eine neue Art ist. Gerade untersucht er ein Exemplar unter dem Mikroskop. Hm, was ist das für ein Tier? 🐛 🔬\nDrei Arten kommen in Frage, \\(A_1, A_2, A_3\\).\nDabei ist die Art \\(A_1\\) sehr verbreitet und schon längst bekannt, \\(A_2\\) ist die neue Art, Exemplare dieser Art sind selten und \\(A_3\\) ist auch bekannt und eher häufig anzutreffen. Allerdings spricht das Aussehen am ehesten für \\(A_2\\), der seltenen Art.\n👉 Aufgabe: Wie groß ist die Wahrscheinlichkeit, dass Prof. Mügge wirklich einen großen Fang gemacht hat und einen unbekannten Käfer entdeckt hat?\nHier sind die genauen Vorkommenshäufigkeiten:\n\nPr_A1 &lt;- .6\nPr_A2 &lt;- .1\nPr_A3 &lt;- .4\n\nUnd hier die genauen Wahrscheinlichkeiten, wie typisch das beobachtete Objekt für einen Vertreter der jeweiligen Art ist:\n\nL_A1 &lt;- .5\nL_A2 &lt;- .9\nL_A3 &lt;- .4\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/Kaefer1/Kaefer1.html#setup",
    "href": "posts/Kaefer1/Kaefer1.html#setup",
    "title": "Kaefer1",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(prada)  # für Funktion `bayesbox`\n\n\nbb &lt;- bayesbox(hyps = c(\"A\", \"B\", \"C\"),\n               priors = c(Pr_A1, Pr_A2, Pr_A3),\n               liks = c(L_A1, L_A2, L_A3))\n\nbb\n\n  hyps priors liks post_unstand  post_std\n1    A    0.6  0.5         0.30 0.5454545\n2    B    0.1  0.9         0.09 0.1636364\n3    C    0.4  0.4         0.16 0.2909091\n\n\n\nsol &lt;- .164\n\nDie Wahrscheinlichkeit, dass der Käfer zur Art “B” gehört, ist relativ klein: 16%.\n\nCategories:\n\nR\nbayes\nbayesbox\nnum"
  },
  {
    "objectID": "posts/stan_glm_parameterzahl/stan_glm_parameterzahl.html",
    "href": "posts/stan_glm_parameterzahl/stan_glm_parameterzahl.html",
    "title": "stan_glm_parameterzahl",
    "section": "",
    "text": "Exercise\nBerechnet man eine Posteriori-Verteilung mit stan_glm(), so kann man entweder die schwach informativen Prioriwerte der Standardeinstellung verwenden, oder selber Prioriwerte definieren.\nBetrachten Sie dazu dieses Modell:\nstan_glm(price ~ cut, data = diamonds, \n                   prior = normal(location = c(100, 100, 100, 100),\n                                  scale = c(100, 100, 100, 100)),\n                   prior_intercept = normal(3000, 500))\nWie viele Parameter gibt es in diesem Modell?\nHinweise:\n\nGeben Sie nur eine (ganze) Zahl ein.\n\n         \n\n\nSolution\nBerechnet man das Modell, so kann man sich auch Infos über die Prioris ausgeben lassen:\n\nm1 &lt;- stan_glm(price ~ cut, data = diamonds, \n               prior = normal(location = c(100, 100, 100, 100),\n                              scale = c(100, 100, 100, 100)),\n               prior_intercept = normal(3000, 500),\n               refresh = 0)\n\nprior_summary(m1)\n\nPriors for model 'm1' \n------\nIntercept (after predictors centered)\n ~ normal(location = 3000, scale = 500)\n\nCoefficients\n ~ normal(location = [100,100,100,...], scale = [100,100,100,...])\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.00025)\n------\nSee help('prior_summary.stanreg') for more details\n\n\nWie man sieht, wird für die Streuung im Standard eine Exponentialverteilung verwendet von stan_glm(). Gibt man also nicht an - wie im Beispiel m1 oben, so wird stan_glm() für die Streuung, d.h. prior_aux eine Exponentialverteilung verwenden. Zu beachten ist, dass stan_glm() ein automatische Skalierung vornimmt.\nS. hier für weitere Erläuterung.\nMöchte man den Prior für die Streuung direkt ansprechen, so kann man das so formulieren:\n\nm2 &lt;- stan_glm(price ~ cut, data = diamonds, \n               prior = normal(location = c(100, 100, 100, 100),\n                              scale = c(100, 100, 100, 100)),\n               prior_intercept = normal(3000, 500),\n               prior_aux = exponential(1),\n               refresh = 0)\n\nprior_summary(m1)\n\nPriors for model 'm1' \n------\nIntercept (after predictors centered)\n ~ normal(location = 3000, scale = 500)\n\nCoefficients\n ~ normal(location = [100,100,100,...], scale = [100,100,100,...])\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.00025)\n------\nSee help('prior_summary.stanreg') for more details\n\n\nZu beachten ist beim selber definieren der Prioris, dass dann keine Auto-Skalierung von stan_glm() vorgenommen wird, es sei denn, man weist es explizit an:\n\nm3 &lt;- stan_glm(price ~ cut, data = diamonds, \n               prior = normal(location = c(100, 100, 100, 100),\n                              scale = c(100, 100, 100, 100),\n                              autoscale = TRUE),\n               prior_intercept = normal(3000, 500, autoscale = TRUE),\n               prior_aux = exponential(1, autoscale = TRUE),\n               chain = 1,  # nur 1 mal Stichproben ziehen, um Zeit zu sparen\n               refresh = 0)\n\nprior_summary(m3)\n\nPriors for model 'm3' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 3000, scale = 500)\n  Adjusted prior:\n    ~ normal(location = 3000, scale = 2e+06)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = [100,100,100,...], scale = [100,100,100,...])\n  Adjusted prior:\n    ~ normal(location = [100,100,100,...], scale = [1129833.17, 868199.02, 936606.47,...])\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.00025)\n------\nSee help('prior_summary.stanreg') for more details\n\n\nGrundsätzlich ist es nützlich für die numerische Stabilität, dass die Zahlen (hier die Parameterwerte) etwa die gleiche Größenordnung haben, am besten um die 0-1 herum. Daher bietet sich oft eine z-Standardisierung an.\nUnabhängig von der der Art der Parameter ist die Anzahl immer gleich.\nDie Anzahl der geschätzten Parameter werden im Modell-Summary unter Estimates gezeigt:\n\n\n\nModel Info:\n function:     stan_glm\n family:       gaussian [identity]\n formula:      price ~ cut\n algorithm:    sampling\n sample:       4000 (posterior sample size)\n priors:       see help('prior_summary')\n observations: 53940\n predictors:   5\n\nEstimates:\n              mean   sd     10%    50%    90% \n(Intercept) 4026.4   22.4 3997.9 4026.2 4055.6\ncut.L       -246.3   52.4 -313.1 -247.0 -177.9\ncut.Q       -282.6   46.7 -341.1 -283.6 -223.1\ncut.C       -576.0   44.3 -632.8 -576.1 -518.8\ncut^4       -264.5   38.2 -313.7 -264.9 -215.4\nsigma       3964.1   12.0 3949.1 3963.7 3979.6\n\nFit Diagnostics:\n           mean   sd     10%    50%    90% \nmean_PPD 3931.7   24.3 3900.5 3931.9 3962.3\n\nThe mean_ppd is the sample average posterior predictive distribution of the outcome variable (for details see help('summary.stanreg')).\n\nMCMC diagnostics\n              mcse Rhat n_eff\n(Intercept)   0.4  1.0  2895 \ncut.L         1.0  1.0  2615 \ncut.Q         1.0  1.0  2277 \ncut.C         0.9  1.0  2634 \ncut^4         0.7  1.0  3288 \nsigma         0.1  1.0  7832 \nmean_PPD      0.4  1.0  3851 \nlog-posterior 0.0  1.0  1816 \n\nFor each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).\n\n\nDas sind:\n\n1 Intercept (Achsenabschnitt) - prior_intercept\n4 Gruppen (zusätzlich zur Referenzgruppe, die mit dem Achsenabschnitt dargestellt ist) - prior_normal\n1 Sigma (Ungewissheit “innerhalb des Modells”) - prior_aux\n\nDie Anzahl der Parameter in diesem Modell ist also: 6\n\nCategories:\n~"
  },
  {
    "objectID": "posts/anim02/anim02.html",
    "href": "posts/anim02/anim02.html",
    "title": "anim02",
    "section": "",
    "text": "Visualisieren Sie in animierter Form den Zusammenhang von Lebenserwartung und Bruttosozialprodukt im Verlauf der Jahre (Datensatz gapminder); der Kontinent soll in der Visualisierung berücksichtigt sein.\nHinweise:\n\nNutzen Sie plotly zur Visualisierung."
  },
  {
    "objectID": "posts/anim02/anim02.html#setup",
    "href": "posts/anim02/anim02.html#setup",
    "title": "anim02",
    "section": "Setup",
    "text": "Setup\n\nlibrary(gapminder)\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata(gapminder)"
  },
  {
    "objectID": "posts/anim02/anim02.html#statisches-diagramm",
    "href": "posts/anim02/anim02.html#statisches-diagramm",
    "title": "anim02",
    "section": "Statisches Diagramm",
    "text": "Statisches Diagramm\n\np &lt;- gapminder %&gt;% \n  ggplot(aes(x = gdpPercap, y = lifeExp, color = continent, frame = year)) +\n  geom_point()+\n  scale_x_log10()\np"
  },
  {
    "objectID": "posts/anim02/anim02.html#animiertes-und-interaktives-diagramm",
    "href": "posts/anim02/anim02.html#animiertes-und-interaktives-diagramm",
    "title": "anim02",
    "section": "Animiertes (und interaktives) Diagramm",
    "text": "Animiertes (und interaktives) Diagramm\n\nggplotly(p)\n\n\n\n\n\nDieser Post orientiert sich an dieser Quelle; dort finden sich auch mehr Beispiele.\n\nCategories:\n\n2023\nvis\nanimation\nstring"
  },
  {
    "objectID": "posts/MWberechnen/MWberechnen.html",
    "href": "posts/MWberechnen/MWberechnen.html",
    "title": "MWberechnen",
    "section": "",
    "text": "Question\n\nAufgabe\nBerechnen Sie den Mittelwert folgender Zahlenreihe; ignorieren sie etwaige fehlende Werte. Runden Sie auf zwei Dezimalstellen.\n\n\n[1]  0.38  0.49 -0.84 -1.64  0.04\n\n\n         \n\n\nLösung\nDer Mittelwert liegt bei -0.31.\nDie Antwort lautet -0.31.\nIn R kann man den Mittelwert z.B. so berechnen:\n\nmean(zahlenreihe, na.rm = TRUE)\n\n[1] -0.314\n\n\nDas Argument na.rm = TRUE sorgt dafür, dass R auch bei Vorhandensein fehlender Werte ein Ergebnis ausgibt. Ohne dieses Argument würde R ein sprödes NA zurückgeben, falls fehlende Werte vorliegen. Dieses Verhalten von R ist recht defensiv, getreu dem Motto: Wenn es ein Problem gibt, sollte man so früh wie möglich darüber deutlich informiert werden (und nicht erst, wenn die Marsrakete gestartet ist…).\n\nCategories:\n\neda\ndatawrangling\nnum\ndyn"
  },
  {
    "objectID": "posts/tidymodels3/tidymodels3.html",
    "href": "posts/tidymodels3/tidymodels3.html",
    "title": "tidymodels3",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein lineares Modell mit tidymodels und zwar anhand des ames Datensatzes.\nModellgleichung: Sale_Price ~ Gr_Liv_Area, data = ames.\nBerechnen Sie ein multiplikatives (exponenzielles) Modell.\nRücktransformieren Sie die Log-Werte in “Roh-Dollar”.\n         \n\n\nLösung\nMultiplikatives Modell:\nNicht vergessen: AV-Transformation in beiden Samples!\nDatensatz aufteilen:\nModell definieren:\nModell fitten:\n\n\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nCoefficients:\n(Intercept)  Gr_Liv_Area  \n  4.8552133    0.0002437  \n\n\nModellgüte im Train-Sample:\nModellgüte im Train-Sample:\n\n\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.02587 -0.06577  0.01342  0.07202  0.39231 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.855e+00  7.355e-03  660.12   &lt;2e-16 ***\nGr_Liv_Area 2.437e-04  4.648e-06   52.43   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1271 on 2928 degrees of freedom\nMultiple R-squared:  0.4842,    Adjusted R-squared:  0.484 \nF-statistic:  2749 on 1 and 2928 DF,  p-value: &lt; 2.2e-16\n\n\nR-Quadrat via easystats:\n\n\n# R2 for Linear Regression\n       R2: 0.484\n  adj. R2: 0.484\n\n\n\n\n# A tibble: 2 × 5\n  term        estimate  std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept) 4.86     0.00736        660.        0\n2 Gr_Liv_Area 0.000244 0.00000465      52.4       0\n\n\nVorhersagen im Test-Sample:\n\n\n# A tibble: 6 × 1\n  .pred\n  &lt;dbl&gt;\n1  5.07\n2  5.18\n3  5.31\n4  5.11\n5  5.18\n6  5.10\n\n\npreds ist ein Tibble, also müssen wir noch die Spalte .pred. herausziehen, z.B. mit pluck(preds, \".pred\"):\n\n\n# A tibble: 6 × 4\n  Sale_Price Gr_Liv_Area preds .pred\n       &lt;dbl&gt;       &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n1       5.02         896  5.07  5.07\n2       5.24        1329  5.18  5.18\n3       5.60        1856  5.31  5.31\n4       5.15        1056  5.11  5.11\n5       5.26        1337  5.18  5.18\n6       4.98         987  5.10  5.10\n\n\nOder mit unnest:\n\n\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       &lt;dbl&gt;       &lt;int&gt; &lt;dbl&gt;\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n\n\nOder wir binden einfach die Spalte an den Tibble:\n\n\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       &lt;dbl&gt;       &lt;int&gt; &lt;dbl&gt;\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n\n\nModellgüte im Test-Sample:\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rsq     standard       0.517\n\n\nZur Interpretation von Log10-Werten\n\n\n[1] 5e+05\n\n\n[1] 0\n\n\nRücktransformation (ohne Bias-Korrektur):\n\nCategories:\n\nds1\ntidymodels\nprediction\nyacsda\nstatlearning\nlm\nnum"
  },
  {
    "objectID": "posts/vorhersageintervall1/vorhersageintervall1.html",
    "href": "posts/vorhersageintervall1/vorhersageintervall1.html",
    "title": "vorhersageintervall1",
    "section": "",
    "text": "Vorhersagen, etwa in einem Regressionsmodell, sind mit mehreren Arten von Unsicherheit konfrontiert.\nBerechnen Sie dazu ein Regressionsmodell, Datensatz mtcars, mit hp als Prädiktor (UV) und mpg als AV (Kriterium)!\nDann sagen Sie bitte den Wert der AV für eine Beobachtungseinheit mit mittlerer Ausprägung im Präktor vorher:\nEinmal nur unter Berücksichtigung der Unsicherheit innerhalb des Modells (“Konfidenzintervall”); einmal unter Berücksichtigung der Unsicherheit innerhalb des Modells sowie die Unsicherheit durch die Koffizienten (“Vohersageintervall”).\nHinweise:\n\npredict() ist eine Funktion, die Sie zur Vorhersage von Regressionsmodellen verwenden können.\nVerwenden Sie lm() zur Berechnung eines Regressionsmodells.\nDas Argument type von predict() erlaubt Ihnen die Wahl der Art der Vorhersage, betrachten Sie Hilfe der Funktion z.B. hier.\n\nBei welchem Intervall ist die Ungewissheit in der Vorhersage größer?\n\n\n\nKonfidenzintervall\nVohersageintervall\nGleich groß\nKommt auf weitere Faktoren an, keine pauschale Antwort möglich"
  },
  {
    "objectID": "posts/vorhersageintervall1/vorhersageintervall1.html#answerlist",
    "href": "posts/vorhersageintervall1/vorhersageintervall1.html#answerlist",
    "title": "vorhersageintervall1",
    "section": "",
    "text": "Konfidenzintervall\nVohersageintervall\nGleich groß\nKommt auf weitere Faktoren an, keine pauschale Antwort möglich"
  },
  {
    "objectID": "posts/vorhersageintervall1/vorhersageintervall1.html#answerlist-1",
    "href": "posts/vorhersageintervall1/vorhersageintervall1.html#answerlist-1",
    "title": "vorhersageintervall1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\nlm\ninference\nqm2"
  },
  {
    "objectID": "posts/Rethink2m7/Rethink2m7.html",
    "href": "posts/Rethink2m7/Rethink2m7.html",
    "title": "Rethink2m7",
    "section": "",
    "text": "Aufgabe\nThis question is taken from McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Ed.). Taylor and Francis, CRC Press.\n2M7. Assume again the original card problem, with a single card showing a black side face up. Before looking at the other side, we draw another card from the bag and lay it face up on the table. The face that is shown on the new card is white. Show that the probability that the first card, the one showing a black side, has black on its other side is now 0.75. Use the counting method, if you can. Hint: Treat this like the sequence of globe tosses, counting all the ways to see each observation, for each possiible first card.\n         \n\n\nLösung\nLet’s label the cards bb (black on both sides), bw (black on one, white on the other), and ww (both sides are white), respectively.\nTo keep things straight, here’s a visualization of our data.\n\n\n\n\n\nWanted is the probability \\(Pr(c1=bb|1b,2w)\\), the probability of drawing (as card 1) a bb card, given that we observerd b in the first draw, denoted as 1b, and a white card in the second draw, denoted as 2w.\nLet’s draw a tree diagram for easier comprehension.\n\n\n\n\n\n\nIn the diagram, the symbol “_b_w” means that black face of a the bw-card (one black, one white face) was drawn. Similarly, “_b_b” means that one (of the two) black faces of the bb-card (two black faces) was drawn.\nHere, we have to consider two cards. Let’s use this notation ww-bb for the sequence “first card is white on both sides, second card is black on both sides”.\nThe data observed is: first card has one black side, the second card has one white side, i.,e b-w.\nLooking at the tree, we realize that out of all 8 paths, 6 feature the bb card as first card:\n\\(Pr(1bb|b,w) = 6/8 = 3/4 = 0.75\\)\nwhere 1bb means “card 1 is black on both sides”, and b,w means “first draw showed a black face, and second card showed a white face”.\nIn other words, there are 8 valid paths in the tree diagram, out of which 6 belong the the hypothesis that the first card is all black.\nUsing a Bayes-Grid (or “Bayes-Box”), we can depict the situation like this:\n\n\n\n\n\nHyp\nPrior\nL\nunstand_Post\nPost\n\n\n\n\nbb\n1\n6\n6\n6/8 = 3/4\n\n\nbw\n1\n2\n2\n2/8 = 1/4\n\n\nww\n1\n0\n0\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOr, using probability, and not counts:\n\n\n\n\n\nHyp\nPrior\nL\nunstand_Post\nPost\n\n\n\n\nbb\n2\n3/4\n6/4\n3/4\n\n\nbw\n1\n2/4\n2/4\n1/4\n\n\n\n\n\nWhenever the probability of all paths (in a tree diagram) is the same, as it is the case in the present example, we do not need to write down the probability of the path for the likelihood. It is enough to write the number of paths (of course we can if we want).\n\nCategories:\n\nprobability\nbayes\nbayes-grid\nrethink-chap2\nstring"
  },
  {
    "objectID": "posts/count-emoji/count-emoji.html",
    "href": "posts/count-emoji/count-emoji.html",
    "title": "count-emoji",
    "section": "",
    "text": "Aufgabe\nGegeben eines (mehrelementigen) Strings, my_string, und eines Lexicons, my_lexicon, zählen Sie, wie häufig sich ein Emoji in einem Element des Strings wiederfindet.\n\nmy_string &lt;-\n  c(\"Heute ist ein schöner Tag 😄😄\", \"Was geht in dieser Woche?\", \"Super 🙂\")\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie die Funktion emo::ji.\n\n         \n\n\nLösung\n\nlibrary(emo)\nlibrary(purrr)\n\n\nmap_int(my_string, ji_count)\n\n[1] 2 0 1\n\n\n\nCategories:\n\ntextmining\nnlp\nstring"
  },
  {
    "objectID": "posts/kausal08/kausal08.html",
    "href": "posts/kausal08/kausal08.html",
    "title": "kausal08",
    "section": "",
    "text": "Gegeben sei die Theorie (oder schlichter: das Modell), demzufolge eine Anlage zu Suchtverhalten die Ursache von sowohl Rauchen als auch Kaffeegewohnheit darstellt. Lungenkrebs wiederum hat als (alleinige) Ursache Rauchen (laut diesem Modell).\nDaten zeigen, dass Kaffeegenuss und Lungenkrebs assoziiert sind: Bei Kaffeetrinkern ist die Lungenkrebsrate höher als bei Nichttrinkern (von Kaffee). Ob Kaffeegebrauch Lungenkrebs erzeugt?\nEine alternative Erklärung bietet folgender DAG.\n\n\n\n\n\nWelche Variablenmenge muss mindestens kontrolliert werden, um Konfundierung auszuschließen und damit den kausalen Effekt von Kaffee auf Lungenkrebs zu identifizieren?\n\n\n\n{Addictive Behavior oder aber Rauchen}\n{Rauchen}\n{Addictive Behavior}\n{Addictive Behavior und Rauchen}\n{Addictive Behavior und Lungenkrebs}"
  },
  {
    "objectID": "posts/kausal08/kausal08.html#answerlist",
    "href": "posts/kausal08/kausal08.html#answerlist",
    "title": "kausal08",
    "section": "",
    "text": "{Addictive Behavior oder aber Rauchen}\n{Rauchen}\n{Addictive Behavior}\n{Addictive Behavior und Rauchen}\n{Addictive Behavior und Lungenkrebs}"
  },
  {
    "objectID": "posts/kausal08/kausal08.html#answerlist-1",
    "href": "posts/kausal08/kausal08.html#answerlist-1",
    "title": "kausal08",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/ds-quiz2/ds-quiz2.html",
    "href": "posts/ds-quiz2/ds-quiz2.html",
    "title": "ds-quiz2",
    "section": "",
    "text": "Im Folgenden sind mehrere Aussagen zum Thema maschinelles Lernen dargestellt. Wählen Sie alle korrekten Aussagen aus!\nHinweise:\n\nAlle Aussagen sind entweder richtig oder falsch, aber nicht beides.\nBeziehen Sie sich im Zweifel auf den Stoff wie im Unterricht dargestellt.\n\n\n\n\nJe größer der Wert von mtry in einem Random-Forest-Modell, desto besser die Modellgüte in der Regel.\nRandom-Forest-Modelle und Baginng-Modelle basieren auf einem Bootstrapping-Verfahren.\nBeim kNN-Modell ist ein Distanzmaß \\(d\\) die euklidische Distanz, die sich im 2D-Fall wie folgt berechnet: \\(d = \\sqrt{a^2 + b^2}\\). Dabei sind \\(a\\) und \\(b\\) die Distanz zwischen zwei Punkten \\(x\\) und \\(y\\) in den Dimensionen \\(A\\) und \\(B\\).\nBeim Random-Forest-Modell nennt man den Teil der Train-Stichprobe, der nicht in die Berechnung des jeweiligen Baumes einfließt, die “OOB-Stichprobe”.\nOverfitting tritt bei linearen Modellen nicht auf.\nBerechnet man die Vorhersagegüte eines Modells in mehreren Stichproben, so kann man die Vorhersagegüte für ein Test-Sample präziser bestimmen.\nBei baumbasierten Klassifikationsmodellen ist es dazu Ziel, die Homogenität (hinsichtlich der AV) in jedem Endknoten (“Blatt”) zu maximieren."
  },
  {
    "objectID": "posts/ds-quiz2/ds-quiz2.html#answerlist",
    "href": "posts/ds-quiz2/ds-quiz2.html#answerlist",
    "title": "ds-quiz2",
    "section": "",
    "text": "Je größer der Wert von mtry in einem Random-Forest-Modell, desto besser die Modellgüte in der Regel.\nRandom-Forest-Modelle und Baginng-Modelle basieren auf einem Bootstrapping-Verfahren.\nBeim kNN-Modell ist ein Distanzmaß \\(d\\) die euklidische Distanz, die sich im 2D-Fall wie folgt berechnet: \\(d = \\sqrt{a^2 + b^2}\\). Dabei sind \\(a\\) und \\(b\\) die Distanz zwischen zwei Punkten \\(x\\) und \\(y\\) in den Dimensionen \\(A\\) und \\(B\\).\nBeim Random-Forest-Modell nennt man den Teil der Train-Stichprobe, der nicht in die Berechnung des jeweiligen Baumes einfließt, die “OOB-Stichprobe”.\nOverfitting tritt bei linearen Modellen nicht auf.\nBerechnet man die Vorhersagegüte eines Modells in mehreren Stichproben, so kann man die Vorhersagegüte für ein Test-Sample präziser bestimmen.\nBei baumbasierten Klassifikationsmodellen ist es dazu Ziel, die Homogenität (hinsichtlich der AV) in jedem Endknoten (“Blatt”) zu maximieren."
  },
  {
    "objectID": "posts/ds-quiz2/ds-quiz2.html#answerlist-1",
    "href": "posts/ds-quiz2/ds-quiz2.html#answerlist-1",
    "title": "ds-quiz2",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Die obige Behauptung stimmt oft nicht.\nRichtig.\nRichtig.\nRichtig.\nFalsch. Zwar tritt Overfitting bei (einfachen) linearen Modellen oft weniger auf, aber gerade bei Verwendung von Polynomen ist die Gefahr des Overfitting hoch.\nRichtig.\nRichtig\n\n\nCategories:\n\nds1\ntidymodels\nstatlearning\nmchoice"
  },
  {
    "objectID": "posts/kausal01/kausal01.html",
    "href": "posts/kausal01/kausal01.html",
    "title": "kausal01",
    "section": "",
    "text": "Gegeben sei der DAG g (s.u.). Welche Variable/n sind zu kontrollieren, um den kausalen Effekt von x auf y zu identifizieren?\n\n\n\n\n\nGegeben sei der DAG g (s.o.). Dabei ist zu beachten, dass die gebogene Kurve (keine Gerade) mit zwei Pfeilspitzen keinen Kausaleffekt beschreibt, sondern eine Assoziation. Die dahinterstehende kausale Struktur ist eine Konfundierung. Daher ist der “Doppelpfeil” als Abkürzung für eine Konfundierung zu verstehen.\nWelche Variable/n sind zu kontrollieren, um den kausalen Effekt von x auf y zu identifizieren?\n\n\n\nkeine, bereits identifiziert\nx\ny\nm\nkeine, nicht identifizierbar"
  },
  {
    "objectID": "posts/kausal01/kausal01.html#answerlist",
    "href": "posts/kausal01/kausal01.html#answerlist",
    "title": "kausal01",
    "section": "",
    "text": "keine, bereits identifiziert\nx\ny\nm\nkeine, nicht identifizierbar"
  },
  {
    "objectID": "posts/kausal01/kausal01.html#answerlist-1",
    "href": "posts/kausal01/kausal01.html#answerlist-1",
    "title": "kausal01",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal\nexam-22"
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html",
    "title": "germeval09-tfidf",
    "section": "",
    "text": "Erstellen Sie ein prädiktives Modell für Textdaten, nutzen Sie einen Entscheidungsbaum als Modell. Erstellen Sie pro Wort tfIDF-Kennwerte im Rahmen von Feature-Engineering.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\ndata(\"germeval_test\", package = \"pradadata\")\n\nDie AV lautet c1. Die (einzige) UV lautet: text.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie Tidymodels.\nNutzen Sie das sentiws Lexikon."
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html#workflow",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html#workflow",
    "title": "germeval09-tfidf",
    "section": "Workflow",
    "text": "Workflow\n\n# model:\nmod1 &lt;-\n  decision_tree(mode = \"classification\")\n\n# recipe:\nrec1 &lt;-\n  recipe(c1 ~ ., data = d_train) |&gt; \n  update_role(id, new_role = \"id\")  |&gt; \n  step_tokenize(text) %&gt;%\n  step_tokenfilter(text, max_tokens = 1e3) %&gt;%\n  step_tfidf(text) %&gt;%\n  step_zv(all_predictors()) %&gt;%\n  step_normalize(all_numeric_predictors())\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)"
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html#fit",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html#fit",
    "title": "germeval09-tfidf",
    "section": "Fit",
    "text": "Fit\nOhne Tuning:\n\ntic()\nfit1 &lt;-\n  fit(wf1,\n      data = d_train)\ntoc()\n\n28.45 sec elapsed\n\n#beep()\n\n\nfit1\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_tokenize()\n• step_tokenfilter()\n• step_tfidf()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 5009 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 5009 1688 OTHER (0.3369934 0.6630066)  \n  2) tfidf_text_merkel&gt;=1.084677 279  117 OFFENSE (0.5806452 0.4193548) *\n  3) tfidf_text_merkel&lt; 1.084677 4730 1526 OTHER (0.3226216 0.6773784) *"
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html#test-set-güte",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html#test-set-güte",
    "title": "germeval09-tfidf",
    "section": "Test-Set-Güte",
    "text": "Test-Set-Güte\nVorhersagen im Test-Set:\n\ntic()\npreds &lt;-\n  predict(fit1, new_data = germeval_test)\ntoc()\n\n0.453 sec elapsed\n\n\nUnd die Vorhersagen zum Test-Set hinzufügen, damit man TRUTH und ESTIMATE vergleichen kann:\n\nd_test &lt;-\n  germeval_test |&gt; \n  bind_cols(preds) |&gt; \n  mutate(c1 = as.factor(c1))\n\n\nmy_metrics &lt;- metric_set(accuracy, f_meas)\nmy_metrics(d_test,\n           truth = c1,\n           estimate = .pred_class)\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary        0.657 \n2 f_meas   binary        0.0706"
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html#prepbake",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html#prepbake",
    "title": "germeval09-tfidf",
    "section": "Prep/Bake",
    "text": "Prep/Bake\nAls Check: Das gepreppte/bebackene Rezept:\n\ntic()\nrec1_prepped &lt;- prep(rec1)\ntoc()\n\n3.376 sec elapsed\n\n\n\ntic()\nd_train_baked &lt;- bake(rec1_prepped, new_data = NULL)\ntoc()\n\n0.026 sec elapsed"
  },
  {
    "objectID": "posts/germeval09-tfidf/germeval09-tfidf.html#sehr-viele-spalten",
    "href": "posts/germeval09-tfidf/germeval09-tfidf.html#sehr-viele-spalten",
    "title": "germeval09-tfidf",
    "section": "Sehr viele Spalten",
    "text": "Sehr viele Spalten\nDas Problem ist, dass dieses Rezept sehr viele Spalten erzeugt. Das ist (sehr) rechen- und speicherintensiv.\n\ndim(d_train_baked)\n\n[1] 5009 1002\n\n\n\nd_train_baked |&gt; \n  head()\n\n# A tibble: 6 × 1,002\n     id c1      tfidf_text__macmike tfidf_text_1 tfidf_text_10 tfidf_text_100\n  &lt;int&gt; &lt;fct&gt;                 &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1     1 OTHER                -0.137      -0.0692       -0.0531        -0.0475\n2     2 OTHER                -0.137      -0.0692       -0.0531        -0.0475\n3     3 OTHER                -0.137      -0.0692       -0.0531        -0.0475\n4     4 OTHER                -0.137      -0.0692       -0.0531        -0.0475\n5     5 OFFENSE              -0.137      -0.0692       -0.0531        -0.0475\n6     6 OTHER                -0.137      -0.0692       -0.0531        -0.0475\n# ℹ 996 more variables: tfidf_text_12 &lt;dbl&gt;, tfidf_text_14 &lt;dbl&gt;,\n#   tfidf_text_15 &lt;dbl&gt;, tfidf_text_19 &lt;dbl&gt;, tfidf_text_2 &lt;dbl&gt;,\n#   tfidf_text_20 &lt;dbl&gt;, tfidf_text_2017 &lt;dbl&gt;, tfidf_text_2018 &lt;dbl&gt;,\n#   tfidf_text_3 &lt;dbl&gt;, tfidf_text_30 &lt;dbl&gt;, tfidf_text_4 &lt;dbl&gt;,\n#   tfidf_text_5 &lt;dbl&gt;, tfidf_text_6 &lt;dbl&gt;, tfidf_text_66freedom66 &lt;dbl&gt;,\n#   tfidf_text_8 &lt;dbl&gt;, tfidf_text_90 &lt;dbl&gt;, tfidf_text_a &lt;dbl&gt;,\n#   tfidf_text_ab &lt;dbl&gt;, tfidf_text_abend &lt;dbl&gt;, tfidf_text_aber &lt;dbl&gt;, …\n\n\n\nCategories:\n\ntextmining\ndatawrangling\ngermeval\nprediction\ntidymodels\nstring"
  },
  {
    "objectID": "posts/Rethink2m6/Rethink2m6.html",
    "href": "posts/Rethink2m6/Rethink2m6.html",
    "title": "Rethink2m6",
    "section": "",
    "text": "Aufgabe\nThis question is taken from McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Ed.). Taylor and Francis, CRC Press.\n2M6. Imagine that black ink is heavy, and so cards with black sides are heavier than cards with white sides. As a result, it’s less likely that a card with black sides is pulled from the bag. So again assume there are three cards: B/B, B/W, and W/W. After experimenting a number of times, you conclude that for every way to pull the B/B card from the bag, there are 2 ways to pull the B/W card and 3 ways to pull the W/W card. Again suppose that a card is pulled and a black side appears face up. Show that the probability the other side is black is now 0.5. Use the counting method, as before.\n         \n\n\nLösung\nLet’s label the cards bb (black on both sides), bw (black on one, white on the other), and ww (both sides are white), respectively.\nWanted is the probability that the second side of the card is black (2b), given one side is already identified as black (1b): \\(Pr(2b|1b)\\).\nBayes-Box to the rescue:\nWhenever the probability of all paths (in a tree diagram) is the same, we do not need to write down the probability of the path for the likelihood. It is enough to write the number of paths.\n\n\n\n\n\n\n\n\nHyp\nPrior\nLikelihood\nunstand_post\nstd_post\n\n\n\n\nbb\n1\n2\n2\n0.5\n\n\nbw\n2\n1\n2\n0.5\n\n\nww\n3\n0\n0\n0.0\n\n\n\n\n\n\n\n\nCategories:\n\nprobability\nbayes\nbayes-grid\nrethink-chap2\nstring"
  },
  {
    "objectID": "posts/rf-usemodels/rf-usemodels.html",
    "href": "posts/rf-usemodels/rf-usemodels.html",
    "title": "rf-usemodels",
    "section": "",
    "text": "Berechnen Sie ein prädiktives Modell mit dieser Modellgleichung:\nbody_mass_g ~ . (Datensatz: palmerpenguins::penguins).\nNutzen Sie usemodels!\nHinweise: - Tunen Sie mtry - Verwenden Sie Kreuzvalidierung - Verwenden Sie Standardwerte, wo nicht anders angegeben. - Fixieren Sie Zufallszahlen auf den Startwert 42."
  },
  {
    "objectID": "posts/rf-usemodels/rf-usemodels.html#vorbereitung",
    "href": "posts/rf-usemodels/rf-usemodels.html#vorbereitung",
    "title": "rf-usemodels",
    "section": "Vorbereitung:",
    "text": "Vorbereitung:\n\n# Setup:\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tictoc)  # Zeitmessung\n\n\n# Data:\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# rm NA in the dependent variable:\nd &lt;- d %&gt;% \n  drop_na(body_mass_g)\n\n\nset.seed(42)\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\n\nlibrary(usemodels)\nuse_ranger(body_mass_g ~ ., data = d_train)\n\nranger_recipe &lt;- \n  recipe(formula = body_mass_g ~ ., data = d_train) \n\nranger_spec &lt;- \n  rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %&gt;% \n  set_mode(\"classification\") %&gt;% \n  set_engine(\"ranger\") \n\nranger_workflow &lt;- \n  workflow() %&gt;% \n  add_recipe(ranger_recipe) %&gt;% \n  add_model(ranger_spec) \n\nset.seed(32162)\nranger_tune &lt;-\n  tune_grid(ranger_workflow, resamples = stop(\"add your rsample object\"), grid = stop(\"add number of candidate points\"))\n\n\nOder die resultierende Syntax in die Zwischenablage kopieren lassen:\n\nuse_ranger(body_mass_g ~ ., data = d_train,\n           clipboard = TRUE)  # kopiert Syntax in die Zwischenablage\n\n\nCategories:\n\ntidymodels\nstatlearning\ntemplate\nstring"
  },
  {
    "objectID": "posts/count-words01/count-words01.html",
    "href": "posts/count-words01/count-words01.html",
    "title": "count-words01",
    "section": "",
    "text": "Zählen sie die Wörter eines Textes. Verwenden Sie verschiedene Verfahren. Untersuchen Sie die Rechenzeit, die die jeweiligen Verfahren benötigen.\nNutzen Sie die GermEval-2018-Daten. Die Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)), Die Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\nd_train &lt;- read_csv(\"https://raw.githubusercontent.com/sebastiansauer/pradadata/master/data-raw/germeval_train.csv\")\nd_test &lt;- read_csv(\"https://raw.githubusercontent.com/sebastiansauer/pradadata/master/data-raw/germeval_test.csv\")\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/count-words01/count-words01.html#stringrstr_count",
    "href": "posts/count-words01/count-words01.html#stringrstr_count",
    "title": "count-words01",
    "section": "stringr::str_count",
    "text": "stringr::str_count\n\ntest_text$text |&gt; \n  map_int(str_count, \"\\\\w+\")\n\n[1] 3 2 2 3\n\n\nOder so:\n\ntest_text$text |&gt; \n  map_int(str_count, boundary(\"word\"))\n\n[1] 3 2 2 3\n\n\nDie Funktion map ist nicht nötig:\n\nstr_count(test_text$text, boundary(\"word\"))\n\n[1] 3 2 2 3\n\n\nAls neue Spalte in der Tabelle:\n\ntest_text |&gt; \n  mutate(n_words = str_count(text, boundary(\"word\")))\n\n# A tibble: 4 × 4\n     id text                 valence n_words\n  &lt;int&gt; &lt;chr&gt;                  &lt;dbl&gt;   &lt;int&gt;\n1     1 Abbau ist jetzt           -1       3\n2     2 Test heute                 0       2\n3     3 Abbruch morgen            -1       2\n4     4 Abmachung lore ipsum       1       3"
  },
  {
    "objectID": "posts/count-words01/count-words01.html#tokenizerscount_words",
    "href": "posts/count-words01/count-words01.html#tokenizerscount_words",
    "title": "count-words01",
    "section": "tokenizers::count_words",
    "text": "tokenizers::count_words\n\ntokenizers::count_words(test_text$text)\n\n[1] 3 2 2 3\n\n\n\ntest_text |&gt; \n  mutate(n_words = tokenizers::count_words(text))\n\n# A tibble: 4 × 4\n     id text                 valence n_words\n  &lt;int&gt; &lt;chr&gt;                  &lt;dbl&gt;   &lt;int&gt;\n1     1 Abbau ist jetzt           -1       3\n2     2 Test heute                 0       2\n3     3 Abbruch morgen            -1       2\n4     4 Abmachung lore ipsum       1       3"
  },
  {
    "objectID": "posts/count-words01/count-words01.html#qdapwc",
    "href": "posts/count-words01/count-words01.html#qdapwc",
    "title": "count-words01",
    "section": "qdap:wc",
    "text": "qdap:wc\n\nqdap::wc(test_text$text)\n\n[1] 3 2 2 3"
  },
  {
    "objectID": "posts/count-words01/count-words01.html#stringrstr_count-1",
    "href": "posts/count-words01/count-words01.html#stringrstr_count-1",
    "title": "count-words01",
    "section": "stringr::str_count",
    "text": "stringr::str_count\n\ntic()\nmethod1 &lt;- germeval_train$text |&gt; \n  map_int(str_count, \"\\\\w+\")\ntoc()\n\n0.206 sec elapsed\n\nmethod1 |&gt; str()\n\n int [1:5009] 15 19 11 21 15 44 34 8 13 14 ...\n\n\n\nprint(method1, max = 20)\n\n [1] 15 19 11 21 15 44 34  8 13 14 14 28 39 22 43 28 19 23 25 13\n [ reached getOption(\"max.print\") -- omitted 4989 entries ]\n\n\nOder so:\n\ntic()\nmethod2 &lt;- germeval_train$text |&gt; \n  map_int(str_count, boundary(\"word\"))\ntoc()\n\n0.172 sec elapsed\n\n\n\nhead(method2)\n\n[1] 15 19 10 21 15 44\n\n\nDie Funktion map ist nicht nötig:\n\ntic()\nmethod3 &lt;- str_count(germeval_train$text, boundary(\"word\"))\ntoc()\n\n0.028 sec elapsed\n\n\n\nmethod3 |&gt; head()\n\n[1] 15 19 10 21 15 44\n\n\nDann geht es auch viel schneller.\nAls neue Spalte in der Tabelle:\n\ntic()\nmethod4 &lt;- \ngermeval_train |&gt; \n  mutate(n_words = str_count(text, boundary(\"word\")))\ntoc()\n\n0.028 sec elapsed\n\n\n\nstr(method4)\n\n'data.frame':   5009 obs. of  5 variables:\n $ id     : int  1 2 3 4 5 6 7 8 9 10 ...\n $ text   : chr  \"@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\" \"@Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nich\"| __truncated__ \"@ahrens_theo fröhlicher gruß aus der schönsten stadt der welt theo ⚓️\" \"@dushanwegner Amis hätten alles und jeden gewählt...nur Hillary wollten sie nicht und eine Fortsetzung von Obam\"| __truncated__ ...\n $ c1     : chr  \"OTHER\" \"OTHER\" \"OTHER\" \"OTHER\" ...\n $ c2     : chr  \"OTHER\" \"OTHER\" \"OTHER\" \"OTHER\" ...\n $ n_words: int  15 19 10 21 15 44 34 8 13 14 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\nmethod4 |&gt; head()\n\n  id\n1  1\n2  2\n3  3\n4  4\n5  5\n6  6\n                                                                                                                                                                                                                                                                                          text\n1                                                                                                                                                                                @corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\n2                                                                                                                                               @Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nicht ausschließt, kritisieren wir.\n3                                                                                                                                                                                                                        @ahrens_theo fröhlicher gruß aus der schönsten stadt der welt theo ⚓️\n4                                                                                                                                                 @dushanwegner Amis hätten alles und jeden gewählt...nur Hillary wollten sie nicht und eine Fortsetzung von Obama-Politik erst recht nicht..!\n5                                                                                                                                                     @spdde kein verläßlicher Verhandlungspartner. Nachkarteln nach den Sondierzngsgesprächen - schickt diese Stümper #SPD in die Versenkung.\n6 @Dirki_M Ja, aber wo widersprechen die Zahlen denn denen, die im von uns verlinkten Artikel stehen? In unserem Tweet geht es rein um subs. Geschützte. 2017 ist der gesamte Familiennachzug im Vergleich zu 2016 - die Zahlen, die Hr. Brandner bemüht - übrigens leicht rückläufig gewesen.\n       c1     c2 n_words\n1   OTHER  OTHER      15\n2   OTHER  OTHER      19\n3   OTHER  OTHER      10\n4   OTHER  OTHER      21\n5 OFFENSE INSULT      15\n6   OTHER  OTHER      44"
  },
  {
    "objectID": "posts/count-words01/count-words01.html#tokenizerscount_words-1",
    "href": "posts/count-words01/count-words01.html#tokenizerscount_words-1",
    "title": "count-words01",
    "section": "tokenizers::count_words",
    "text": "tokenizers::count_words\n\ntic()\nmethod5 &lt;- tokenizers::count_words(germeval_train$text)\ntoc()\n\n0.027 sec elapsed\n\nhead(method5)\n\n[1] 15 19 10 21 15 44\n\n\n\ntic()\nmethod6 &lt;-\ngermeval_train |&gt; \n  mutate(n_words = tokenizers::count_words(text))\ntoc()\n\n0.03 sec elapsed\n\nmethod6 |&gt; head()\n\n  id\n1  1\n2  2\n3  3\n4  4\n5  5\n6  6\n                                                                                                                                                                                                                                                                                          text\n1                                                                                                                                                                                @corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\n2                                                                                                                                               @Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nicht ausschließt, kritisieren wir.\n3                                                                                                                                                                                                                        @ahrens_theo fröhlicher gruß aus der schönsten stadt der welt theo ⚓️\n4                                                                                                                                                 @dushanwegner Amis hätten alles und jeden gewählt...nur Hillary wollten sie nicht und eine Fortsetzung von Obama-Politik erst recht nicht..!\n5                                                                                                                                                     @spdde kein verläßlicher Verhandlungspartner. Nachkarteln nach den Sondierzngsgesprächen - schickt diese Stümper #SPD in die Versenkung.\n6 @Dirki_M Ja, aber wo widersprechen die Zahlen denn denen, die im von uns verlinkten Artikel stehen? In unserem Tweet geht es rein um subs. Geschützte. 2017 ist der gesamte Familiennachzug im Vergleich zu 2016 - die Zahlen, die Hr. Brandner bemüht - übrigens leicht rückläufig gewesen.\n       c1     c2 n_words\n1   OTHER  OTHER      15\n2   OTHER  OTHER      19\n3   OTHER  OTHER      10\n4   OTHER  OTHER      21\n5 OFFENSE INSULT      15\n6   OTHER  OTHER      44"
  },
  {
    "objectID": "posts/count-words01/count-words01.html#qdapwc-1",
    "href": "posts/count-words01/count-words01.html#qdapwc-1",
    "title": "count-words01",
    "section": "qdap::wc",
    "text": "qdap::wc\n\ntic()\nmethod7 &lt;- qdap::wc(germeval_train$text)\ntoc()\n\n1.245 sec elapsed\n\nmethod7 |&gt; head()\n\n[1] 15 20 10 19 15 42\n\n\nDeutlich langsamer als mit tokenizers.\n\nCategories:\n\ntextmining\ntidymodels\ncount\ngermeval\nstring"
  },
  {
    "objectID": "posts/tidymodels-penguins03/tidymodels-penguins03.html",
    "href": "posts/tidymodels-penguins03/tidymodels-penguins03.html",
    "title": "tidymodels-penguins03",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein kNN-Modell mit tidymodels und zwar anhand des penguins Datensatzes.\nModellgleichung: body_mass_g ~ bill_length_mm, data = d_train.\nGesucht ist R-Quadrat als Maß für die Modellgüte im TEST-Sample.\nHinweise:\n\nFixieren Sie die Zufallszahlen auf den Startwert 42.\nNutzen Sie eine v=5,r=1 CV.\nTunen Sie \\(K\\) (Default-Tuning)\nEntfernen Sie fehlende Werte in den Variablen.\nVerzichten Sie auf weitere Schritte der Vorverarbeitung.\n\n         \n\n\nLösung\nSetup:\n\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nDatensatz auf NAs prüfen:\n\nd2 &lt;-\n  d %&gt;% \n  drop_na() \n\nDatensatz aufteilen:\n\nset.seed(42)\nd_split &lt;- initial_split(d2)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\nWorkflow:\n\nrec1 &lt;-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n  step_naomit(all_numeric())\n\nknn_model &lt;-\n  nearest_neighbor(\n    mode = \"regression\",\n    neighbors = tune()\n  ) \n\nwflow &lt;-\n  workflow() %&gt;%\n  add_recipe(rec1) %&gt;%\n  add_model(knn_model)\n\nwflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\nK-Nearest Neighbor Model Specification (regression)\n\nMain Arguments:\n  neighbors = tune()\n\nComputational engine: kknn \n\n\nBacken:\n\nd_baked &lt;- prep(rec1) %&gt;% bake(new_data = NULL)\nd_baked %&gt;% head()\n\n# A tibble: 6 × 2\n  bill_length_mm body_mass_g\n           &lt;dbl&gt;       &lt;dbl&gt;\n1           34.5        2900\n2           52.2        3450\n3           45.4        4800\n4           42.1        4000\n5           50          5350\n6           41.5        4000\n\n\nAuf NA prüfen:\n\nsum(is.na(d_baked))\n\n[1] 0\n\n\nCV:\n\nset.seed(43)\nfolds &lt;- vfold_cv(d_train, v = 5)\nfolds\n\n#  5-fold cross-validation \n# A tibble: 5 × 2\n  splits           id   \n  &lt;list&gt;           &lt;chr&gt;\n1 &lt;split [199/50]&gt; Fold1\n2 &lt;split [199/50]&gt; Fold2\n3 &lt;split [199/50]&gt; Fold3\n4 &lt;split [199/50]&gt; Fold4\n5 &lt;split [200/49]&gt; Fold5\n\n\nTunen:\n\nd_resamples &lt;-\n  tune_grid(\n    wflow,\n    resamples = folds,\n    control = control_grid(save_workflow = TRUE)\n  )\n\nd_resamples\n\n# Tuning results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics          .notes          \n  &lt;list&gt;           &lt;chr&gt; &lt;list&gt;            &lt;list&gt;          \n1 &lt;split [199/50]&gt; Fold1 &lt;tibble [18 × 5]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [199/50]&gt; Fold2 &lt;tibble [18 × 5]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [199/50]&gt; Fold3 &lt;tibble [18 × 5]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [199/50]&gt; Fold4 &lt;tibble [18 × 5]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [200/49]&gt; Fold5 &lt;tibble [18 × 5]&gt; &lt;tibble [0 × 3]&gt;\n\n\nBester Kandidat:\n\nshow_best(d_resamples)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 7\n  neighbors .metric .estimator  mean     n std_err .config             \n      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1        14 rmse    standard    664.     5    22.7 Preprocessor1_Model9\n2        12 rmse    standard    671.     5    23.2 Preprocessor1_Model8\n3        11 rmse    standard    675.     5    24.1 Preprocessor1_Model7\n4         9 rmse    standard    685.     5    22.3 Preprocessor1_Model6\n5         8 rmse    standard    688.     5    22.9 Preprocessor1_Model5\n\n\n\nfitbest &lt;- fit_best(d_resamples)\nfitbest\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nkknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(14L,     data, 5))\n\nType of response variable: continuous\nminimal mean absolute error: 526.4603\nMinimal mean squared error: 416216.1\nBest kernel: optimal\nBest k: 14\n\n\nLast Fit:\n\nfit_last &lt;- last_fit(fitbest, d_split)\nfit_last\n\n# Resampling results\n# Manual resampling \n# A tibble: 1 × 6\n  splits           id               .metrics .notes   .predictions .workflow \n  &lt;list&gt;           &lt;chr&gt;            &lt;list&gt;   &lt;list&gt;   &lt;list&gt;       &lt;list&gt;    \n1 &lt;split [249/84]&gt; train/test split &lt;tibble&gt; &lt;tibble&gt; &lt;tibble&gt;     &lt;workflow&gt;\n\n\nModellgüte im Test-Sample:\n\nfit_last %&gt;% collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     606.    Preprocessor1_Model1\n2 rsq     standard       0.382 Preprocessor1_Model1\n\n\nR-Quadrat:\n\nsol &lt;- collect_metrics(fit_last)[[\".estimate\"]][2]\nsol\n\n[1] 0.38246\n\n\n\nCategories:\n\nds1\ntidymodels\nprediction\nyacsda\nstatlearning\nnum"
  },
  {
    "objectID": "posts/kausal27/kausal27.html",
    "href": "posts/kausal27/kausal27.html",
    "title": "kausal27",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über 7 Variablen, die als Knoten im Graph dargestellt sind (mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet) und über Kanten verbunden sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x1.\nAV: x3.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\nEs ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.\n\n\n\n\n{ x5 }\n{ x2 }\n{ x6, x7 }\n{ }\n{ x4, x6 }"
  },
  {
    "objectID": "posts/kausal27/kausal27.html#answerlist",
    "href": "posts/kausal27/kausal27.html#answerlist",
    "title": "kausal27",
    "section": "",
    "text": "{ x5 }\n{ x2 }\n{ x6, x7 }\n{ }\n{ x4, x6 }"
  },
  {
    "objectID": "posts/kausal27/kausal27.html#answerlist-1",
    "href": "posts/kausal27/kausal27.html#answerlist-1",
    "title": "kausal27",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nRichtig\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html",
    "href": "posts/regr-tree01/regr-tree01.html",
    "title": "regr-tree01",
    "section": "",
    "text": "library(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#setup",
    "href": "posts/regr-tree01/regr-tree01.html#setup",
    "title": "regr-tree01",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\ndata(mtcars)\nlibrary(tictoc)  # Zeitmessung\n\nFür Klassifikation verlangt Tidymodels eine nominale AV, keine numerische:\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(am = factor(am))"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#daten-teilen",
    "href": "posts/regr-tree01/regr-tree01.html#daten-teilen",
    "title": "regr-tree01",
    "section": "Daten teilen",
    "text": "Daten teilen\n\nd_split &lt;- initial_split(mtcars)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#modelle",
    "href": "posts/regr-tree01/regr-tree01.html#modelle",
    "title": "regr-tree01",
    "section": "Modell(e)",
    "text": "Modell(e)\n\nmod_tree &lt;-\n  decision_tree(mode = \"classification\",\n                cost_complexity = tune())"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#rezepte",
    "href": "posts/regr-tree01/regr-tree01.html#rezepte",
    "title": "regr-tree01",
    "section": "Rezept(e)",
    "text": "Rezept(e)\n\nrec1 &lt;- \n  recipe(am ~ ., data = d_train)"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#resampling",
    "href": "posts/regr-tree01/regr-tree01.html#resampling",
    "title": "regr-tree01",
    "section": "Resampling",
    "text": "Resampling\n\nrsmpl &lt;- vfold_cv(d_train, v = 2)"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#workflow",
    "href": "posts/regr-tree01/regr-tree01.html#workflow",
    "title": "regr-tree01",
    "section": "Workflow",
    "text": "Workflow\n\nwf1 &lt;-\n  workflow() %&gt;%  \n  add_recipe(rec1) %&gt;% \n  add_model(mod_tree)"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#tuningfitting",
    "href": "posts/regr-tree01/regr-tree01.html#tuningfitting",
    "title": "regr-tree01",
    "section": "Tuning/Fitting",
    "text": "Tuning/Fitting\n\nfit1 &lt;-\n  tune_grid(object = wf1,\n            resamples = rsmpl)"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#bester-kandidat",
    "href": "posts/regr-tree01/regr-tree01.html#bester-kandidat",
    "title": "regr-tree01",
    "section": "Bester Kandidat",
    "text": "Bester Kandidat\n\nautoplot(fit1)\n\n\n\n\n\nshow_best(fit1)\n\nWarning: No value of `metric` was given; metric 'roc_auc' will be used.\n\n\n# A tibble: 5 × 7\n  cost_complexity .metric .estimator  mean     n std_err .config              \n            &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1   0.0000000194  roc_auc binary       0.5     2       0 Preprocessor1_Model01\n2   0.00000000417 roc_auc binary       0.5     2       0 Preprocessor1_Model02\n3   0.000107      roc_auc binary       0.5     2       0 Preprocessor1_Model03\n4   0.000522      roc_auc binary       0.5     2       0 Preprocessor1_Model04\n5   0.00000542    roc_auc binary       0.5     2       0 Preprocessor1_Model05"
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#finalisieren",
    "href": "posts/regr-tree01/regr-tree01.html#finalisieren",
    "title": "regr-tree01",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nwf1_finalized &lt;-\n  wf1 %&gt;% \n  finalize_workflow(select_best(fit1))\n\nWarning: No value of `metric` was given; metric 'roc_auc' will be used."
  },
  {
    "objectID": "posts/regr-tree01/regr-tree01.html#last-fit",
    "href": "posts/regr-tree01/regr-tree01.html#last-fit",
    "title": "regr-tree01",
    "section": "Last Fit",
    "text": "Last Fit\n\nfinal_fit &lt;- \n  last_fit(object = wf1_finalized, d_split)\n\ncollect_metrics(final_fit)\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.875 Preprocessor1_Model1\n2 roc_auc  binary         0.75  Preprocessor1_Model1\n\n\n\nCategories:\n\nstatlearning\ntrees\ntidymodels\nstring"
  },
  {
    "objectID": "posts/tmdb07/tmdb07.html",
    "href": "posts/tmdb07/tmdb07.html",
    "title": "tmdb07",
    "section": "",
    "text": "Aufgabe\nMelden Sie sich an für die Kaggle Competition TMDB Box Office Prediction - Can you predict a movie’s worldwide box office revenue?.\nSie benötigen dazu ein Konto; es ist auch möglich, sich mit seinem Google-Konto anzumelden.\nBei diesem Prognosewettbewerb geht es darum, vorherzusagen, wieviel Umsatz wohl einige Filme machen werden. Als Prädiktoren stehen einige Infos wie Budget, Genre, Titel etc. zur Verfügung. Eine klassische “predictive Competition” also :-) Allerdings können immer ein paar Schwierigkeiten auftreten ;-)\nAufgabe\nErstellen Sie ein Lineares-Modell mit Regularisierung mit Tidymodels!\nHinweise\n\n\nVerzichten Sie auf Vorverarbeitung.\nTunen Sie die typischen Parameter.\nReichen Sie das Modell ein und berichten Sie Ihren Score.\nBegrenzen Sie sich auf folgende Prädiktoren.\n\n\npreds_chosen &lt;- \n  c(\"id\", \"budget\", \"popularity\", \"runtime\")\n\n         \n\n\nLösung\n\n\nPakete starten\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(finetune)\nlibrary(doParallel)\nlibrary(tictoc)\n\n\n\nDaten importieren\n\nd_train_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/train.csv\"\nd_test_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/test.csv\"\n\nd_train &lt;- read_csv(d_train_path)\nd_test &lt;- read_csv(d_test_path)\n\nWerfen wir einen Blick in die Daten:\n\nglimpse(d_train)\n\nRows: 3,000\nColumns: 23\n$ id                    &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 313576, 'name': 'Hot Tub Time Machine C…\n$ budget                &lt;dbl&gt; 1.40e+07, 4.00e+07, 3.30e+06, 1.20e+06, 0.00e+00…\n$ genres                &lt;chr&gt; \"[{'id': 35, 'name': 'Comedy'}]\", \"[{'id': 35, '…\n$ homepage              &lt;chr&gt; NA, NA, \"http://sonyclassics.com/whiplash/\", \"ht…\n$ imdb_id               &lt;chr&gt; \"tt2637294\", \"tt0368933\", \"tt2582802\", \"tt182148…\n$ original_language     &lt;chr&gt; \"en\", \"en\", \"en\", \"hi\", \"ko\", \"en\", \"en\", \"en\", …\n$ original_title        &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ overview              &lt;chr&gt; \"When Lou, who has become the \\\"father of the In…\n$ popularity            &lt;dbl&gt; 6.575393, 8.248895, 64.299990, 3.174936, 1.14807…\n$ poster_path           &lt;chr&gt; \"/tQtWuwvMf0hCc2QR2tkolwl7c3c.jpg\", \"/w9Z7A0GHEh…\n$ production_companies  &lt;chr&gt; \"[{'name': 'Paramount Pictures', 'id': 4}, {'nam…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'US', 'name': 'United States of…\n$ release_date          &lt;chr&gt; \"2/20/15\", \"8/6/04\", \"10/10/14\", \"3/9/12\", \"2/5/…\n$ runtime               &lt;dbl&gt; 93, 113, 105, 122, 118, 83, 92, 84, 100, 91, 119…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}]\", \"[{'…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"The Laws of Space and Time are About to be Viol…\n$ title                 &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ Keywords              &lt;chr&gt; \"[{'id': 4379, 'name': 'time travel'}, {'id': 96…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 4, 'character': 'Lou', 'credit_id'…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '59ac067c92514107af02c8c8', 'dep…\n$ revenue               &lt;dbl&gt; 12314651, 95149435, 13092000, 16000000, 3923970,…\n\nglimpse(d_test)\n\nRows: 4,398\nColumns: 22\n$ id                    &lt;dbl&gt; 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, …\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 34055, 'name': 'Pokémon Collection', 'p…\n$ budget                &lt;dbl&gt; 0.00e+00, 8.80e+04, 0.00e+00, 6.80e+06, 2.00e+06…\n$ genres                &lt;chr&gt; \"[{'id': 12, 'name': 'Adventure'}, {'id': 16, 'n…\n$ homepage              &lt;chr&gt; \"http://www.pokemon.com/us/movies/movie-pokemon-…\n$ imdb_id               &lt;chr&gt; \"tt1226251\", \"tt0051380\", \"tt0118556\", \"tt125595…\n$ original_language     &lt;chr&gt; \"ja\", \"en\", \"en\", \"fr\", \"en\", \"en\", \"de\", \"en\", …\n$ original_title        &lt;chr&gt; \"ディアルガVSパルキアVSダークライ\", \"Attack of t…\n$ overview              &lt;chr&gt; \"Ash and friends (this time accompanied by newco…\n$ popularity            &lt;dbl&gt; 3.851534, 3.559789, 8.085194, 8.596012, 3.217680…\n$ poster_path           &lt;chr&gt; \"/tnftmLMemPLduW6MRyZE0ZUD19z.jpg\", \"/9MgBNBqlH1…\n$ production_companies  &lt;chr&gt; NA, \"[{'name': 'Woolner Brothers Pictures Inc.',…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'JP', 'name': 'Japan'}, {'iso_3…\n$ release_date          &lt;chr&gt; \"7/14/07\", \"5/19/58\", \"5/23/97\", \"9/4/10\", \"2/11…\n$ runtime               &lt;dbl&gt; 90, 65, 100, 130, 92, 121, 119, 77, 120, 92, 88,…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}, {'iso_…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"Somewhere Between Time & Space... A Legend Is B…\n$ title                 &lt;chr&gt; \"Pokémon: The Rise of Darkrai\", \"Attack of the 5…\n$ Keywords              &lt;chr&gt; \"[{'id': 11451, 'name': 'pok√©mon'}, {'id': 1155…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 3, 'character': 'Tonio', 'credit_i…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '52fe44e7c3a368484e03d683', 'dep…\n\n\n\n\nResampling / Cross-Validation-Scheme\n\ncv_scheme &lt;- vfold_cv(d_train)\n\nKleine Werte für \\(v\\) wie \\(v=3\\) kann man wählen, um Rechenzeit zu sparen. Das ist gerade fürs Debuggen nützlich. Für die “Wirklichkeit” ist ein höherer Wert besser, z.B. \\(v=10\\) (der Defaultwert)\n\n\nRezept\n\nrec1 &lt;- \n  recipe(revenue ~ budget + popularity + runtime, data = d_train) %&gt;% \n  step_impute_bag(all_predictors()) %&gt;% \n  step_naomit(all_predictors()) \nrec1\n\n\n\nModell\n\nmodel_lm &lt;- linear_reg(penalty = tune(),\n                       engine = \"glmnet\")\n\n\n\nWorkflow\n\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(model_lm) %&gt;% \n  add_recipe(rec1)\n\n\n\nModell fitten (und tunen)\nParallele Verarbeitung starten:\n\ncl &lt;- makePSOCKcluster(4)  # Create 4 clusters\nregisterDoParallel(cl)\n\n\ntic()\nlm_fit1 &lt;-\n  wf1 %&gt;% \n  tune_race_anova(resamples = cv_scheme)\ntoc()\n\n18.691 sec elapsed\n\n\n\nlm_fit1 %&gt;% show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 7\n   penalty .metric .estimator      mean     n  std_err .config              \n     &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;                \n1 1.62e-10 rmse    standard   84540989.    10 5365801. Preprocessor1_Model01\n2 3.06e- 9 rmse    standard   84540989.    10 5365801. Preprocessor1_Model02\n3 1.51e- 8 rmse    standard   84540989.    10 5365801. Preprocessor1_Model03\n4 9.21e- 7 rmse    standard   84540989.    10 5365801. Preprocessor1_Model04\n5 2.83e- 6 rmse    standard   84540989.    10 5365801. Preprocessor1_Model05\n\n\n\n\nFinalisieren\n\nwf1_final &lt;-\n  wf1 %&gt;% \n  finalize_workflow(select_best(lm_fit1, metric = \"rmse\"))\n\n\n\nFinal Fit\n\nfit1_final &lt;-\n  wf1_final %&gt;% \n  fit(d_train)\n\nfit1_final\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_impute_bag()\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:  glmnet::glmnet(x = maybe_matrix(x), y = y, family = \"gaussian\") \n\n   Df  %Dev    Lambda\n1   0  0.00 103500000\n2   1  9.63  94340000\n3   1 17.62  85960000\n4   1 24.25  78320000\n5   1 29.76  71370000\n6   1 34.33  65030000\n7   1 38.13  59250000\n8   1 41.28  53990000\n9   1 43.90  49190000\n10  1 46.07  44820000\n11  2 48.25  40840000\n12  2 50.48  37210000\n13  2 52.34  33900000\n14  2 53.88  30890000\n15  2 55.15  28150000\n16  2 56.21  25650000\n17  2 57.09  23370000\n18  2 57.82  21290000\n19  2 58.43  19400000\n20  2 58.93  17680000\n21  2 59.35  16110000\n22  2 59.70  14680000\n23  2 59.99  13370000\n24  2 60.23  12180000\n25  2 60.42  11100000\n26  2 60.59  10120000\n27  2 60.73   9217000\n28  2 60.84   8398000\n29  2 60.93   7652000\n30  2 61.01   6973000\n31  2 61.08   6353000\n32  2 61.13   5789000\n33  2 61.18   5274000\n34  2 61.21   4806000\n35  3 61.25   4379000\n36  3 61.29   3990000\n37  3 61.32   3635000\n38  3 61.34   3313000\n39  3 61.36   3018000\n40  3 61.38   2750000\n41  3 61.39   2506000\n42  3 61.40   2283000\n43  3 61.41   2080000\n44  3 61.42   1896000\n45  3 61.43   1727000\n46  3 61.43   1574000\n\n...\nand 12 more lines.\n\n\n\npreds &lt;-\n  fit1_final %&gt;% \n  predict(d_test)\n\n\n\nSubmission df\n\nsubmission_df &lt;-\n  d_test %&gt;% \n  select(id) %&gt;% \n  bind_cols(preds) %&gt;% \n  rename(revenue = .pred)\n\nhead(submission_df)\n\n# A tibble: 6 × 2\n     id   revenue\n  &lt;dbl&gt;     &lt;dbl&gt;\n1  3001 -3508554.\n2  3002 -7712533.\n3  3003  8857329.\n4  3004 31400199.\n5  3005   101521.\n6  3006 13470119.\n\n\nAbspeichern und einreichen:\n\n#write_csv(submission_df, file = \"submission.csv\")\n\n\n\nKaggle Score\nDiese Submission erzielte einen Score von Score: 6.14787 (RMSLE).\n\nsol &lt;- 6.14787\n\n\nCategories:\n\nds1\ntidymodels\nstatlearning\ntmdb\nnum"
  },
  {
    "objectID": "posts/tidymodels-poly01/tidymodels-poly01.html",
    "href": "posts/tidymodels-poly01/tidymodels-poly01.html",
    "title": "tidymodels-poly01",
    "section": "",
    "text": "Aufgabe\nFitten Sie ein Polynomial-Modell für folgende Modellgleichung:\nbody_mass_g ~ bill_length_mm.\nGesucht ist der optimale Polynomgrad im Train-Sample (optimal hinsichtlich minimalem Prognosefehler).\nHinweise:\n\nDatensatz penguins (palmerpenguins)\nVerwenden Sie Tidymodels\nFitten Sie Polynome des Grades 1 bis 10.\nDefinieren Sie die Polynomegrade als Tuningparameter.\nBeziehen Sie sich auf RMSE als Kennzahl der Modellgüte.\nEntfernen Sie fehlende Werte in den Prädiktoren\n\n         \n\n\nLösung\nSetup:\n\nlibrary(tidymodels)\ndata(penguins, package = \"palmerpenguins\")\n\nRezept:\n\nrec1 &lt;- \n  recipe(body_mass_g ~ bill_length_mm, data = penguins) %&gt;% \n  step_naomit(all_predictors()) %&gt;% \n  step_poly(all_predictors(), degree = tune()) %&gt;% \n  update_role(contains(\"_poly_\"), new_role = \"predictor\")\n\nWarning: No columns were selected in `update_role()`.\n\n\nCheck:\n\nd_baked &lt;- bake(prep(rec1), new_data = NULL)\n\nWorkflow:\n\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(linear_reg()) %&gt;% \n  add_recipe(rec1)\n\nRezepte mit Tuningparametern kann man nicht preppen/backen.\nTuning:\n\ntune1 &lt;-\n  tune_grid(\n    wf1,\n    resamples = vfold_cv(data = penguins),\n    metrics = metric_set(rmse),\n    grid = grid_regular(degree(range = c(1, 10)),\n                               levels = 10)\n  )\n\n\nautoplot(tune1)\n\n\n\n\n\nshow_best(tune1)\n\n# A tibble: 5 × 7\n  degree .metric .estimator  mean     n std_err .config              \n   &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1      2 rmse    standard    642.    10    23.5 Preprocessor02_Model1\n2      1 rmse    standard    644.    10    27.4 Preprocessor01_Model1\n3      5 rmse    standard    646.    10    23.9 Preprocessor05_Model1\n4      4 rmse    standard    648.    10    25.4 Preprocessor04_Model1\n5      3 rmse    standard    654.    10    27.8 Preprocessor03_Model1\n\n\n\nsol &lt;- show_best(tune1)$degree[1]\nsol\n\n[1] 2\n\n\nDie Antwort lautet: 2.\n\nCategories:\n\nR\nstatlearning\ntidymodels\nnum"
  },
  {
    "objectID": "posts/penguins-stan-02/penguins-stan-02.html",
    "href": "posts/penguins-stan-02/penguins-stan-02.html",
    "title": "penguins-stan-02",
    "section": "",
    "text": "Aufgabe\nWir untersuchen Einflussfaktoren bzw. Prädiktoren auf das Körpergewicht von Pinguinen. In dieser Aufgabe untersuchen wir den Zusammenhang von Schnabellänge (als UV) und Körpergewicht (als AV).\nWie groß ist der statistische Einfluss der UV auf die AV?\nGeben Sie die Breite eines 90%-HDI an (zum Effekt)!\nHinweise:\n\nNutzen Sie den Datensatz zu den Palmer Penguins.\nSie können den Datensatz z.B. hier beziehen oder über das R-Paket palmerpenguins.\nWeitere Hinweise\n\n         \n\n\nLösung\nZentrieren ist eigentlich immer nützlich, aber hier streng genommen nicht unbedingt nötig. Der Hauptgrund dafür ist, dass Stan für uns den Prior für den Intercept festlegt, und zwar auf Basis der Daten, wir uns also nicht um die komische Frage zu kümmern brauchen, welchen Prior wir für den unzentrierten Achsenabschnitt vergeben wollten: Wie schwer sind Pinguins der Schnabellänge Null? Mit zentrierten Prädiktoren ist die Frage nach dem Prior viel einfacher zu beantworten: Wie schwer ist ein Pinguin mit mittelgroßem Schnabel?\nSetup:\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\n\ndata(\"penguins\", package = \"palmerpenguins\")\n\nEs wird in dieser Aufgabe vorausgesetzt, dass Sie den Datensatz selbständig importieren können. Tipp: Kurzes Googeln hilft ggf., den Datensatz zu finden.\nAlternativ könnten Sie den Datensatz als CSV-Datei importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\npenguins &lt;- data_read(d_path)\n\nEin Blick in die Daten zur Kontrolle, ob das Importieren richtig funktioniert hat:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nVertrauen ist gut, aber - was Golems betrifft - ist Kontrolle eindeutig besser ;-)\n\nm1 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins, #  Daten\n               seed = 42,  # Repro.\n               refresh = 0)  # nicht so viel Output\n\n\nparameters(m1, ci_method = \"hdi\", ci = .9, keep = \"bill_length_mm\")\n\nParameter      | Median |         90% CI |   pd |  Rhat |     ESS |                Prior\n----------------------------------------------------------------------------------------\nbill_length_mm |  87.45 | [77.17, 98.51] | 100% | 0.999 | 3931.00 | Normal (0 +- 367.22)\n\n\n\nUncertainty intervals (highest-density) and p-values (two-tailed)\n  computed using a MCMC distribution approximation.\n\n\nDie Lösung lautet also, wie aus der Ausgabe von parameters() ersichtlich, 21.34.\n\nCategories:\n\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/twitter01/twitter01.html",
    "href": "posts/twitter01/twitter01.html",
    "title": "twitter01",
    "section": "",
    "text": "Exercise\nLaden Sie die neuesten Tweets an karl_lauterbach herunter!\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rtweet)\n\n\nAttaching package: 'rtweet'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\nEinloggen bei Twitter; zuerst die Credentials bereithalten:\n\nsource(\"/Users/sebastiansaueruser/credentials/hate-speech-analysis-v01-twitter.R\")\n\nDann anmelden, z.B. als Bot:\n\nauth &lt;- rtweet_bot(api_key = API_Key,\n                   api_secret = API_Key_Secret,\n                   access_token = Access_Token,\n                   access_secret = Access_Token_Secret)\n\n… Oder als App, das bringt bessere Raten mit sich:\n\nauth &lt;- rtweet_app(bearer_token = Bearer_Token)\n\nTest:\n\nsesa_test &lt;- get_timeline(user = \"sauer_sebastian\", n = 3) %&gt;% \n  select(full_text)\n\nsesa_test\n\n1 RT @fuecks: By the way: Systematic destruction of life-sustaining infrastructures …\n2 RT @NoContextBrits: No shortbread for little Nazis. https://t.co/F6FUPvRz94        \n3 RT @ernst_gennat: 2 oder 3 Jahre #Tempolimit von 120 km/h. Abschließend Evaluation…\nTweets an Karl Lauterbach suchen:\n\nkarl1 &lt;- search_tweets(\"@karl_lauterbach\")\n\nIn Auszügen:\n\"@Karl_Lauterbach Ein Minister der alle paar Stunden Zeit hat einen Mist zu verbreiten....\"   \n\"@Karl_Lauterbach @focusonline Long Covid ist nichts anderes als schwere Nebenwirkungen der Gentherapie!\"  \"@Karl_Lauterbach @focusonline Wer schützt uns vor Long Lauterbach?\"\n\"@Karl_Lauterbach Also Karl, primär fordere ich und viele andere eher erstmal dein sofortigen Rücktritt.\"  \"@Karl_Lauterbach Behalt deinen Senf für dich!\"                                                            \"@Karl_Lauterbach Oh Gott 😱\"     \n\"@Karl_Lauterbach Ach nein, der Clown mit Lebensangst ….\\n\\nhttps://t.co/8cQZeHh6Ew\"                       \"@Karl_Lauterbach Ich kenne nur Leute mit Long Covid, die mehrfach geimpft sind! Das ist kein Witz! Scheinbar liegt’s wohl doch an den Spritzen???\"                                                            \"@Karl_Lauterbach @focusonline Interessiert keine Sau 😉\"                      \n\"RT @Karl_Lauterbach @focusonline „Lauterbachs Aussagen können fundamental nicht stimmen“\\nhttps://t.co/rfxnWAWiZX\"                                                                          \"@Karl_Lauterbach @focusonline 🤡😂😂😂😂😂😂\"                                         \n\"@Karl_Lauterbach Jau und sie sind kein fähiger Gesundheitsminister, sondern lediglich ein gekaufter Coronaminister\"        \nPuh, viele toxische Tweets, wie es scheint.\nUnd ohne Retweets (RT) und ohne Replies:\n\nkarl2 &lt;- search_tweets(\"@karl_lauterbach\", \n  include_rts = FALSE, `-filter` = \"replies\")\n\nTweets, die an Karl Lauterbach gerichtet sind, per API-Anweisung:\n\nkarl3 &lt;- search_tweets(\"to:karl_lauterbach\", n = 100)\n\n\"@Karl_Lauterbach Vielen Dank, dass LongCovid ein gefundenes fressen für die jenigen ist, die nicht mehr Arbeiten wollen.\"       \n \"@Karl_Lauterbach verpiss dich einfach! Immer dieser Schwachsinn\"    \n\"@Karl_Lauterbach @focusonline Das sind genau die Impfnebenwirkungen! Will man nun das wenden um die Impfnebenwirkungen zu vertuschen? \\nWofür ist die Impfung gut wenn nicht mal Long-Covid verhindert wird, die Ansteckung konnte sie noch nie verhindern!\\nWarum sind 89% Covid Patienten geimpfte in den Spitäler?\"\n\"@Karl_Lauterbach Was spielen Sie eigentlich für ein schmutziges Spiel?\\n\\nhttps://t.co/8LJIzxyF7G\"   \n \"@Karl_Lauterbach @focusonline Bessen von Covid! Ständig wird das Netz durchsucht, nach Artikeln,die instrumentalisiert werden, um für Impfung zu werben. Was hätte nur ein vernünftiger Gesundheitsminister mit so viel Zeit Vernünftiges im Gesundheitswesen auf die Beine stellen können...\"    \n\"@Karl_Lauterbach Mit Dauerschaden wegen der Impfung 💉 bin ich Arbeitslos geworden in der Pflege 🤷‍♂️ Ist das normal Herr @Karl_Lauterbach ?\"          \nOb man mit @karl_lauterbach sucht oder `to:karl_lauterbach”, scheint keinen großen Unterschied zu machen (?).\n\nCategories:\n\ntextmining\ntwitter"
  },
  {
    "objectID": "posts/kausal10/kausal10.html",
    "href": "posts/kausal10/kausal10.html",
    "title": "kausal10",
    "section": "",
    "text": "Ein Forschungsteam aus Psychologen und Medizinern untersucht die Frage, ob (höhere) Bereitschaft für eine OP und zu Veränderung in ihrer Lebensführung, nach einem Jahr über einen (höheren) Schmerzrückgang führt. Das hießt, Patienten geringerer Bereitschaft sollten es entsprechend zu weniger Schmerzrückgang kommen. Die Bereitschaft der Patienten (ein theoretisches Konstrukt, was nicht direkt beobachtbar ist) wurde mittels eines psychometrisch validierten Fragebogen erhoben. Die Studie umfasst ausschließlich Patienten, die eine OP wegen Rückenschmerzen durchlaufen sind (s. DAG).\nDas Studiendesign impliziert, dass nur Patienten, die eine OP durchlaufen haben, in die Studie aufgenommen wurde. Damit wird per Design diese Variable stratifiziert (kontrolliert).\n\n\n\n\n\nDurch die Stratifizierung wird ein Hintertürpfad geöffnet; dieser muss geschlossen werden. Wie sollte dies geschehen (in diesem Modell)?\nIm folgenden Diagramm ist der Kollisionsbias kenntlich gemacht, der durch die Stratifizierung von Surgical Status entsteht:\n\n\n\n\n\nHinweis:\n\nWenn von “kausaler Effekt” gesprochen wird, ist stets der (totale) kausale Effekt wie oben definiert gemeint.\nGehen Sie davon aus, dass die Daten zur Studie wie oben dargestellt erhoben und zugänglich sind; die Datenerhebung aber abgeschlossen ist.\n\n\n\n\nEs sollte vom Forschungsteam auf Baseline Pane kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Underlying Readiness kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Surgical Status kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Change in Pain kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Measured Readiness kontrolliert werden, um den kausalen Effekt zu identifizieren."
  },
  {
    "objectID": "posts/kausal10/kausal10.html#answerlist",
    "href": "posts/kausal10/kausal10.html#answerlist",
    "title": "kausal10",
    "section": "",
    "text": "Es sollte vom Forschungsteam auf Baseline Pane kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Underlying Readiness kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Surgical Status kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Change in Pain kontrolliert werden, um den kausalen Effekt zu identifizieren.\nEs sollte vom Forschungsteam auf Measured Readiness kontrolliert werden, um den kausalen Effekt zu identifizieren."
  },
  {
    "objectID": "posts/kausal10/kausal10.html#answerlist-1",
    "href": "posts/kausal10/kausal10.html#answerlist-1",
    "title": "kausal10",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/kausal26/kausal26.html",
    "href": "posts/kausal26/kausal26.html",
    "title": "kausal26",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über 7 Variablen, die als Knoten im Graph dargestellt sind (mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet) und über Kanten verbunden sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x4.\nAV: x5.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\nEs ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.\n\n\n\n\n{ x1, x2 }\n/\n{ x2 }\n{ x6, x7 }\n{ x3 }"
  },
  {
    "objectID": "posts/kausal26/kausal26.html#answerlist",
    "href": "posts/kausal26/kausal26.html#answerlist",
    "title": "kausal26",
    "section": "",
    "text": "{ x1, x2 }\n/\n{ x2 }\n{ x6, x7 }\n{ x3 }"
  },
  {
    "objectID": "posts/kausal26/kausal26.html#answerlist-1",
    "href": "posts/kausal26/kausal26.html#answerlist-1",
    "title": "kausal26",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nRichtig\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/Priorwahl1/Priorwahl1.html",
    "href": "posts/Priorwahl1/Priorwahl1.html",
    "title": "Priorwahl1",
    "section": "",
    "text": "Exercise\nEi Forschi wählt für ein Regressionsmodell \\(\\beta \\sim \\mathcal{N}(0,500)\\) (Priori), wobei die empirischen Variablen z-standardisiert sind. Beziehen Sie Stellung zu diesem Prior.\n         \n\n\nSolution\nDie Priori-Verteilung ist nicht sinnvoll spezifiziert. Die Streuung der Normalverteilung ist so groß, dass sie fast schon uniform verteilt ist. Dieser Priori-Verteilung nimmt z.B. an, \\(Pr(|\\beta| &lt; 250) &lt; Pr(|\\beta| &gt; 250)\\), was eine sehr wilde Vorstellung ist. Man könnte sagen: Die Verteilung nimmt an, dass es wahrscheinlicher ist, dass ihr bester Freund 100 Millionen Lichtjahre entfernt lebt, als dass er näher als diese Distanz bei Ihnen lebt.\nWeitere Hinweise hier\nZur Verdeutlichung: Wie wahrscheinlich ist \\(q=1,2,...,10\\) bei einer Normalverteilung zu betrachten?\nFür \\(q=1\\) beträgt die Wahrscheinlichkeit für einen Wert nicht höher als \\(q=1\\) etwa 84%:\n\npnorm(q = 1)\n\n[1] 0.8413447\n\n\nAllgemeiner:\n\noptions(digits = 20)  # Mehr Nachkommastellen\npnorm(q = 1:10)\n\n [1] 0.84134474606854292578 0.97724986805182079141 0.99865010196836989653\n [4] 0.99996832875816688002 0.99999971334842807646 0.99999999901341229958\n [7] 0.99999999999872013490 0.99999999999999933387 1.00000000000000000000\n[10] 1.00000000000000000000\n\n\nDie Wahrscheinlichkeiten für Sigma-Ereignisse bis zu ±7 finden sich z.B. hier.\n\noptions(digits = 2)\n\nVertiefung:\nNassim Taleb hat dieses Argument in seinem Buch “Statistical Consequences of Fat Tails” aufgegriffen (ein anspruchsvolles Buch). Hier finden Sie eine interessante Darstellung eines Arguments daraus.\n\nCategories:\n\nfat-tails\ndistributions"
  },
  {
    "objectID": "posts/mariokart-sd1/mariokart-sd1.html",
    "href": "posts/mariokart-sd1/mariokart-sd1.html",
    "title": "mariokart-sd1",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie die SD des Verkaufspreis (total_pr) für Spiele, die neu sind oder (auch) über Lenkräder (wheels) verfügen.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nmariokart &lt;- data_read(d_url)\n\n\nsolution &lt;-\nmariokart  %&gt;% \n  filter(cond == \"new\" | wheels &gt; 0) %&gt;% \n  summarise(pr_mean = sd(total_pr))\n\nsolution\n\n   pr_mean\n1 27.54928\n\n\nLösung: 27.5.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nvariability\nnum"
  },
  {
    "objectID": "posts/Streuung-Histogramm/Streuung-Histogramm.html",
    "href": "posts/Streuung-Histogramm/Streuung-Histogramm.html",
    "title": "Streuung-Histogramm",
    "section": "",
    "text": "Wählen Sie das Diagramm, in dem der vertikale gestrichelte Linie am genauesten die Position des Medians (\\(Md\\)) widerspiegelt.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nB\nC\nD"
  },
  {
    "objectID": "posts/Streuung-Histogramm/Streuung-Histogramm.html#answerlist",
    "href": "posts/Streuung-Histogramm/Streuung-Histogramm.html#answerlist",
    "title": "Streuung-Histogramm",
    "section": "",
    "text": "A\nB\nC\nD"
  },
  {
    "objectID": "posts/Streuung-Histogramm/Streuung-Histogramm.html#answerlist-1",
    "href": "posts/Streuung-Histogramm/Streuung-Histogramm.html#answerlist-1",
    "title": "Streuung-Histogramm",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\neda\nstreuungsmaß\nvariability\ndyn\nschoice"
  },
  {
    "objectID": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html",
    "href": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html",
    "title": "Bed-Post-Wskt1",
    "section": "",
    "text": "Beziehen Sie sich auf das Regressionsmodell, für das die Ausgabe mit stan_glm() hier dargestellt ist:\n## stan_glm\n##  family:       gaussian [identity]\n##  formula:      height ~ weight_c\n##  observations: 346\n##  predictors:   2\n## ------\n##             Median MAD_SD\n## (Intercept) 154.6    0.3 \n## weight_c      0.9    0.0 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 5.1    0.2   \nBetrachten Sie wieder folgende Beziehung (Gleichung bzw. Ungleichung):\n\\[Pr(\\text{height}_i = 155|\\text{weightcentered}_i=0, \\alpha, \\beta, \\sigma) \\quad \\Box \\quad Pr(\\text{height}_i = 156|\\text{weightcentered}_i=0, \\alpha, \\beta, \\sigma)\\] Die in der obigen Beziehung angegebenen Parameter beziehen sich auf das oben dargestellt Modell.\nErgänzen Sie das korrekte Zeichen in das Rechteck \\(\\Box\\)!\n\n\n\n\\(\\lt\\)\n\\(\\le\\)\n\\(\\gt\\)\n\\(\\ge\\)\n\\(=\\)"
  },
  {
    "objectID": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html#answerlist",
    "href": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html#answerlist",
    "title": "Bed-Post-Wskt1",
    "section": "",
    "text": "\\(\\lt\\)\n\\(\\le\\)\n\\(\\gt\\)\n\\(\\ge\\)\n\\(=\\)"
  },
  {
    "objectID": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html#answerlist-1",
    "href": "posts/Bed-Post-Wskt1/Bed-Post-Wskt1.html#answerlist-1",
    "title": "Bed-Post-Wskt1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\nregression\nbayes\npost"
  },
  {
    "objectID": "posts/Regr-Bayes-interpret/Regr-Bayes-interpret.html",
    "href": "posts/Regr-Bayes-interpret/Regr-Bayes-interpret.html",
    "title": "Regr-Bayes-interpret",
    "section": "",
    "text": "Exercise\nBerechnen Sie das Modell und interpretieren Sie die Ausgabe des folgenden Regressionsmodells. Geben Sie für jeden Regressionskoeffizienten an, wie sein Wert zu verstehen ist!\nmpg ~ hp + am + hp:am\nHinweise:\n\nFixieren Sie die Zufallszahlen.\nVerwenden Sie Stan zur Berechnung.\nRunden Sie auf 2 Dezimalstellen.\n\n         \n\n\nSolution\n\nlibrary(tidyverse)  # Datenjudo\nlibrary(rstanarm)  # Stan, komm her\nlibrary(easystats)  # Komfort\n\n\nm1 &lt;- \n  stan_glm(mpg ~ hp + am + hp:am, \n           seed = 42,\n           refresh = 0,\n           data = mtcars)\n\ncoef(m1)\n\n  (Intercept)            hp            am         hp:am \n26.6170440514 -0.0588639914  5.2553599666  0.0003348108 \n\n\n\nIntercept: Ein Auto mit 0 PS und Automatikantrieb (am=0, s. Hilfe zum Datensatz: help(mtcars)) kann laut Modell mit einer Gallone Sprit ca. 26.62 Meilen fahren.\nhp: Pro zusätzlichem PS kann ein Auto mit Automatikantrieb pro Gallone Sprit ca. 0.06 Meilen weniger weit fahren.\nam: Ein Auto mit 0 PS und Schaltgetriebe (am=1) kommt pro Gallone Sprit ca. 5.26 Meilen weiter als ein Auto mit Automatikantrieb.\nhp:am: Der Interaktionseffekt ist praktisch Null: Der Zusammenhang von PS-Zahl und Spritverbrauch unterscheidet sich nicht (wesentlich) zwischen Autos mit bzw. ohne Automatikantrieb.\n\n\nCategories:\n\nbayes\nregression"
  },
  {
    "objectID": "posts/emojis1/emojis1.html",
    "href": "posts/emojis1/emojis1.html",
    "title": "emojis1",
    "section": "",
    "text": "Extrahieren Sie die Anzahl der Emojis aus einem Text.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\nlibrary(easystats)\ndata(\"germeval_train\", package = \"pradadata\")\n\nNutzen Sie diesen Text-Datensatz, bevor Sie den größeren germeval-Datensatz verwenden:"
  },
  {
    "objectID": "posts/emojis1/emojis1.html#setup",
    "href": "posts/emojis1/emojis1.html#setup",
    "title": "emojis1",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(tictoc)\nlibrary(emoji)  # emoji_xxx\nlibrary(tidyEmoji)"
  },
  {
    "objectID": "posts/emojis1/emojis1.html#test-1",
    "href": "posts/emojis1/emojis1.html#test-1",
    "title": "emojis1",
    "section": "Test 1",
    "text": "Test 1\n\ntest_text |&gt; \n  mutate(n_emojis = emoji_count(text))\n\n  id                     text n_emo n_emojis\n1  1 Abbau, Abbruch ist jetzt     2        0\n2  2   Test   🧑‍🎓 😄 heute!!     0        3\n [ reached 'max' / getOption(\"max.print\") -- omitted 6 rows ]\n\n\nDas Paket emoji beinhaltet eine Menge Emojis:\n\nemoji_name |&gt; length()\n\n[1] 4538"
  },
  {
    "objectID": "posts/emojis1/emojis1.html#test2",
    "href": "posts/emojis1/emojis1.html#test2",
    "title": "emojis1",
    "section": "Test2",
    "text": "Test2\n\ntest_text$text |&gt; \n  emoji_subset()\n\n[1] \"Test   🧑‍🎓 😄 heute!!\""
  },
  {
    "objectID": "posts/emojis1/emojis1.html#tidyemoji---emojis-kategorisieren",
    "href": "posts/emojis1/emojis1.html#tidyemoji---emojis-kategorisieren",
    "title": "emojis1",
    "section": "TidyEmoji - Emojis kategorisieren",
    "text": "TidyEmoji - Emojis kategorisieren\n\ndata.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",\n\"R is my language! \\U0001f601\\U0001f606\\U0001f605\",\n\"This Tweet does not have Emoji!\",\n\"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",\n\"Emoji does not appear in all Tweets\",\n\"A flag \\U0001f600\\U0001f3c1\")) %&gt;%\nemoji_categorize(tweets)\n\n# A tibble: 4 × 2\n  tweets                   .emoji_category        \n  &lt;chr&gt;                    &lt;chr&gt;                  \n1 I love tidyverse 😀😃😃  Smileys & Emotion      \n2 R is my language! 😁😆😅 Smileys & Emotion      \n3 Wearing a mask😷😷😷.    Smileys & Emotion      \n4 A flag 😀🏁              Smileys & Emotion|Flags\n\n\n\ntest_text |&gt; \n  emoji_categorize(text)\n\n# A tibble: 1 × 4\n     id text                 n_emo .emoji_category                        \n  &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;                                  \n1     2 Test   🧑‍🎓 😄 heute!!     0 Smileys & Emotion|People & Body|Objects\n\n\n\ndata(wild_emojis, package = \"pradadata\")\n\n\nwild_emojis |&gt; \n  emoji_categorize(emoji)\n\n# A tibble: 28 × 2\n   emoji .emoji_category                           \n   &lt;chr&gt; &lt;chr&gt;                                     \n 1 💣    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 2 💀    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 3 ☠️     Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 4 😠    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 5 👹    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 6 💩    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 7 😡    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 8 🤢    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n 9 🤮    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n10 😖    Smileys & Emotion|NULL|NULL|NULL|NULL|NULL\n# ℹ 18 more rows\n\n\nAlternativ kann man auch via Regex und Unicode Regex ansprechen… emoji_pattern &lt;- \"\\\\p{So}\".\nDas ist vermutlich cleverer 🤓.\n\nCategories:\n\nemoji\ntextmining\nstring"
  },
  {
    "objectID": "posts/penguins-stan-04/penguins-stan-04.html",
    "href": "posts/penguins-stan-04/penguins-stan-04.html",
    "title": "penguins-stan-04",
    "section": "",
    "text": "Aufgabe\nWir untersuchen Einflussfaktoren bzw. Prädiktoren auf das Körpergewicht von Pinguinen. In dieser Aufgabe untersuchen wir den Zusammenhang von Schnabellänge (als UV) und Körpergewicht (als AV).\nWie groß ist die Wahrscheinlichkeit, dass der Effekt vorhanden ist (also größer als Null ist), die “Effektwahrscheinlichkeit”? Geben Sie die Wahrscheinlichkeit an.\nHinweise:\n\nNutzen Sie den Datensatz zu den Palmer Penguins.\nVerwenden Sie Methoden der Bayes-Statistik und die Software Stan.\nSie können den Datensatz z.B. hier beziehen oder über das R-Paket palmerpenguins.\nWeitere Hinweise\n\n         \n\n\nLösung\nZentrieren ist eigentlich immer nützlich, aber hier streng genommen nicht unbedingt nötig. Der Hauptgrund dafür ist, dass Stan für uns den Prior für den Intercept festlegt, und zwar auf Basis der Daten, wir uns also nicht um die komische Frage zu kümmern brauchen, welchen Prior wir für den unzentrierten Achsenabschnitt vergeben wollten: Wie schwer sind Pinguins der Schnabellänge Null? Mit zentrierten Prädiktoren ist die Frage nach dem Prior viel einfacher zu beantworten: Wie schwer ist ein Pinguin mit mittelgroßem Schnabel?\nSetup:\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\n\ndata(\"penguins\", package = \"palmerpenguins\")\n\nEs wird in dieser Aufgabe vorausgesetzt, dass Sie den Datensatz selbständig importieren können. Tipp: Kurzes Googeln hilft ggf., den Datensatz zu finden.\nAlternativ könnten Sie den Datensatz als CSV-Datei importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\npenguins &lt;- data_read(d_path)\n\nEin Blick in die Daten zur Kontrolle, ob das Importieren richtig funktioniert hat:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nVertrauen ist gut, aber - was Golems betrifft - ist Kontrolle eindeutig besser ;-)\n\nm1 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins, #  Daten\n               seed = 42,  # Repro.\n               refresh = 0)  # nicht so viel Output\n\nMit pd() kann man sich die Effektwahrscheinlichkeit (“probability of direction”) ausgeben lassen:\n\npd(m1)\n\nProbability of Direction\n\nParameter      |     pd\n-----------------------\n(Intercept)    | 89.55%\nbill_length_mm |   100%\n\n\nMehr Informationen zu dieser Statistik findet sich hier oder hier.\nAlternativ bekommt man die Statistik auch mit parameters().\nDie Lösung lautet also 1.\n\nCategories:\n\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/rope1/rope1.html",
    "href": "posts/rope1/rope1.html",
    "title": "rope1",
    "section": "",
    "text": "Question\nDas Testen von Nullhypothesen wird u.a. deswegen kritisiert, weil die Nullhypothese zumeist apriori als falsch bekannt ist, weswegen es keinen Sinne mache, so die Kritiker, sie zu testen.\nNennen Sie ein Verfahren von John Kruschke, das einen Äquivalenzbereich testet und insofern eine Alternative zum Testen von Nullhypothesen anbietet.\nHinweise:\n\nGeben Sie nur Kleinbuchstaben ein.\nGeben Sie nur ein einziges Wort ein.\n\n\n\nSolution\nrope"
  },
  {
    "objectID": "posts/Regression3/Regression3.html",
    "href": "posts/Regression3/Regression3.html",
    "title": "Regression3",
    "section": "",
    "text": "dabei wird noch die Gruppierungsvariable \\(g\\) (mit den Stufen 0 und 1) berücksichtigt (vgl. Farbe und Form der Punkte). Zur besseren Orientierung ist die Regressionsgerade pro Gruppe eingezeichnet.\n\n\nWarning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\nWählen Sie das (für die Population) am besten passende Modell aus der Liste aus!\nHinweis: Ein Interaktionseffekt der Variablen \\(x\\) und \\(g\\) ist mit \\(xg\\) gekennzeichnet.\n\n\n\n\\(y = 40 + -10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = -40 + -10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = 40 + 10\\cdot x + -40 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = -40 + 10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)"
  },
  {
    "objectID": "posts/Regression3/Regression3.html#answerlist",
    "href": "posts/Regression3/Regression3.html#answerlist",
    "title": "Regression3",
    "section": "",
    "text": "\\(y = 40 + -10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = -40 + -10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = 40 + 10\\cdot x + -40 \\cdot g + -10 \\cdot xg + \\epsilon\\)\n\\(y = -40 + 10\\cdot x + 0 \\cdot g + -10 \\cdot xg + \\epsilon\\)"
  },
  {
    "objectID": "posts/Regression3/Regression3.html#answerlist-1",
    "href": "posts/Regression3/Regression3.html#answerlist-1",
    "title": "Regression3",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nRichtig\nFalsch\nFalsch\n\n\nCategories:\n\ndyn\nregression\nlm\nschoice"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html",
    "href": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html",
    "title": "Verteilungen-Quiz-16",
    "section": "",
    "text": "Für die Körpergröße des deutschen Mannes \\(X\\) gelte \\(X \\sim N(180,06)\\) (in Zentimetern).\nQuelle Mittelwert Quelle SD geschätzt\nÄhnliche Daten finden sich bei Our World in Data.\nIst folgende Aussage wahr?\nDas 50%-Quantil von \\(X\\) beträgt 180.\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html#answerlist",
    "href": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html#answerlist",
    "title": "Verteilungen-Quiz-16",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-16/Verteilungen-Quiz-16.html#answerlist-1",
    "title": "Verteilungen-Quiz-16",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html",
    "href": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html",
    "title": "Verteilungen-Quiz-11",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nBei einer Verteilung gilt: \\(\\bar{x} = Md = \\text{Modus}\\).\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html#answerlist",
    "href": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html#answerlist",
    "title": "Verteilungen-Quiz-11",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-11/Verteilungen-Quiz-11.html#answerlist-1",
    "title": "Verteilungen-Quiz-11",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/movies-vis2/movies-vis2.html",
    "href": "posts/movies-vis2/movies-vis2.html",
    "title": "movies-vis2",
    "section": "",
    "text": "Aufgabe\nImportieren Sie bitte für diese Aufgabe den Datensatz movies (aus dem R-Paket ggplot2movies). Ein Data-Dictionary findet sich hier.\nErstellen Sie folgende Visualisierung:\n\nGruppenvergleich des Budgets pro Jahr\nBerücksichtigen Sie nur Actionfilme ab 2000\nVerzichten Sie auf Filme mit einer unterdurchschnittlichen Zahl an Bewertungen (votes; gemessen an allen Filmen, gerundet zur nächsten ganzen Zahl)\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(DataExplorer)\n\nDaten importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2movies/movies.csv\"\nd &lt;- read.csv(d_path)\n\nDurchschnittliche Zahl an Bewertungen:\n\nd %&gt;% \n  summarise(votes_mean = mean(votes))\n\n  votes_mean\n1   632.1304\n\n\nDie durchschnittliche Zahl an Bewertungen beträgt also 632.\n\nd %&gt;% \n  select(budget, rating, year, votes, Action) %&gt;% \n  filter(year &gt;= 2000) %&gt;% \n  filter(Action == 1) %&gt;% \n  filter(votes &gt;= 632) %&gt;% \n  select(-Action) %&gt;% \n  mutate(year = factor(year)) %&gt;% \n  select(budget, year) %&gt;% \n  plot_boxplot(by = \"year\")\n\nWarning: Removed 66 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nHinweis: Die Zahl “5.0e+07” ist eine Zahl in der Exponenzial-Schreibweis, nämlich \\(5\\cdot10^7\\), also \\(5 \\cdot 1000000\\).\n\nCategories:\n\nvis\neda\nstring"
  },
  {
    "objectID": "posts/Typ-Fehler-R-06a/Typ-Fehler-R-06a.html",
    "href": "posts/Typ-Fehler-R-06a/Typ-Fehler-R-06a.html",
    "title": "Typ-Fehler-R-06a",
    "section": "",
    "text": "Aufgabe\nBetrachten Sie folgende R-Syntax, für die R eine Fehlermeldung ausgibt:\n\nx &lt;- c(1, 2, 3)\nsum(abs(mean(x) - x)))\n\nError: &lt;text&gt;:2:22: unexpected ')'\n1: x &lt;- c(1, 2, 3)\n2: sum(abs(mean(x) - x)))\n                        ^\n\n\nGeben Sie die korrekte Syntax an! Ändern Sie nur die notwendigen Zeichen an der Syntax oben. Gehen Sie davon aus, dass die aufgerufenen Funktionen existieren.\nGeben Sie keine Leerzeichen ein.\n         \n\n\nLösung\nHinten ist eine (schließende) Klammer zu viel, die muss weg:\n\nsum(abs(mean(x)-x))  # so geht's\n\nError in mean(x): object 'x' not found\n\n\nDie Antwort lautet: sum(abs(mean(x)-x)).\n\nCategories:\n\nR\n‘2023’\nstring"
  },
  {
    "objectID": "posts/targets-multiple-data-files/targets-multiple-data-files.html",
    "href": "posts/targets-multiple-data-files/targets-multiple-data-files.html",
    "title": "targets-multiple-data-files",
    "section": "",
    "text": "Aufgabe\nSchreiben Sie eine targets Pipeline, die einen Ordner mit Datendateien beobachtet und sich aktualisiert, wenn neue Daten dazukommt. Die Pipeline soll die Datendateien importieren und zu einer Tabelle zusammenfügen und schließlich die Zeilen zählen.\n         \n\n\nLösung\nDie folgende Lösung ist stark inspiriert von diesem SO-Post.\nWir scheiben eine _targets.R Datei mit folgendem Inhalt.\nZuerst das Setup:\n\nlibrary(targets)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tarchetypes)  # für tar_files()\n\nDann definieren wir Konstanten; hier den Pfad:\n\npath &lt;- list()\npath$data &lt;- \"data/\"\n\nAus Gründen der Ordnungsfreude haben wir eine Liste erstellt, in der dann alle möglichen Pfade abgelegt werden können.\nSchließlich definieren wir die Pipeline. Hier spielt die Musik:\n\nlist(\n  tar_files(data_paths, path$data %&gt;% list.files(full.names = TRUE, pattern = \"csv\")),  # Liste der Daten-Dateien\n  tar_target(data_proc, data_paths %&gt;% read_csv(),  # Einlesen\n             pattern = map(data_paths)),  # Über alle Elemente von data_paths iterieren, also über alle Datendateien\n  tar_target(n_row, nrow(data_proc))  # Zeilen zählen\n)\n\n[[1]]\n[[1]]$data_paths_files\n&lt;tar_stem&gt; \n  name: data_paths_files \n  command:\n    path$data %&gt;% list.files(full.names = TRUE, pattern = \"csv\") \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: always\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n[[1]]$data_paths\n&lt;tar_pattern&gt; \n  name: data_paths \n  command:\n    data_paths_files \n  pattern:\n    map(data_paths_files) \n  format: file \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: main \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    character(0) \n  library:\n    NULL\n\n[[2]]\n&lt;tar_pattern&gt; \n  name: data_proc \n  command:\n    data_paths %&gt;% read_csv() \n  pattern:\n    map(data_paths) \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n[[3]]\n&lt;tar_stem&gt; \n  name: n_row \n  command:\n    nrow(data_proc) \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n\n\nMit pattern = map(data_paths) iterieren wir nicht nur über alle Elemente von data_path, sondern fügen die Elemente auch zu einer Tabelle zusammen.\nHier ist die ganze Syntax noch einmal:\n\n# _targets.R file\n\nlibrary(targets)\nlibrary(tidyverse)\nlibrary(tarchetypes)\n\n\npath &lt;- list()\npath$data &lt;- \"data/\"\n\n\nlist(\n  tar_files(data_paths, path$data %&gt;% list.files(full.names = TRUE, pattern = \"csv\")),\n  tar_target(data_proc, data_paths %&gt;% read_csv(),\n             pattern = map(data_paths)),\n  tar_target(n_row, nrow(data_proc))\n)\n\n[[1]]\n[[1]]$data_paths_files\n&lt;tar_stem&gt; \n  name: data_paths_files \n  command:\n    path$data %&gt;% list.files(full.names = TRUE, pattern = \"csv\") \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: always\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n[[1]]$data_paths\n&lt;tar_pattern&gt; \n  name: data_paths \n  command:\n    data_paths_files \n  pattern:\n    map(data_paths_files) \n  format: file \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: main \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    character(0) \n  library:\n    NULL\n\n[[2]]\n&lt;tar_pattern&gt; \n  name: data_proc \n  command:\n    data_paths %&gt;% read_csv() \n  pattern:\n    map(data_paths) \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n[[3]]\n&lt;tar_stem&gt; \n  name: n_row \n  command:\n    nrow(data_proc) \n  format: rds \n  repository: local \n  iteration method: vector \n  error mode: stop \n  memory mode: persistent \n  storage mode: main \n  retrieval mode: main \n  deployment mode: worker \n  priority: 0 \n  resources:\n    list() \n  cue:\n    mode: thorough\n    command: TRUE\n    depend: TRUE\n    format: TRUE\n    repository: TRUE\n    iteration: TRUE\n    file: TRUE\n    seed: TRUE \n  packages:\n    tarchetypes\n    lubridate\n    forcats\n    stringr\n    dplyr\n    purrr\n    readr\n    tidyr\n    tibble\n    ggplot2\n    tidyverse\n    targets\n    stats\n    graphics\n    grDevices\n    utils\n    datasets\n    colorout\n    methods\n    base \n  library:\n    NULL\n\n\n\nCategories:\n\nprojectmgt\ntargets\nrepro\nstring"
  },
  {
    "objectID": "posts/wskt-quiz05/wskt-quiz05.html",
    "href": "posts/wskt-quiz05/wskt-quiz05.html",
    "title": "wskt-quiz05",
    "section": "",
    "text": "Wasserplanet entdeckt (Er wurde auf den Namen “Bath42” getauft)! Die ganze Oberfläche besteht aus Wasser. Jemand presentiert uns die Probe von diesem Planeten: Wasser! Allerdings ohne zu sagen, ob die Probe vom Wasserplaneten oder von der Erde (E) kommt. Hm.\nGilt die folgende Gleichung: \\(Pr(W|E) = Pr(E|W)\\)?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz05/wskt-quiz05.html#answerlist",
    "href": "posts/wskt-quiz05/wskt-quiz05.html#answerlist",
    "title": "wskt-quiz05",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz05/wskt-quiz05.html#answerlist-1",
    "href": "posts/wskt-quiz05/wskt-quiz05.html#answerlist-1",
    "title": "wskt-quiz05",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\ndistribution\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html",
    "href": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html",
    "title": "Verteilungen-Quiz-17",
    "section": "",
    "text": "Ei Forschi untersucht die mittlere Körpergröße eines bis dato unbekannten Urwaldvolks. Dabei findet sich aposteriori (also als Ergebnis der Untersuchung) \\(\\bar{x} \\sim N(160,5)\\) (in Zentimetern).\nDis Forschi resümiert: “Mit sehr hoher Wahrscheinlichkeit, also 95%, sind diese Menschen im Schnitt größer als 1 Meter 60 Zentimeter groß”.\nIst diese Aussage korrekt (gegeben der Angaben)?\nHinweise:\n\nNutzen Sie Simulationsmethoden zur Lösung\nFixieren Sie die Zufallszahlen auf die Startzahl 42.\nZiehen Sie \\(10^5\\) Zufallszahlen aus der gegebenen Verteilung.\n\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html#answerlist",
    "href": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html#answerlist",
    "title": "Verteilungen-Quiz-17",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-17/Verteilungen-Quiz-17.html#answerlist-1",
    "title": "Verteilungen-Quiz-17",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/count-lexicon/count-lexicon.html",
    "href": "posts/count-lexicon/count-lexicon.html",
    "title": "count-lexicon",
    "section": "",
    "text": "Aufgabe\nGegeben eines (mehrelementigen) Strings, my_string, und eines Lexicons, my_lexicon, zählen Sie, wie häufig sich ein Wort aus dem Lexikon in einem Element des Strings wiederfindet.\n\nmy_string &lt;-\n  c(\"Heute ist ein schöner Tag\", \"Was geht in dieser Woche?\")\n\n\nmy_lexicon &lt;- c(\"Tag\", \"Woche\", \"Jahr\")\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie die Funktion count_lexicon aus {prada}. Das Paket können Sie hier herunterladen/installieren.\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nPaket prada\nEine Möglichkeit ist es, die Funktion count_lexion aus dem Paket prada zu nutzen.\nMan kann es so installieren: remotes::install_github(\"sebastiansauer/prada\").\n\nlibrary(prada)\n\n\nmap_int(my_string,  \n        ~ count_lexicon(.x, my_lexicon))\n\n[1] 1 1\n\n\nSo können Sie sich den Quellcode einer Funktion, z.B. count_lexicon() anschauen:\n\ncount_lexicon\n\nfunction(txt, lexicon){\n  # convert strings to lower letters:\n  txt &lt;- tolower(txt)\n  lexicon &lt;- tolower(lexicon)\n\n  # build regex query:\n  lexicon_regex &lt;- paste0(\"^\", lexicon, \"$\", collapse = \"|\")\n\n  # split string into words:\n  string_in_words &lt;- unlist(stringr::str_split(txt, pattern = stringr::boundary(\"word\")))\n\n  # search:\n  pattern_detected_in_string_count &lt;- sum(stringr::str_detect(string_in_words, pattern = lexicon_regex))\n\n  # return:\n  return(pattern_detected_in_string_count)\n}\n&lt;bytecode: 0x7fb814c232d0&gt;\n&lt;environment: namespace:prada&gt;\n\n\nIn dem Paket gibt es noch zwei Varianten für diese Funktion, die auf einem Join aufbauen.\n\n\nSelbstgestrickt\nHier ist eine zweite Variante ohne besondere Pakete (außer stringr).\nWir definieren eine entsprechende Funktion:\n\n# Funktion, um die Anzahl der Übereinstimmungen eines Lexikons in einem String zu zählen\ncount_lexicon_matches &lt;- function(string, lexicon) {\n  # Verketten Sie die Wörter im Lexikon mit dem |-Operator, um ein reguläres Ausdrucksmuster zu erstellen\n  lexicon_pattern &lt;- paste(lexicon, collapse = \"|\")\n  # Verwenden Sie str_count, um die Anzahl der Übereinstimmungen zu zählen\n  matches &lt;- str_count(string, lexicon_pattern)\n  return(matches)\n}\n\nWir zählen die Übereinstimmungen in jedem Element des Strings:\n\nmatches_per_element &lt;- sapply(my_string, count_lexicon_matches, lexicon = my_lexicon)\n\n# Ergebnis ausgeben:\nprint(matches_per_element)\n\nHeute ist ein schöner Tag Was geht in dieser Woche? \n                        1                         1 \n\n\nAnstelle von sapply kann man das tidyverse-Pendant, map nutzen:\n\nmap_int(my_string,  \n        ~ count_lexicon_matches(.x, my_lexicon))\n\n[1] 1 1\n\n\n\nCategories:\n\ntextmining\nnlp\nregex\nstring"
  },
  {
    "objectID": "posts/korr02/korr02.html",
    "href": "posts/korr02/korr02.html",
    "title": "korr02",
    "section": "",
    "text": "Aufgabe\nWelcher Korrelationswert (Pearson) beschreibt die Korrelation in den Daten am besten?\n         \n\n\nLösung\nDie Korrelation in der zugehörigen (bivariaten) Population beträgt 0.\nIn der Stichprobe kann der zugehörige Wert (etwas abweichen).\nDas ist genauso, wie wenn man sagt, dass der “mittlere deutsche Mann” 1,80m groß sei, aber wenn Sie eine Stichprobe ziehen, muss der Mittelwert ja auch nicht (notwendigerweise) exakt bei 1,80m liegen.\n\n\n\n\n\n\nCategories:\n\ndyn\neda\nassociation\nnum"
  },
  {
    "objectID": "posts/adjustieren1a/adjustieren1a.html",
    "href": "posts/adjustieren1a/adjustieren1a.html",
    "title": "adjustieren1a",
    "section": "",
    "text": "Aufgabe\nBetrachten Sie folgendes Modell, das den Zusammenhang von PS-Zahl und Spritverbrauch untersucht (Datensatz mtcars).\nAber zuerst zentrieren wir den metrischen Prädiktor hp, um den Achsenabschnitt besser interpretieren zu können.\n\nlibrary(tidyverse)\nlibrary(easystats)\ndata(mtcars)\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(hp_z = hp - mean(hp))\n\n\nlm1 &lt;- lm(mpg ~ hp_z, data = mtcars)\nparameters(lm1)\n\nParameter   | Coefficient |   SE |         95% CI | t(30) |      p\n------------------------------------------------------------------\n(Intercept) |       20.09 | 0.68 | [18.70, 21.49] | 29.42 | &lt; .001\nhp z        |       -0.07 | 0.01 | [-0.09, -0.05] | -6.74 | &lt; .001\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald t-distribution approximation.\n\n\nJetzt können wir aus dem Achsenabschnitt (Intercept) herauslesen, dass ein Auto mit hp_z = 0 - also mit mittlerer PS-Zahl - vielleicht gut 20 Meilen weit mit einer Gallone Sprit kommt.\nZur Verdeutlichung ein Diagramm zum Modell:\n\nestimate_relation(lm1) |&gt; plot()\n\n\n\n\nAdjustieren Sie im Modell die PS-Zahl um die Art des Schaltgetriebes (am), so dass das neue Modell den statistischen Effekt (nicht notwendig auch kausal) der PS-Zahl bereinigt bzw. unabhängig von der Art des Schaltgetriebes widerspiegelt!\nHinweise:\n\nam=0 ist ein Auto mit Automatikgetriebe.\nWir gehen davon aus, dass der Regressionseffekt gleich stark ist auf allen (beiden) Stufen von am. M.a.W.: Es liegt kein Interaktionseffekt vor.\n\n         \n\n\nLösung\n\nlm2 &lt;- lm(mpg ~ hp_z + am, data = mtcars)\nparameters(lm2)\n\nParameter   | Coefficient |       SE |         95% CI | t(29) |      p\n----------------------------------------------------------------------\n(Intercept) |       17.95 |     0.68 | [16.56, 19.33] | 26.55 | &lt; .001\nhp z        |       -0.06 | 7.86e-03 | [-0.07, -0.04] | -7.50 | &lt; .001\nam          |        5.28 |     1.08 | [ 3.07,  7.48] |  4.89 | &lt; .001\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald t-distribution approximation.\n\n\nDie Spalte Coefficient gibt den mittleren geschätzten Wert für den jeweiligen Koeffizienten an, also den Schätzwert zum Koeffizienten.\nDie Koeffizienten zeigen, dass der Achsenabschnitt für Autos mit Automatikgetriebe um etwa 5 Meilen geringer ist als für Autos mit manueller Schaltung: Ein durchschnittliches Auto mit manueller Schaltung kommt also etwa 5 Meilen weiter als ein Auto mit Automatikschaltung, glaubt unser Modell.\n\nestimate_relation(lm2) |&gt; plot()\n\n\n\n\nam wird als numerische Variable erkannt.\nDas können wir so ändern:\n\nmtcars &lt;- \n  mtcars |&gt; \n  mutate(am = factor(am))\n\n\nlm3 &lt;- lm(mpg ~ hp_z + am, data = mtcars)\nparameters(lm3)\n\nParameter   | Coefficient |       SE |         95% CI | t(29) |      p\n----------------------------------------------------------------------\n(Intercept) |       17.95 |     0.68 | [16.56, 19.33] | 26.55 | &lt; .001\nhp z        |       -0.06 | 7.86e-03 | [-0.07, -0.04] | -7.50 | &lt; .001\nam [1]      |        5.28 |     1.08 | [ 3.07,  7.48] |  4.89 | &lt; .001\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald t-distribution approximation.\n\n\nDie Koeffizienten bleiben gleich.\nAber im Diagramm wird am jetzt als Faktor-Variable erkannt, was Sinn macht:\n\nestimate_relation(lm3) |&gt; plot()\n\n\n\n\nMan könnte hier noch einen Interaktionseffekt ergänzen.\n\nCategories:\n\nregression\n‘2023’\nstring"
  },
  {
    "objectID": "posts/regex02/regex02.html",
    "href": "posts/regex02/regex02.html",
    "title": "regex02",
    "section": "",
    "text": "Aufgabe\nMatchen Sie Elemente des Vektors txt3, die nur aus Ziffern bestehen:\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\n\n\n[1] FALSE FALSE  TRUE  TRUE FALSE FALSE\n\n\nMan kann z.B. auch \\\\d verwenden anstelle von [:digit:].\nSicherlich gibt es noch mehrere weitere Lösungen.\n\nCategories:\n\ntextmining\nregex\nstring"
  },
  {
    "objectID": "posts/lm-mario2/lm-mario2.html",
    "href": "posts/lm-mario2/lm-mario2.html",
    "title": "lm-mario2",
    "section": "",
    "text": "Sagen Sie den Verkaufspreis vorher für ein Spiel mit 3 Euro Versandkosten (ship_pr)!"
  },
  {
    "objectID": "posts/lm-mario2/lm-mario2.html#setup",
    "href": "posts/lm-mario2/lm-mario2.html#setup",
    "title": "lm-mario2",
    "section": "Setup",
    "text": "Setup\n\nmariokart &lt;- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`."
  },
  {
    "objectID": "posts/lm-mario2/lm-mario2.html#regressionsgerade-berechnen",
    "href": "posts/lm-mario2/lm-mario2.html#regressionsgerade-berechnen",
    "title": "lm-mario2",
    "section": "Regressionsgerade berechnen",
    "text": "Regressionsgerade berechnen\n\nlm_mariokart &lt;- lm(total_pr ~ ship_pr, data = mariokart) # \"lm\" wie *l*lineares *M*odell, also eine Gerade.\nlm_mariokart\n\n\nCall:\nlm(formula = total_pr ~ ship_pr, data = mariokart)\n\nCoefficients:\n(Intercept)      ship_pr  \n     36.246        4.337"
  },
  {
    "objectID": "posts/lm-mario2/lm-mario2.html#vorhersagen",
    "href": "posts/lm-mario2/lm-mario2.html#vorhersagen",
    "title": "lm-mario2",
    "section": "Vorhersagen",
    "text": "Vorhersagen\nVorhersagen funktionieren mit dem Befehl predict:\n\nneues_spiel &lt;- tibble(ship_pr = 3)  # oder \"data.frame\" statt \"tibble\"\nneues_spiel\n\n# A tibble: 1 × 1\n  ship_pr\n    &lt;dbl&gt;\n1       3\n\n\n\npredict(lm_mariokart, neues_spiel)  # predicte mir den Verkaufspreis\n\n      1 \n49.2572 \n\n\n\nCategories:\n\nR\nlm\npredict\nnum"
  },
  {
    "objectID": "posts/chatgpt-sentiment-simple/chatgpt-sentiment-simple.html",
    "href": "posts/chatgpt-sentiment-simple/chatgpt-sentiment-simple.html",
    "title": "chatgpt-sentiment-simple",
    "section": "",
    "text": "Aufgabe\nFragen Sie ChatGPT via API zum Sentiment des ersten Texts aus dem Germeval-2018-Datensatz (Train).\nHinweise:\n\nBeachten Sie die Standardhinweise des Datenwerks.\nNutzen Sie Python, nicht R.\nDas Verwenden der OpenAI-API kostet Geld. 💸 Informieren Sie sich vorab. Um auf die API zugreifen zu können, müssen Sie sich ein Konto angelegt haben und über ein Guthaben verfügen.\n\n         \n\n\nLösung\n\nOpenAI hat eine neue API (Stand: 2023-11-23). Der Code der alten API bricht. 💔 \\(\\square\\)\n\nModule importieren:\n\nfrom openai import OpenAI\n\nAnmelden bei OpenAI:\n\nclient = OpenAI()\n\n\n\n\n\n\n\nNote\n\n\n\nDieses Verfahren setzt voraus, dass in .Renviron die Variable OPENAI_API_KEY hinterlegt ist. \\(\\square\\)\n\n\nTextschnipsel, das zu klassifizieren ist:\n\ntext = \"@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\"\n\nPrompt definieren:\n\nmy_prompt  = f\"Analysieren Sie das Sentiment des folgenden Texts:\\n{text}\"\n\nAnfrage an die API, in eine Funktion gepackt:\n\ndef get_completion(prompt, client_instance, model=\"gpt-3.5-turbo\"):\n  messages = [{\"role\": \"user\", \"content\": prompt}]\n  response = client_instance.chat.completions.create(\n  model=model,\n  messages=messages,\n  max_tokens=50,\n  temperature=0,\n  )\n  return response.choices[0].message.content\n\nUnd los:\n\nget_completion(my_prompt, client) \n\n'Basierend auf dem gegebenen Text kann das Sentiment als positiv eingestuft werden. Der Text drückt eine positive Absicht aus, indem er Corinna Milborn als Moderatorin gewinnen möchte und Interesse an ihrer'"
  },
  {
    "objectID": "posts/Klausuren-bestehen/Klausuren-bestehen.html",
    "href": "posts/Klausuren-bestehen/Klausuren-bestehen.html",
    "title": "Klausuren-bestehen",
    "section": "",
    "text": "Aufgabe\nEine Studentin hat zwei Klausuren, \\(A\\) und \\(B\\) geschrieben. Sie schätzt ihre Chancen zu bestehen auf 35% bzw. auf 60%. Unterstellen Sie Unabhängigkeit der Ereignisse.\nAufgabe: Wie groß ist die Chance, mindestens eine der beiden Klausuren zu bestehen?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\n\nPr_A &lt;- .35\nPr_B &lt;- .6\n\nDie Wahrscheinlichkeit, beide Klausuren zu bestehen:\n\nPr_AB &lt;- Pr_A * Pr_B\nPr_AB\n\n[1] 0.21\n\n\nDie Wahrscheinlichkeit, durch beide Klausuren durchzurasseln nennen wir Pr_negA_negB:\n\nPr_NA &lt;- 1 - Pr_A\nPr_NB &lt;- 1 - Pr_B\n\nPr_negA_negB &lt;- Pr_NA * Pr_NB\nPr_negA_negB\n\n[1] 0.26\n\n\nDas Gegenteil von Pr_negA_negB ist, mindestens eine Klausur zu bestehen:\n\nPr_mind1_bestanden &lt;- 1 - Pr_negA_negB\nPr_mind1_bestanden\n\n[1] 0.74\n\n\nDie Lösung lautet 0.74.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/wskt-quiz11/wskt-quiz11.html",
    "href": "posts/wskt-quiz11/wskt-quiz11.html",
    "title": "wskt-quiz11",
    "section": "",
    "text": "Sei \\(X \\sim N(100, 15)\\).\nBehauptung: Es gilt: \\(Pr(X \\ge 115) &lt; .2\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz11/wskt-quiz11.html#answerlist",
    "href": "posts/wskt-quiz11/wskt-quiz11.html#answerlist",
    "title": "wskt-quiz11",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz11/wskt-quiz11.html#answerlist-1",
    "href": "posts/wskt-quiz11/wskt-quiz11.html#answerlist-1",
    "title": "wskt-quiz11",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\ndistribution\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html",
    "href": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html",
    "title": "Verteilungen-Quiz-03",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nWenn eine Verteilung einer stetigen Zufallsvariablen \\(X\\) (z.B. die Posteriori-Verteilung einer Bayes-Analyse) normalverteilt ist, gilt dann \\(Pr(X \\ge\\bar{x}) = 1/2\\).\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html#answerlist",
    "href": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html#answerlist",
    "title": "Verteilungen-Quiz-03",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-03/Verteilungen-Quiz-03.html#answerlist-1",
    "title": "Verteilungen-Quiz-03",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/germeval05/germeval05.html",
    "href": "posts/germeval05/germeval05.html",
    "title": "germeval05",
    "section": "",
    "text": "Erstellen Sie ein prädiktives Modell für Textdaten. Nutzen Sie Word-Vektoren für das Feature-Engineering.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\ndata(\"germeval_test\", package = \"pradadata\")\n\nDie AV lautet c1. Die (einzige) UV lautet: text.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie Tidymodels."
  },
  {
    "objectID": "posts/germeval05/germeval05.html#textvektoren-importieren",
    "href": "posts/germeval05/germeval05.html#textvektoren-importieren",
    "title": "germeval05",
    "section": "Textvektoren importieren",
    "text": "Textvektoren importieren\n\nlibrary(textdata)\n\nglove_embedding &lt;- embedding_glove6b(\n  dir = \"/Users/sebastiansaueruser/datasets\",\n  return_path = TRUE,\n  manual_download = TRUE\n)\n\nhead(glove_embedding)\n\n# A tibble: 6 × 51\n  token     d1      d2     d3      d4    d5      d6     d7     d8        d9\n  &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n1 the   0.418   0.250  -0.412  0.122  0.345 -0.0445 -0.497 -0.179 -0.000660\n2 ,     0.0134  0.237  -0.169  0.410  0.638  0.477  -0.429 -0.556 -0.364   \n3 .     0.152   0.302  -0.168  0.177  0.317  0.340  -0.435 -0.311 -0.450   \n4 of    0.709   0.571  -0.472  0.180  0.544  0.726   0.182 -0.524  0.104   \n5 to    0.680  -0.0393  0.302 -0.178  0.430  0.0322 -0.414  0.132 -0.298   \n6 and   0.268   0.143  -0.279  0.0163 0.114  0.699  -0.513 -0.474 -0.331   \n# ℹ 41 more variables: d10 &lt;dbl&gt;, d11 &lt;dbl&gt;, d12 &lt;dbl&gt;, d13 &lt;dbl&gt;, d14 &lt;dbl&gt;,\n#   d15 &lt;dbl&gt;, d16 &lt;dbl&gt;, d17 &lt;dbl&gt;, d18 &lt;dbl&gt;, d19 &lt;dbl&gt;, d20 &lt;dbl&gt;,\n#   d21 &lt;dbl&gt;, d22 &lt;dbl&gt;, d23 &lt;dbl&gt;, d24 &lt;dbl&gt;, d25 &lt;dbl&gt;, d26 &lt;dbl&gt;,\n#   d27 &lt;dbl&gt;, d28 &lt;dbl&gt;, d29 &lt;dbl&gt;, d30 &lt;dbl&gt;, d31 &lt;dbl&gt;, d32 &lt;dbl&gt;,\n#   d33 &lt;dbl&gt;, d34 &lt;dbl&gt;, d35 &lt;dbl&gt;, d36 &lt;dbl&gt;, d37 &lt;dbl&gt;, d38 &lt;dbl&gt;,\n#   d39 &lt;dbl&gt;, d40 &lt;dbl&gt;, d41 &lt;dbl&gt;, d42 &lt;dbl&gt;, d43 &lt;dbl&gt;, d44 &lt;dbl&gt;,\n#   d45 &lt;dbl&gt;, d46 &lt;dbl&gt;, d47 &lt;dbl&gt;, d48 &lt;dbl&gt;, d49 &lt;dbl&gt;, d50 &lt;dbl&gt;"
  },
  {
    "objectID": "posts/germeval05/germeval05.html#workflow",
    "href": "posts/germeval05/germeval05.html#workflow",
    "title": "germeval05",
    "section": "Workflow",
    "text": "Workflow\n\n# model:\nmod1 &lt;-\n  logistic_reg()\n\n\n# cv:\nset.seed(42)\nrsmpl &lt;- vfold_cv(d_train, v = 5)\n\n\n# recipe:\nrec1 &lt;-\n  recipe(c1 ~ ., data = d_train) |&gt; \n  update_role(id, new_role = \"id\")  |&gt; \n  #update_role(c2, new_role = \"ignore\") |&gt; \n  step_tokenize(text) %&gt;%\n  step_stopwords(text, keep = FALSE) %&gt;%\n  step_word_embeddings(text,\n                       embeddings = glove_embedding,\n                       aggregation = \"mean\") |&gt; \n  step_normalize(all_numeric_predictors()) \n\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)"
  },
  {
    "objectID": "posts/germeval05/germeval05.html#tuiningfitting",
    "href": "posts/germeval05/germeval05.html#tuiningfitting",
    "title": "germeval05",
    "section": "Tuining/Fitting",
    "text": "Tuining/Fitting\n\ntic()\nwf1_fit &lt;-\n  wf1 %&gt;% \n  fit_resamples(\n    resamples = rsmpl,\n    metrics = metric_set(accuracy, f_meas, roc_auc),\n    control = control_grid(verbose = TRUE))\ntoc()\n\n26.374 sec elapsed\n\nbeep()\n\n\nwf1_fit |&gt; collect_metrics()\n\n# A tibble: 3 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.656     5 0.00726 Preprocessor1_Model1\n2 f_meas   binary     0.129     5 0.0156  Preprocessor1_Model1\n3 roc_auc  binary     0.593     5 0.00947 Preprocessor1_Model1\n\n\nBester Fold:\n\nshow_best(wf1_fit)\n\n# A tibble: 1 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.656     5 0.00726 Preprocessor1_Model1"
  },
  {
    "objectID": "posts/germeval05/germeval05.html#fit",
    "href": "posts/germeval05/germeval05.html#fit",
    "title": "germeval05",
    "section": "Fit",
    "text": "Fit\n\nfit1 &lt;- \n  wf1 |&gt; \n  fit(data = d_train)"
  },
  {
    "objectID": "posts/germeval05/germeval05.html#test-set-güte",
    "href": "posts/germeval05/germeval05.html#test-set-güte",
    "title": "germeval05",
    "section": "Test-Set-Güte",
    "text": "Test-Set-Güte\nVorhersagen im Test-Set:\n\ntic()\npreds &lt;-\n  predict(fit1, new_data = germeval_test)\ntoc()\n\n2.229 sec elapsed\n\n\nUnd die Vorhersagen zum Test-Set hinzufügen, damit man TRUTH und ESTIMATE vergleichen kann:\n\nd_test &lt;-\n  germeval_test |&gt; \n  bind_cols(preds) |&gt; \n  mutate(c1 = as.factor(c1))\n\n\nmy_metrics &lt;- metric_set(accuracy, f_meas)\nmy_metrics(d_test,\n           truth = c1,\n           estimate = .pred_class)\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.652\n2 f_meas   binary         0.138"
  },
  {
    "objectID": "posts/germeval05/germeval05.html#fazit",
    "href": "posts/germeval05/germeval05.html#fazit",
    "title": "germeval05",
    "section": "Fazit",
    "text": "Fazit\nglove6b ist für die englische Sprache vorgekocht. Das macht wenig Sinn für einen deutschsprachigen Corpus.\n\nCategories:\n\ntextmining\ndatawrangling\ngermeval\nprediction\ntidymodels\nwordvec\nstring"
  },
  {
    "objectID": "posts/germeval02/germeval02.html",
    "href": "posts/germeval02/germeval02.html",
    "title": "germeval02",
    "section": "",
    "text": "Führen Sie eine Sentiment-Analyse durch. Verwenden Sie verschiedene Verfahren.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/germeval02/germeval02.html#sentimentanalyse-mit-regex",
    "href": "posts/germeval02/germeval02.html#sentimentanalyse-mit-regex",
    "title": "germeval02",
    "section": "Sentimentanalyse mit Regex",
    "text": "Sentimentanalyse mit Regex\nDie Funktion count_lexicon stammt aus {prada}.\nTipp: Mit ?count_lexicon sehen Sie den Quelltext (jeder Funktion).\n\ntest_text  |&gt; \n  mutate(n_emowords = map_int(text, prada::count_lexicon, sentiws$word))\n\n# A tibble: 8 × 4\n     id text                     n_emo n_emowords\n  &lt;int&gt; &lt;chr&gt;                    &lt;dbl&gt;      &lt;int&gt;\n1     1 Abbau, Abbruch ist jetzt     2          2\n2     2 Test heute                   0          0\n3     3 Abbruch morgen perfekt       2          2\n4     4 Abmachung lore ipsum         1          1\n5     5 boese ja                     1          0\n6     6 böse nein                    1          1\n7     7 hallo ?! hallo.              0          0\n8     8 gut schlecht                 2          2\n\n\n\ntic()\ngermeval_train |&gt; \n  mutate(n_emowords = map_int(text, ~ prada::count_lexicon(.x, sentiws$word))) |&gt; \n  head()\n\n# A tibble: 6 × 5\n     id text                                              c1    c2    n_emowords\n  &lt;int&gt; &lt;chr&gt;                                             &lt;chr&gt; &lt;chr&gt;      &lt;int&gt;\n1     1 @corinnamilborn Liebe Corinna, wir würden dich g… OTHER OTHER          2\n2     2 @Martin28a Sie haben ja auch Recht. Unser Tweet … OTHER OTHER          2\n3     3 @ahrens_theo fröhlicher gruß aus der schönsten s… OTHER OTHER          0\n4     4 @dushanwegner Amis hätten alles und jeden gewähl… OTHER OTHER          1\n5     5 @spdde kein verläßlicher Verhandlungspartner. Na… OFFE… INSU…          1\n6     6 @Dirki_M Ja, aber wo widersprechen die Zahlen de… OTHER OTHER          4\n\ntoc()\n\n61.739 sec elapsed\n\n\nPuh! Viel zu langsam."
  },
  {
    "objectID": "posts/germeval02/germeval02.html#sentimentanalyse-mit-unnest_tokens",
    "href": "posts/germeval02/germeval02.html#sentimentanalyse-mit-unnest_tokens",
    "title": "germeval02",
    "section": "Sentimentanalyse mit unnest_tokens",
    "text": "Sentimentanalyse mit unnest_tokens\nProbieren wir es mit unnest_tokens:\nJaa,… aber die Strings ohne Treffer werden ignoriert.\n\ntest_text |&gt; \n  unnest_tokens(word, text) |&gt; \n  right_join(sentiws |&gt; select(word)) |&gt; \n  count(id)\n\n# A tibble: 6 × 2\n     id     n\n  &lt;int&gt; &lt;int&gt;\n1     1     2\n2     3     2\n3     4     1\n4     6     1\n5     8     2\n6    NA  3461\n\n\nProbieren wir es so:\n\n#' Count words in a lexicon\n#' \n#' Counts how many of the words of the character vector `text` are\n#' found in a lexicon `lex` \n#' `text` is transformed via tolower.\n#'\n#' @param text corpus, character vector\n#'\n#' @return number of hits per element of the corpus\n#' @export\n#'\n#' @examples\n#' count_lex(my_text, my_lex)\ncount_lex &lt;- function(text) {\n  \n  stopifnot(class(text) == \"character\")\n  \n  doc &lt;- tibble(text = tolower(text),\n                id = 1:length(text))\n  \n  doc1 &lt;- \n    doc |&gt; \n    tidytext::unnest_tokens(word, text) |&gt; \n    dplyr::inner_join(sentiws |&gt; dplyr::select(word), by = \"word\") |&gt; \n    count(id)\n  \n  doc2 &lt;-\n    doc1 |&gt; \n    dplyr::full_join(doc |&gt; select(id), by = \"id\")\n  \n  doc2$n &lt;- ifelse(is.na(doc2$n), 0,doc2$n)\n  \n  doc2 &lt;- doc2 |&gt; dplyr::arrange(id)\n  \n  doc2 |&gt; pull(n)\n}\n\nMit dem Paket box kann man Funktionen, die nicht in Paketen stehen, importieren.\n\ncount_lex(test_text$text)\n\n[1] 2 0 2 1 0 1 0 2\n\n\nAls neue Spalte im Datensatz:\n\ntest_text |&gt; \n  mutate(n_emowords = count_lex(text))\n\n# A tibble: 8 × 4\n     id text                     n_emo n_emowords\n  &lt;int&gt; &lt;chr&gt;                    &lt;dbl&gt;      &lt;dbl&gt;\n1     1 Abbau, Abbruch ist jetzt     2          2\n2     2 Test heute                   0          0\n3     3 Abbruch morgen perfekt       2          2\n4     4 Abmachung lore ipsum         1          1\n5     5 boese ja                     1          0\n6     6 böse nein                    1          1\n7     7 hallo ?! hallo.              0          0\n8     8 gut schlecht                 2          2"
  },
  {
    "objectID": "posts/germeval02/germeval02.html#sentimentanalyse-mit-syuzhet",
    "href": "posts/germeval02/germeval02.html#sentimentanalyse-mit-syuzhet",
    "title": "germeval02",
    "section": "Sentimentanalyse mit {syuzhet}",
    "text": "Sentimentanalyse mit {syuzhet}\n\nMit dem Lexicon nrc\n\nget_nrc_sentiment(test_text$text, language = \"german\")\n\n  anger anticipation disgust fear joy sadness surprise trust negative positive\n1     0            0       0    0   0       0        0     0        0        0\n2     0            0       0    0   0       0        0     0        0        0\n3     0            3       0    0   1       0        0     1        0        1\n4     0            0       0    0   0       0        0     0        0        0\n5     0            0       0    0   0       0        0     0        0        1\n6     0            0       0    0   0       0        0     0        1        0\n7     0            0       0    0   0       0        0     0        0        0\n8     2            1       2    2   1       3        1     1        4        1\n\n\nTja, nicht so viele Treffer …\nIn der Zusammenfassung:\n\nget_nrc_values(text, language = \"german\")\n\n# A tibble: 1 × 10\n  anger anticipation disgust  fear   joy negative positive sadness surprise\n  &lt;dbl&gt;        &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1     0            0       0     0     0        0        0       0        0\n# ℹ 1 more variable: trust &lt;dbl&gt;\n\n\nTja, leider keine Treffer. Merkwürdig.\n\nget_sentiment(text,\n              method = \"nrc\",\n              language = \"german\")\n\n[1]  0  0  1  0  1 -1  0 -3\n\n\nNaja, ok.\n\n\nMit einem eigenen Lexikon\nBeispiel vom Autor des Pakets:\n\nmy_text &lt;- \"I love when I see something beautiful.  I hate it when ugly feelings creep into my head.\"\nchar_v &lt;- get_sentences(my_text)\nmethod &lt;- \"custom\"\ncustom_lexicon &lt;- data.frame(word=c(\"love\", \"hate\", \"beautiful\", \"ugly\"), value=c(1,-1,1, -1))\nmy_custom_values &lt;- get_sentiment(char_v, method = method, lexicon = custom_lexicon)\nmy_custom_values\n\n[1]  2 -2\n\n\n\nget_sentiment(text,\n              method = \"custom\",\n              lexicon = sentiws)\n\n[1] -0.0628  0.0000  0.7251  0.0040  0.0000  0.0000  0.0000 -0.3990"
  },
  {
    "objectID": "posts/germeval02/germeval02.html#test",
    "href": "posts/germeval02/germeval02.html#test",
    "title": "germeval02",
    "section": "Test",
    "text": "Test\n\ntic()\nsentiments &lt;-\n  get_sentiment(germeval_train$text,\n              method = \"custom\",\n              lexicon = sentiws)\ntoc()\n\n6.76 sec elapsed\n\n\n\nlength(sentiments)\n\n[1] 5009\n\nhead(sentiments)\n\n[1]  0.1025 -0.3426  0.0000  0.0040 -0.0048 -0.3460\n\n\nDie Geschwindigkeit scheint deutlich besser zu sein, als bei den Regex-Ansätzen."
  },
  {
    "objectID": "posts/germeval02/germeval02.html#als-spalte-in-die-tabelle",
    "href": "posts/germeval02/germeval02.html#als-spalte-in-die-tabelle",
    "title": "germeval02",
    "section": "Als Spalte in die Tabelle",
    "text": "Als Spalte in die Tabelle\n\ntic()\nd &lt;-\n  germeval_train |&gt; \n  mutate(n_emo = get_sentiment(germeval_train$text,\n              method = \"custom\",\n              lexicon = sentiws))\ntoc()\n\n6.635 sec elapsed\n\nhead(d)\n\n# A tibble: 6 × 5\n     id text                                                 c1    c2      n_emo\n  &lt;int&gt; &lt;chr&gt;                                                &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n1     1 @corinnamilborn Liebe Corinna, wir würden dich gern… OTHER OTHER  0.103 \n2     2 @Martin28a Sie haben ja auch Recht. Unser Tweet war… OTHER OTHER -0.343 \n3     3 @ahrens_theo fröhlicher gruß aus der schönsten stad… OTHER OTHER  0     \n4     4 @dushanwegner Amis hätten alles und jeden gewählt..… OTHER OTHER  0.004 \n5     5 @spdde kein verläßlicher Verhandlungspartner. Nachk… OFFE… INSU… -0.0048\n6     6 @Dirki_M Ja, aber wo widersprechen die Zahlen denn … OTHER OTHER -0.346"
  },
  {
    "objectID": "posts/wuerfel06/wuerfel06.html",
    "href": "posts/wuerfel06/wuerfel06.html",
    "title": "wuerfel06",
    "section": "",
    "text": "Aufgabe\nWas ist die Wahrscheinlichkeit, bei 10 Wiederholungen des Werfens zweier Würfel mindestens einen Sechserpasch zu werfen?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nSei \\(A_i\\) das Ereignis “Sechserpach” in der \\(i\\)-ten Wiederholung.\nEs gilt: \\(Pr(A_i) = 1/36\\).\nNennen wir \\(A\\) “keinen Sechserpasch in jeder Wiederholung”, wir suchen die Wahrscheinlichkeit von A.\n“Mindestens einen Sechserpasch” - Das Gegenteil davon ist “keinen Sechserpasch$.\n\\(Pr(\\neg A_i) = 35/36\\).\nNennen wir \\(X\\) eine Zufallsvariable, die die Anzahl der Sechserpasche zählt.\nDie Wiederholungen sind voneinander unabhängig, es gilt also\n\\(Pr(X=0) = Pr(\\neg A) = \\left(\\frac{35}{36} \\right)^{10}\\)\n\nPr_kein_Secherpasch &lt;- (35/36)^10\nPr_kein_Secherpasch\n\n[1] 0.7544934\n\n\nDas Gegenteil (Komplement) von \\(\\neg A\\), also \\(A\\) ist das gesuchte Ereignis.\n\nPr_A &lt;- 1 - Pr_kein_Secherpasch\nPr_A\n\n[1] 0.2455066\n\n\nDie Lösung lautet 0.2455066.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/mariokart-max2/mariokart-max2.html",
    "href": "posts/mariokart-max2/mariokart-max2.html",
    "title": "mariokart-max2",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie die maximale Verkaufspreise (total_pr) für Spiele, die mit 0, 1, 2, … Lenkräder (wheels) gekauft werden. Dieser Kennwert heiße pr_max. Berücksichtigen Sie aber nur neue Spiele. Bilden Sie von pr_max den Mittelwert und geben Sie diesen an.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;-\nd  %&gt;% \n  filter(cond == \"new\") %&gt;% \n  group_by(wheels) %&gt;% \n  summarise(pr_max = max(total_pr)) %&gt;% \n  summarise(pr_max_mean = mean(pr_max))\n\nsolution\n\n# A tibble: 1 × 1\n  pr_max_mean\n        &lt;dbl&gt;\n1        63.2\n\n\nLösung: 63.17.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nnum"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html",
    "title": "wfsets_penguins02",
    "section": "",
    "text": "Berechnen Sie die Vorhersagegüte (RMSE) für folgende Lernalgorithmen:\n\nlineares Modell\nknn (neighbors: tune)\n\nModellgleichung: body_mass_g ~ bill_length_mm, data = d_train.\nTunen Sie bei neighbors folgende Werte: 5, 10, 15, 20, 35, 30 und betrachten Sie deren Modellgüte.\nNutzen Sie minimale Vorverarbeitung.\nBerichten Sie die den RSME."
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#setup",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#setup",
    "title": "wfsets_penguins02",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\nlibrary(tidyverse)\ndata(penguins, package = \"palmerpenguins\")"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#daten",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#daten",
    "title": "wfsets_penguins02",
    "section": "Daten",
    "text": "Daten\n\nd &lt;-\n  penguins %&gt;% \n  drop_na()\n\n\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#modelle",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#modelle",
    "title": "wfsets_penguins02",
    "section": "Modelle",
    "text": "Modelle\nLineares Modell:\n\nmod_lin &lt;- linear_reg()\n\nmod_knn &lt;- nearest_neighbor(mode = \"regression\",\n                                  neighbors = tune())"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#rezepte",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#rezepte",
    "title": "wfsets_penguins02",
    "section": "Rezepte",
    "text": "Rezepte\n\nrec_basic &lt;- recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n         step_normalize(all_predictors())\n\nrec_basic"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#resampling",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#resampling",
    "title": "wfsets_penguins02",
    "section": "Resampling",
    "text": "Resampling\n\nrsmpls &lt;- vfold_cv(d_train)"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#workflow-set",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#workflow-set",
    "title": "wfsets_penguins02",
    "section": "Workflow Set",
    "text": "Workflow Set\n\nwf_set &lt;-\n  workflow_set(\n    preproc = list(rec_simple = rec_basic),\n    models = list(mod_lm = mod_lin,\n                  mod_nn = mod_knn)\n  )\n\nwf_set\n\n# A workflow set/tibble: 2 × 4\n  wflow_id          info             option    result    \n  &lt;chr&gt;             &lt;list&gt;           &lt;list&gt;    &lt;list&gt;    \n1 rec_simple_mod_lm &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n2 rec_simple_mod_nn &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#tuningparameter-werte-bestimmen",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#tuningparameter-werte-bestimmen",
    "title": "wfsets_penguins02",
    "section": "Tuningparameter-Werte bestimmen",
    "text": "Tuningparameter-Werte bestimmen\nWelche Tuningparameter hatten wir noch mal ausgewiesen?\n\nmod_knn %&gt;% \n  extract_parameter_set_dials()\n\nCollection of 1 parameters for tuning\n\n identifier      type    object\n  neighbors neighbors nparam[+]\n\n\nUpdaten wir die Parameter mit unseren Werten, also min. 5 Nachbarn und max. 20 Nachbarn.\n\nparams_knn &lt;- \nmod_knn %&gt;% \n  extract_parameter_set_dials() %&gt;% \n  update(neighbors = neighbors(c(5, 20)))\n\nparams_knn\n\nCollection of 1 parameters for tuning\n\n identifier      type    object\n  neighbors neighbors nparam[+]\n\n\nDiese Infos ergänzen wir jetzt in das Workflow-Set-Objekt für den Workflow mit der ID “rec_simple_mod_nn” unter der Spalte “Options”:\n\nwf_set &lt;- \nwf_set %&gt;% \n  option_add(param_info = params_knn, id = \"rec_simple_mod_nn\")  \n\nwf_set\n\n# A workflow set/tibble: 2 × 4\n  wflow_id          info             option    result    \n  &lt;chr&gt;             &lt;list&gt;           &lt;list&gt;    &lt;list&gt;    \n1 rec_simple_mod_lm &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n2 rec_simple_mod_nn &lt;tibble [1 × 4]&gt; &lt;opts[1]&gt; &lt;list [0]&gt;"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#fitten",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#fitten",
    "title": "wfsets_penguins02",
    "section": "Fitten",
    "text": "Fitten\n\nwf_set_fit &lt;-\n  wf_set %&gt;% \n  workflow_map(resamples = rsmpls)\n\nwf_set_fit\n\n# A workflow set/tibble: 2 × 4\n  wflow_id          info             option    result   \n  &lt;chr&gt;             &lt;list&gt;           &lt;list&gt;    &lt;list&gt;   \n1 rec_simple_mod_lm &lt;tibble [1 × 4]&gt; &lt;opts[1]&gt; &lt;rsmp[+]&gt;\n2 rec_simple_mod_nn &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;tune[+]&gt;\n\n\nCheck:\n\nwf_set_fit %&gt;% pluck(\"result\")\n\n[[1]]\n# Resampling results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics         .notes          \n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;           &lt;list&gt;          \n 1 &lt;split [224/25]&gt; Fold01 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [224/25]&gt; Fold02 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [224/25]&gt; Fold03 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [224/25]&gt; Fold04 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [224/25]&gt; Fold05 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [224/25]&gt; Fold06 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [224/25]&gt; Fold07 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [224/25]&gt; Fold08 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [224/25]&gt; Fold09 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [225/24]&gt; Fold10 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\n[[2]]\n# Tuning results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics          .notes          \n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;            &lt;list&gt;          \n 1 &lt;split [224/25]&gt; Fold01 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [224/25]&gt; Fold02 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [224/25]&gt; Fold03 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [224/25]&gt; Fold04 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [224/25]&gt; Fold05 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [224/25]&gt; Fold06 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [224/25]&gt; Fold07 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [224/25]&gt; Fold08 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [224/25]&gt; Fold09 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [225/24]&gt; Fold10 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#bester-kandidat",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#bester-kandidat",
    "title": "wfsets_penguins02",
    "section": "Bester Kandidat",
    "text": "Bester Kandidat\n\nautoplot(wf_set_fit)\n\n\n\n\n\nrank_results(wf_set_fit, rank_metric = \"rmse\") %&gt;% \n  filter(.metric == \"rmse\")\n\n# A tibble: 9 × 9\n  wflow_id          .config .metric  mean std_err     n preprocessor model  rank\n  &lt;chr&gt;             &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;        &lt;chr&gt; &lt;int&gt;\n1 rec_simple_mod_nn Prepro… rmse     645.    23.7    10 recipe       near…     1\n2 rec_simple_mod_lm Prepro… rmse     646.    26.0    10 recipe       line…     2\n3 rec_simple_mod_nn Prepro… rmse     651.    22.4    10 recipe       near…     3\n4 rec_simple_mod_nn Prepro… rmse     653.    22.7    10 recipe       near…     4\n5 rec_simple_mod_nn Prepro… rmse     656.    22.0    10 recipe       near…     5\n6 rec_simple_mod_nn Prepro… rmse     661.    22.4    10 recipe       near…     6\n7 rec_simple_mod_nn Prepro… rmse     670.    23.3    10 recipe       near…     7\n8 rec_simple_mod_nn Prepro… rmse     680.    24.8    10 recipe       near…     8\n9 rec_simple_mod_nn Prepro… rmse     699.    30.9    10 recipe       near…     9\n\n\nAm besten war das lineare Modell, aber schauen wir uns auch mal das knn-Modell an, v.a. um zu wissen, wie man den besten Tuningparameter-Wert sieht:\n\nwf_knn &lt;- \n  extract_workflow_set_result(wf_set_fit, \"rec_simple_mod_nn\")\n\n\nwf_knn %&gt;% autoplot()\n\n\n\n\n\nwf_knn %&gt;% select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 1 × 2\n  neighbors .config             \n      &lt;int&gt; &lt;chr&gt;               \n1        19 Preprocessor1_Model8"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#last-fit",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#last-fit",
    "title": "wfsets_penguins02",
    "section": "Last Fit",
    "text": "Last Fit\n\nbest_wf &lt;-\n  wf_set_fit %&gt;% \n  extract_workflow(\"rec_simple_mod_lm\")\n\nFinalisieren müssen wir diesen Workflow nicht, da er keine Tuningparameter hatte.\n\nfit_final &lt;-\n  best_wf %&gt;% \n  last_fit(d_split)"
  },
  {
    "objectID": "posts/wfsets_penguins02/wfsets_penguins02.html#modellgüte-im-test-set",
    "href": "posts/wfsets_penguins02/wfsets_penguins02.html#modellgüte-im-test-set",
    "title": "wfsets_penguins02",
    "section": "Modellgüte im Test-Set",
    "text": "Modellgüte im Test-Set\n\ncollect_metrics(fit_final)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     670.    Preprocessor1_Model1\n2 rsq     standard       0.369 Preprocessor1_Model1\n\n\n\nCategories:\n\nR\nstatlearning\ntidymodels\nnum"
  },
  {
    "objectID": "posts/Kaefer2/Kaefer2.html",
    "href": "posts/Kaefer2/Kaefer2.html",
    "title": "Kaefer2",
    "section": "",
    "text": "Weltsensation?! Der Insektenforscher Prof. Mügge ist der Meinung, eine bislang unbekannte Käferart entdeckt zu haben. Nach nur 18 Monaten Feldforschung im brasilianischen Regenwald gelang ihm dieser Durchbruch. Wenn es denn nun wirklich eine neue Art ist. Gerade untersucht er ein Exemplar unter dem Mikroskop. Hm, was ist das für ein Tier? 🐛 🔬\nDrei Arten kommen in Frage, \\(A_1, A_2, A_3\\).\nDabei ist die Art \\(A_1\\) sehr verbreitet und schon längst bekannt, \\(A_2\\) ist die neue Art, Exemplare dieser Art sind selten und \\(A_3\\) ist auch bekannt und eher häufig anzutreffen. Allerdings spricht das Aussehen am ehesten für \\(A_2\\), der seltenen Art.\n👉 Aufgabe: Wie groß ist die Wahrscheinlichkeit, dass Prof. Mügge wirklich einen großen Fang gemacht hat und einen unbekannten Käfer entdeckt hat?\nGeben Sie ein 95%-HDI für diese Wahrscheinlichkeit an!\nHier sind die genauen Vorkommenshäufigkeiten:\n\nPr_A1 &lt;- .6\nPr_A2 &lt;- .1\nPr_A3 &lt;- .4\n\nUnd hier die genauen Wahrscheinlichkeiten, wie typisch das beobachtete Objekt für einen Vertreter der jeweiligen Art ist:\n\nL_A1 &lt;- .5\nL_A2 &lt;- .9\nL_A3 &lt;- .4\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/Kaefer2/Kaefer2.html#setup",
    "href": "posts/Kaefer2/Kaefer2.html#setup",
    "title": "Kaefer2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(prada)  # für Funktion `bayesbox`\nlibrary(easystats)\n\n\nbb &lt;- bayesbox(hyps = c(\"A\", \"B\", \"C\"),\n               priors = c(Pr_A1, Pr_A2, Pr_A3),\n               liks = c(L_A1, L_A2, L_A3))\n\nbb\n\n  hyps priors liks post_unstand  post_std\n1    A    0.6  0.5         0.30 0.5454545\n2    B    0.1  0.9         0.09 0.1636364\n3    C    0.4  0.4         0.16 0.2909091\n\n\n\nsamples &lt;-\n  bb %&gt;%  # nimmt die Tabelle mit Posteriori-Daten,\n  slice_sample(  # Ziehe daraus eine Stichprobe,\n    n = 1e4,  # mit insgesamt n=10000 Zeilen,\n    weight_by = post_std,  # Gewichte nach Post-Wskt.,\n    replace = T)  %&gt;%  # Ziehe mit Zurücklegen\n  select(hyps)\n\n\nsamples_count &lt;-\ncount(samples, hyps) |&gt; \n  mutate(prop = n / sum(n))\n\nsamples_count\n\n  hyps    n   prop\n1    A 5421 0.5421\n2    B 1605 0.1605\n3    C 2974 0.2974\n\n\n\nsol &lt;- samples_count$prop[2]\n\nDie Wahrscheinlichkeit, dass der Käfer zur Art “B” gehört, ist relativ klein: 0.1605.\n\nCategories:\n\nR\nbayes\nbayesbox\nnum"
  },
  {
    "objectID": "posts/Wertberechnen2/Wertberechnen2.html",
    "href": "posts/Wertberechnen2/Wertberechnen2.html",
    "title": "Wertberechnen2",
    "section": "",
    "text": "Aufgabe\nWelchen Wert bzw. welches Ergebnis liefert folgende R-Syntax für ergebnis zurück?\nx hat zu Beginn den Wert 8.\nHinweise:\n\nsqrt(x) liefert die (positive) Quadratwurzel von x zurück.\nx^2 liefert die zweite Potenz von x zurück.\n\n         \n\n\nLösung\nEs wird 9 zurückgeliefert.\n\nCategories:\n\nR\ndyn\nnum"
  },
  {
    "objectID": "posts/DAG-Graph/DAG-Graph.html",
    "href": "posts/DAG-Graph/DAG-Graph.html",
    "title": "DAG-Graph",
    "section": "",
    "text": "Aufgabe\nFür ein Forschungsprojekt hat ein Forschungsteam die Frage getestet, ob Personen, die einen animierten Graphen zu Auswirkungen von Stress gesehen haben danach eine höhere Motivation haben, ihr Stresspensum anzugehen, als Personen, die einen statischen Graph gesehen haben. Dazu wurde jeweils in einem Fragebogen die Veränderungsbereitschaft auf das Stressniveau angepasst abgefragt, dann den jeweiligen Graphen gezeigt und danach dieselben Fragen wie davor nochmals gestellt. Die Personen wurden randomisiert den beiden Bedingungen (statisch vs. animiert) zugeordnet. Es handelt sich um ein Between-Group-Design.\nZur Auswertung wurde nun zu jeder der Fragen zur Veränderungsbereitschaft die Mittelwerte der Vor-sehen-des-Graphen-Gruppe von der Nach-sehen-des-Graphen-Gruppe abgezogen und diese Werte dann verglichen von dem animierten und dem statischen Graphen. Dabei konnte der gewünschten Effekt deutlich erkannt werden, hypothesenkonform.\nZeichnen Sie den DAG für dieses Studiendesign\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\n\nlibrary(dagitty)\nlibrary(ggdag)\n\n\nAttaching package: 'ggdag'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(ggplot2)\n\n\nmy_dag &lt;-\n  dagitty(\"dag{g -&gt; mot; u -&gt; mot}\")\n\n\ntidy_dagitty(my_dag)\n\n# A DAG with 3 nodes and 2 edges\n#\n# A tibble: 3 × 8\n  name      x     y direction to     xend  yend circular\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;     &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;   \n1 g     -2.00  1.83 -&gt;        mot   -3.08  1.43 FALSE   \n2 mot   -3.08  1.43 &lt;NA&gt;      &lt;NA&gt;  NA    NA    FALSE   \n3 u     -4.15  1.03 -&gt;        mot   -3.08  1.43 FALSE   \n\n\n\nggdag(my_dag) +\n  theme_dag()\n\n\n\n\nDie AV ist mit mot bezeichnet; die UV mit g (wie Gruppe). u steht für sonstige Einflüsse auf die AV.\n\nCategories:\n\nfopro\nresearchdesign\ncausal\nstring"
  },
  {
    "objectID": "posts/regression1a/regression1a.html",
    "href": "posts/regression1a/regression1a.html",
    "title": "regression1a",
    "section": "",
    "text": "Die folgende Frage bezieht sich auf dieses Ergebnis einer Regressionsanalyse:\n\n\n\nCall:\nlm(formula = y ~ x, data = d)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-5.295 -1.138  0.202  0.998  4.528 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)    0.367      0.303    1.21     0.23\nx              0.326      0.389    0.84     0.41\n\nResidual standard error: 2 on 50 degrees of freedom\nMultiple R-squared:  0.0138,    Adjusted R-squared:  -0.0059 \nF-statistic: 0.701 on 1 and 50 DF,  p-value: 0.406\n\n\nWelche der folgenden Aussagen passt am besten?\n\n\n\nWenn x=2, dann ist ein Mittelwert von y in Höhe von ca. 1.02 zu erwarten.\nDer Mittelwert der abhängigen Variaben y sinkt mit zunehmenden x.\nWenn x um 1 Einheit steigt, dann kann eine Veränderung um etwa 0.37 Einheiten in y erwartet werden (nicht kausal zu verstehen).\nWenn x=0, dann ist ein Mittelwert von y in Höhe von etwa 0.69 zu erwarten.\nWenn x=1, dann ist ein Mittelwert von y in Höhe von ca. 0.37 zu erwarten."
  },
  {
    "objectID": "posts/regression1a/regression1a.html#answerlist",
    "href": "posts/regression1a/regression1a.html#answerlist",
    "title": "regression1a",
    "section": "",
    "text": "Wenn x=2, dann ist ein Mittelwert von y in Höhe von ca. 1.02 zu erwarten.\nDer Mittelwert der abhängigen Variaben y sinkt mit zunehmenden x.\nWenn x um 1 Einheit steigt, dann kann eine Veränderung um etwa 0.37 Einheiten in y erwartet werden (nicht kausal zu verstehen).\nWenn x=0, dann ist ein Mittelwert von y in Höhe von etwa 0.69 zu erwarten.\nWenn x=1, dann ist ein Mittelwert von y in Höhe von ca. 0.37 zu erwarten."
  },
  {
    "objectID": "posts/regression1a/regression1a.html#answerlist-1",
    "href": "posts/regression1a/regression1a.html#answerlist-1",
    "title": "regression1a",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nregression\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/iq04/iq04.html",
    "href": "posts/iq04/iq04.html",
    "title": "iq04",
    "section": "",
    "text": "Aufgabe\nIntelligenz wird häufig mittels einem IQ-Test ermittelt.\nWie intelligent muss man sein, um zu den schlauesten 2% Personen in der Allgemeinbevölkerung zu gehören?\nHinweise:\n\nNutzen Sie Simulationsmethoden.\nGehen Sie von folgender IQ-Verteilung aus: \\(IQ \\sim N(100,15)\\).\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nSimulieren Sie \\(n=10^3\\) Stichproben.\nNutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten).\nGeben Sie keine Prozentzahlen, sondern stets Anteile an.\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\nWir simulieren die Daten:\n\nset.seed(42)\nd &lt;- tibble(\n  id = 1:10^3,\n  iq = rnorm(n = 10^3, mean = 100, sd = 15))\n\nWir filtern die schlauesten 2 Prozent:\n\nsolution_d &lt;- \n  d %&gt;% \n  arrange(iq) %&gt;% \n  slice_tail(prop = 0.02) %&gt;%  # schneide \"hinten an der Tabelle\" einen Anteil (prop) von 0.02 (2%) ab\n  summarise(min(iq))  # was ist der kleinste Wert in diesen 2%?\n\nsolution_d\n\n# A tibble: 1 × 1\n  `min(iq)`\n      &lt;dbl&gt;\n1      130.\n\n\nDie Syntax auf Deutsch übersetzt:\nDefiniere solution_d wie folgt:\nnimm die Tabelle d und dann ...\nsortiere (aufsteigend) die Spalte iq und dann ...\nschneide hinten (\"am Schwanz\") einen Anteil von 2% ab und dann ...\nfasse diese Liste an Werten zusammen zu ihrem Minimum (also dem kleinsten Wert).\nAlternativ könnte man schreiben:\n\nsolution &lt;- \n  d %&gt;% \n  summarise(iq_top_2komma3_prozent = quantile(iq, prob = .98))\n\nsolution\n\n# A tibble: 1 × 1\n  iq_top_2komma3_prozent\n                   &lt;dbl&gt;\n1                   130.\n\n\nLösung: 130.2767958.\n\nCategories:\n\nprobability\nsimulation\nnormal-distribution\nnum"
  },
  {
    "objectID": "posts/mariokart-korr4/mariokart-korr4.html",
    "href": "posts/mariokart-korr4/mariokart-korr4.html",
    "title": "mariokart-korr4",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie den mittleren Verkaufspreis (total_pr) für Spiele, die sowohl neu sind oder über Lenkräder (wheels) verfügen.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;-\nd  %&gt;% \n  filter(cond == \"new\" | wheels &gt; 0) %&gt;% \n  summarise(pr_corr = cor(total_pr, start_pr))\n\nsolution\n\n     pr_corr\n1 0.04725486\n\n\nAlternativ kann man (komfortabel) die Korrelation z.B. so berechnen:\n\nd %&gt;% \n  select(start_pr, total_pr, cond, wheels) %&gt;% \n  filter(cond == \"new\" | wheels &gt; 0) %&gt;% \n  correlation()\n\n# Correlation Matrix (pearson-method)\n\nParameter1 | Parameter2 |    r |        95% CI | t(108) |       p\n-----------------------------------------------------------------\nstart_pr   |   total_pr | 0.05 | [-0.14, 0.23] |   0.49 | 0.762  \nstart_pr   |     wheels | 0.08 | [-0.10, 0.27] |   0.88 | 0.762  \ntotal_pr   |     wheels | 0.28 | [ 0.10, 0.45] |   3.09 | 0.008**\n\np-value adjustment method: Holm (1979)\nObservations: 110\n\n\nLösung: 0.0.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nassociation\nnum"
  },
  {
    "objectID": "posts/wuerfel01/wuerfel01.html",
    "href": "posts/wuerfel01/wuerfel01.html",
    "title": "wuerfel01",
    "section": "",
    "text": "Wie hoch ist die Wahrscheinlichkeit, mit zwei fairen Würfeln genau 10 Augen zu werfen?\nHinweise:\n\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nRunden Sie auf zwei Dezimalstellen.\nFixieren Sie die Zufallszahlen auf den Startwert 42.\nMit expand_grid können Sie komfortabel alle 36 Ereignisse dieses Zufallsexperiments in einen Dataframe bringen.\n\nWählen Sie die am besten passende Option:\n\n\n\n.04\n.08\n.12\n.16\n.20"
  },
  {
    "objectID": "posts/wuerfel01/wuerfel01.html#answerlist",
    "href": "posts/wuerfel01/wuerfel01.html#answerlist",
    "title": "wuerfel01",
    "section": "",
    "text": ".04\n.08\n.12\n.16\n.20"
  },
  {
    "objectID": "posts/wuerfel01/wuerfel01.html#answerlist-1",
    "href": "posts/wuerfel01/wuerfel01.html#answerlist-1",
    "title": "wuerfel01",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch.\nWahr.\nFalsch.\nFalsch.\nFalsch.\n\n\nCategories:\n\nprobability\ndice\nexam-22"
  },
  {
    "objectID": "posts/Def-Statistik01/Def-Statistik01.html",
    "href": "posts/Def-Statistik01/Def-Statistik01.html",
    "title": "Def-Statistik01",
    "section": "",
    "text": "Welche Definition von Statistik passt am besten?\n\n\n\nStatistik fasst Daten zusammen.\nStatistik vervielfacht Daten.\nStatistik fasst Daten zusammen, um wesentliche Informationen den Daten zu entnehmen .\nStatistik fasst Daten zusammen, um wesentliche Informationen den Daten zu entnehmen und beschreibt die Ungewissheit unserer Schlüsse."
  },
  {
    "objectID": "posts/Def-Statistik01/Def-Statistik01.html#answerlist",
    "href": "posts/Def-Statistik01/Def-Statistik01.html#answerlist",
    "title": "Def-Statistik01",
    "section": "",
    "text": "Statistik fasst Daten zusammen.\nStatistik vervielfacht Daten.\nStatistik fasst Daten zusammen, um wesentliche Informationen den Daten zu entnehmen .\nStatistik fasst Daten zusammen, um wesentliche Informationen den Daten zu entnehmen und beschreibt die Ungewissheit unserer Schlüsse."
  },
  {
    "objectID": "posts/Def-Statistik01/Def-Statistik01.html#answerlist-1",
    "href": "posts/Def-Statistik01/Def-Statistik01.html#answerlist-1",
    "title": "Def-Statistik01",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nWahr\n\n\nCategories:\nschoice"
  },
  {
    "objectID": "posts/Gem-Wskt3/Gem-Wskt3.html",
    "href": "posts/Gem-Wskt3/Gem-Wskt3.html",
    "title": "Gem-Wskt3",
    "section": "",
    "text": "Aufgabe\nEin renommiertes Unternehmen sucht ei Kandidati (m/w/d) für eine (hoch dotierte) Führungsposition. Das könnten Sie sein. Ein Managementberatungsunternehmung führt ein Assessmentcenter durch, welches pro Kandidati eine positive bzw. negative Empfehlung ergibt. Aus früheren Erfahrungen heraus wissen die Berater, dass die tatsächlich geeigneten Kandidaten (Ereignis \\(E\\) wie eligible) mit \\(70\\%\\) eine positive Empfehlung für die Stelle ausgesprochen bekommen (Ereignis \\(R\\) wie recommendation). Weiterhin bekommen von den nicht geeigneten Kandidaten \\(73\\%\\) eine negative Empfehlung. Insgesamt wissen die Berater, dass \\(13\\%\\) der Bewerber/innen tatsächlich geeignet sind.\nGeben Sie den Wert folgender Kenngröße aus der entsprechenden Kontingenztabelle an: \\(\\overline{E} \\cap \\overline{R}\\)!\nHinweise:\n\n\\(\\overline{R}=R^C= \\neg R\\) (logische Verneinung).\n\\(\\cap\\) meint das logische “Und”.\nGeben Sie Wahrscheinlichkeiten nicht als Prozentzahlen, sondern als Anteile an.\nRunden Sie auf zwei Dezimalstellen.\nAchten Sie darauf, das richtige Dezimaltrennzeichen Ihres Systems zu verwenden.\n\n         \n\n\nLösung\nEinige Wahrscheinlichkeiten lassen sich direkt aus dem Text errechnen:\n\\(P(E \\cap R) = P(R | E) \\cdot P(E) = 0.7 \\cdot 0.13 = 0.091 = 9.1\\%\\)\n\\(P(\\overline{E} \\cap \\overline{R}) =  P(\\overline{R} | \\overline{E}) \\cdot P(\\overline{E}) = 0.73 \\cdot 0.87 = 0.6351 = 63.51\\%\\)\nDie restlichen gemeinsamen Wahrscheinlichkeiten lassen sich durch Addieren und Subtrahieren in der Kontingenztabelle errechnen:\n\n\n\n\n\n\n\n\n\n\n\\(R\\)\n\\(\\overline{R}\\)\nSumme\n\n\n\n\n\\(E\\)\n9.10\n3.90\n13.00\n\n\n\\(\\overline{E}\\)\n23.49\n63.51\n87.00\n\n\nSumme\n32.59\n67.41\n100.00\n\n\n\nLösung: Der gesuchte Wert lautet: 0.64.\n\nCategories:\n\nprobability\ndyn\nbayes\nnum"
  },
  {
    "objectID": "posts/iq05/iq05.html",
    "href": "posts/iq05/iq05.html",
    "title": "iq05",
    "section": "",
    "text": "Aufgabe\nIntelligenz wird häufig mittels einem IQ-Test ermittelt.\nWie intelligent muss man sein, um zu den schlauesten Promill der Bevölkerung zu gehören?\nHinweise:\n\nNutzen Sie Simulationsmethoden.\nGehen Sie von folgender IQ-Verteilung aus: \\(IQ \\sim N(100,15)\\)\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nSimulieren Sie \\(n=10^5\\) Stichproben.\nNutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten)\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\nWir simulieren die Daten:\n\nset.seed(42)\nd &lt;- tibble(\n  id = 1:10^5,\n  iq = rnorm(n = 10^5, mean = 100, sd= 15))\n\nWir filtern die schlauesten 0,1 Prozent:\n\nd %&gt;% \n  summarise(iq_top_0komma1_prozent = quantile(iq, prob = .999))\n\n# A tibble: 1 × 1\n  iq_top_0komma1_prozent\n                   &lt;dbl&gt;\n1                   146.\n\n\nMan muss mindestens über einen IQ von ca. 145 verfügen.\nAchtung: Das sind immer Zahlen als der “kleinen Welt” des Modells. Sollten unsere Annahmen nicht stimmen (normalverteilt mit MW 100 und SD 15), dann stimmt natürlich unser Ergebnis auch nicht.\nOb unsere Annahmen stimmen, kann der Computer nicht sagen. Das ist weiterhin Menschenjob.\n\nCategories:\n\nprobability\nsimulation\nnormal-distribution\nnum"
  },
  {
    "objectID": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html",
    "href": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html",
    "title": "Flex-vs-nichtflex-Methode",
    "section": "",
    "text": "Algorithmen des statistischen Lernens lassen sich unterteilen hinsichtlich ihrer Flexibilität; es gibt mehr bzw. weniger flexible Algorithmen.\nWelche der folgenden Aussagen ist in diesem Zusammenhang korrekt?\n\n\n\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine geringere Verzerrung (bias).\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine höhere Verzerrung (bias).\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine kleinere Varianz.\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine kleinere Varianz und eine höhere Verzerrung.\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine höhere Varianz und eine höhere Verzerrung."
  },
  {
    "objectID": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html#answerlist",
    "href": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html#answerlist",
    "title": "Flex-vs-nichtflex-Methode",
    "section": "",
    "text": "Bei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine geringere Verzerrung (bias).\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine höhere Verzerrung (bias).\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine kleinere Varianz.\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine kleinere Varianz und eine höhere Verzerrung.\nBei großer Stichprobe (\\(n\\)) und kleiner Zahl an Prädiktoren (\\(p\\)) haben flexible Algorithmen im Vergleich zu weniger flexiblen Methoden eine höhere Varianz und eine höhere Verzerrung."
  },
  {
    "objectID": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html#answerlist-1",
    "href": "posts/Flex-vs-nichtflex-Methode/Flex-vs-nichtflex-Methode.html#answerlist-1",
    "title": "Flex-vs-nichtflex-Methode",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nstatlearning\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/modellguete-testset/modellguete-testset.html",
    "href": "posts/modellguete-testset/modellguete-testset.html",
    "title": "modellguete-testset",
    "section": "",
    "text": "Berechnen Sie die Modellgüte (RMSE) im Test-Sample.\nGehen Sie von folgenden Annahmen aus.\n\nDieses Test-Sample\nAV: count\nDieses Train-Sample\nGehen Sie als Vorhersage vom Mittelwert der AV im Train-Sample aus (für alle Beobachtungen im Test-Sample).\n\nHinweise:\n\nHier finden Sie ein Data-Dictionary.\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks."
  },
  {
    "objectID": "posts/modellguete-testset/modellguete-testset.html#setup",
    "href": "posts/modellguete-testset/modellguete-testset.html#setup",
    "title": "modellguete-testset",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\n\n\nd_train &lt;- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_train.csv\")\nd_test &lt;- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_control.csv\")"
  },
  {
    "objectID": "posts/modellguete-testset/modellguete-testset.html#mittelwert-der-av-im-train-sample-berechnen",
    "href": "posts/modellguete-testset/modellguete-testset.html#mittelwert-der-av-im-train-sample-berechnen",
    "title": "modellguete-testset",
    "section": "Mittelwert der AV im Train-Sample berechnen",
    "text": "Mittelwert der AV im Train-Sample berechnen\n\nmean_count_train_sample &lt;- \n  d_train |&gt; \n  summarise(count_avg = mean(count))\n\nmean_count_train_sample\n\n  count_avg\n1  703.7913\n\n\n\nd_test &lt;-\n  d_test |&gt; \n  mutate(pred = 704)\n\nAnstelle von 704 könnten Sie auch Ihre eigenen Vorhersagen Ihrer Modelle einsetzen, etwa:\n\nd_test &lt;-\n  d_test |&gt; \n  mutate(pred = meine_vorhersagen)"
  },
  {
    "objectID": "posts/modellguete-testset/modellguete-testset.html#modellgüte-im-test-sample-berechnen",
    "href": "posts/modellguete-testset/modellguete-testset.html#modellgüte-im-test-sample-berechnen",
    "title": "modellguete-testset",
    "section": "Modellgüte im Test-Sample berechnen",
    "text": "Modellgüte im Test-Sample berechnen\n\nd_test |&gt; \n  rmse(truth = count,\n       estimate = pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rmse    standard        646.\n\n\nFür R-Quadrat geht das analog:\n\nd_test |&gt; \n  rsq(truth = count,\n       estimate = pred)\n\nWarning: A correlation computation is required, but `estimate` is constant and\nhas 0 standard deviation, resulting in a divide by 0 error. `NA` will be\nreturned.\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 rsq     standard          NA\n\n\nLeider ist das R-Quadrat in diesem Fall (per Definition) Null: Der Mittelwert als Vorhersagewert ist was “R-Quadrat gleich Null” meint.\n(Darüber hinaus wird das R-Quadrat hier auf Basis der Korrelation berechnet, und wir haben einen konstanten Wert bei pred).\n\nCategories:\n\nregression\nmodelling\nperformance\nrmse\nstring"
  },
  {
    "objectID": "posts/lm1/lm1.html",
    "href": "posts/lm1/lm1.html",
    "title": "lm1",
    "section": "",
    "text": "Laden Sie den Datensatz mtcars aus dieser Quelle.\nBerechnen Sie eine Regression mit mpg als Ausgabevariable und hp als Eingabevariable!\nWelche Aussage ist für diese Analyse richtig?\n\n\n\nmpg und hp sind positiv korreliert laut dem Modell.\nDer Achsenabschnitt ist nahe Null.\nDie Analyse beinhaltet einen nominal skalierten Prädiktor.\nDas geschätzte Betagewicht für hp liegt bei 30.099.\nDas geschätzte Betagewicht für hp liegt bei -0.068."
  },
  {
    "objectID": "posts/lm1/lm1.html#answerlist",
    "href": "posts/lm1/lm1.html#answerlist",
    "title": "lm1",
    "section": "",
    "text": "mpg und hp sind positiv korreliert laut dem Modell.\nDer Achsenabschnitt ist nahe Null.\nDie Analyse beinhaltet einen nominal skalierten Prädiktor.\nDas geschätzte Betagewicht für hp liegt bei 30.099.\nDas geschätzte Betagewicht für hp liegt bei -0.068."
  },
  {
    "objectID": "posts/lm1/lm1.html#answerlist-1",
    "href": "posts/lm1/lm1.html#answerlist-1",
    "title": "lm1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nFalsch\nRichtig\n\n\nCategories:\n\nregression\nlm\nstats-nutshell\nschoice"
  },
  {
    "objectID": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html",
    "href": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html",
    "title": "Wertzuweisen_mc",
    "section": "",
    "text": "Question"
  },
  {
    "objectID": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html#answerlist",
    "href": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html#answerlist",
    "title": "Wertzuweisen_mc",
    "section": "Answerlist",
    "text": "Answerlist\n\nloesung &lt;-42\nloesung &lt; - 42\nloesung-&gt;42\nloesung==42\nloesung&lt;-\"42\""
  },
  {
    "objectID": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html#answerlist-1",
    "href": "posts/Wertzuweisen_mc/Wertzuweisen_mc.html#answerlist-1",
    "title": "Wertzuweisen_mc",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nR\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/tidy1/tidy1.html",
    "href": "posts/tidy1/tidy1.html",
    "title": "tidy1",
    "section": "",
    "text": "Das Konzept von “tidy” Daten (“Tidyformat”) spielt in der Datenanalyse eine wichtige Rolle.\nBetrachten Sie die Tabellen im Folgenden. Welche ist “tidy”?\nHinweise:\n\nAlle Variablen sollen nicht konstant sein, also mehr als einen uniquen Wert aufweisen.\nAlle Variablen sollen keine fehlenden Werte aufweisen, also komplett sein.\nAlle Variablen sollen numerisch sein.\n\nTabelle A:\n\n\n\n\n\n\n\n\nTabelle A\n\n\ngroup\ny\nid1\nid2\n\n\n\n\n1\n10\n1\n2\n\n\n2\n20\n2\n2\n\n\n1\n30\n3\n2\n\n\n2\n40\n4\n2\n\n\n\n\n\n\n\nTabelle B:\n\n\n\n\n\n\n\n\nTabelle B\n\n\ngroup\ny\nid1\nid2\n\n\n\n\n1\n10\n1\nA\n\n\n2\n20\n2\nB\n\n\n1\n30\n3\nC\n\n\n2\n40\n4\nD\n\n\n\n\n\n\n\nTabelle C:\n\n\n\n\n\n\n\n\nTabelle C\n\n\ngroup\ny\nid1\nid2\n\n\n\n\n1\n10\n1\nid2\n\n\n2\n20\n2\nid2\n\n\n1\n30\n3\n1,2\n\n\n2\n40\n4\nid2\n\n\n\n\n\n\n\nTabelle D:\n\n\n\n\n\n\n\n\nTabelle D\n\n\ngroup\ny\nid1\nid2\n\n\n\n\n1\n10\n1\n1\n\n\n2\n20\n2\n1\n\n\n1\n30\n3\n2\n\n\n2\n40\n4\n2\n\n\n\n\n\n\n\nTabelle E:\n\n\n\n\n\n\n\n\nTabelle E\n\n\ngroup\n\ny\nid1\nid2\n\n\n\n\n1\nNA\n10\n1\n1\n\n\n2\nNA\n20\n2\n1\n\n\n1\nNA\n30\n3\n2\n\n\n2\nNA\n40\n4\n2\n\n\n\n\n\n\n\n\n\n\nTabelle A\nTabelle B\nTabelle C\nTabelle D\nTabelle E"
  },
  {
    "objectID": "posts/tidy1/tidy1.html#answerlist",
    "href": "posts/tidy1/tidy1.html#answerlist",
    "title": "tidy1",
    "section": "",
    "text": "Tabelle A\nTabelle B\nTabelle C\nTabelle D\nTabelle E"
  },
  {
    "objectID": "posts/tidy1/tidy1.html#answerlist-1",
    "href": "posts/tidy1/tidy1.html#answerlist-1",
    "title": "tidy1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Eine Spalte soll nicht aus einem uniquen Wert bestehen.\nFalsch. Alle Werte sollen numerisch sein\nFalsch. Die Spalte id2weißt einen nicht erlaubten Wert auf.\nRichtig. Das ist ein ‘tidy Tibble’.\nFalsch. In einem Tidy-Tibble darf keine leere Spalte vorkommen.\n\n\nCategories:\n\ntidy\ndatawrangling\nschoice"
  },
  {
    "objectID": "posts/tidymodels-ames-04/tidymodels-ames-04.html",
    "href": "posts/tidymodels-ames-04/tidymodels-ames-04.html",
    "title": "tidymodels-ames-04",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein lineares Modell mit tidymodels und zwar anhand des ames Datensatzes.\nModellgleichung: Sale_Price ~ Gr_Liv_Area, data = ames.\nBerechnen Sie ein multiplikatives (exponenzielles) Modell.\nGesucht ist R-Quadrat als Maß für die Modellgüte im TEST-Sample.\nHinweise:\n\nFixieren Sie die Zufallszahlen auf den Startwert 42.\nVerwenden Sie die Funktion last_fit.\n\n         \n\n\nLösung\n\nlibrary(tidymodels)\ndata(ames)\n\nMultiplikatives Modell:\n\names &lt;- \n  ames %&gt;% \n  mutate(Sale_Price = log10(Sale_Price)) %&gt;% \n  select(Sale_Price, Gr_Liv_Area)\n\nNicht vergessen: AV-Transformation in beiden Samples!\nDatensatz aufteilen:\n\nset.seed(42)\names_split &lt;- initial_split(ames, prop = 0.80, strata = Sale_Price)\names_train &lt;- training(ames_split)\names_test  &lt;-  testing(ames_split)\n\nModell definieren:\n\nm1 &lt;-\n  linear_reg() # engine ist \"lm\" im Default\n\nRezept definieren:\n\nrec1 &lt;- \n  recipe(Sale_Price ~ Gr_Liv_Area, data = ames) \n\nVorhersagen mit last_fit:\n\nfit1_last &lt;- last_fit(object = m1, preprocessor = rec1, split = ames_split)  \nfit1_last\n\n# Resampling results\n# Manual resampling \n# A tibble: 1 × 6\n  splits             id               .metrics .notes   .predictions .workflow \n  &lt;list&gt;             &lt;chr&gt;            &lt;list&gt;   &lt;list&gt;   &lt;list&gt;       &lt;list&gt;    \n1 &lt;split [2342/588]&gt; train/test split &lt;tibble&gt; &lt;tibble&gt; &lt;tibble&gt;     &lt;workflow&gt;\n\n\nWir bekommen ein Objekt, in dem Fit, Modellgüte, Vorhersagen und Hinweise enthalten sind.\nOhne Rezept lässt sich last_fit nicht anwenden.\nVorhersagen:\n\nfit1_last %&gt;% collect_predictions() %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  id               .pred  .row Sale_Price .config             \n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt;      &lt;dbl&gt; &lt;chr&gt;               \n1 train/test split  5.07     2       5.02 Preprocessor1_Model1\n2 train/test split  5.18     3       5.24 Preprocessor1_Model1\n3 train/test split  5.31    18       5.60 Preprocessor1_Model1\n4 train/test split  5.11    26       5.15 Preprocessor1_Model1\n5 train/test split  5.18    29       5.26 Preprocessor1_Model1\n6 train/test split  5.10    30       4.98 Preprocessor1_Model1\n\n\nModellgüte im Test-Sample:\n\nfit1_last %&gt;% collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       0.118 Preprocessor1_Model1\n2 rsq     standard       0.517 Preprocessor1_Model1\n\n\nR-Quadrat:\n\nsol &lt;- 0.517\nsol\n\n[1] 0.517\n\n\n\nCategories:\n\nds1\ntidymodels\nprediction\nyacsda\nstatlearning\nnum"
  },
  {
    "objectID": "posts/Bed-Wskt2/Bed-Wskt2.html",
    "href": "posts/Bed-Wskt2/Bed-Wskt2.html",
    "title": "Bed-Wskt2",
    "section": "",
    "text": "Als Bildungsforscher(in) untersuchen Sie den Lernerfolg in einem Statistikkurs.\nEine Gruppe von Studierenden absolviert einen Statistikkurs. Ein Teil lernt gut mit (Ereignis \\(A\\)), ein Teil nicht (Ereignis \\(A^C\\)). Ein Teil besteht die Prüfung (Ereignis \\(B\\)); ein Teil nicht (\\(B^C\\)).\n(Eselsbrücke: Das Ereignis “A” steht für “Ah, hat Aufgepasst.)\nHinweis: Das Gegenereignis zum Ereignis \\(A\\) wird oft das Komplementärereignis oder kurz Komplement von \\(A\\) genannt und mit \\(A^C\\) bezeichnet.\nWir ziehen zufällig eine/n Studierende/n: Siehe da – Die Person hat bestanden. Yeah!\nAufgabe: Gesucht ist die Wahrscheinlichkeit, dass diese Person gut mitgelernt hat, gegeben der Tatsache, dass dieser Person bestanden hat.\nDie Anteile der Gruppen (bzw. Wahrscheinlichkeit des Ereignisses) lassen sich unten stehender Tabelle entnehmen.\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(c(B, Bneg), sprintf, fmt = \"%.2f\")`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n\n\n\n\n\nrow_ids\nB\nBneg\n\n\n\n\nA\n0.40\n0.48\n\n\nAneg\n0.11\n0.01\n\n\n\n\n\n\nHinweise:\n\nRunden Sie auf 2 Dezimalstellen.\nGeben Sie Anteile stets in der Form 0.42 an (mit führender Null und Dezimalzeichen).\n“Aneg” bezieht sich auf das Komplementärereignis zu A.\n\n\n\n\nZeichnen Sie (per Hand) ein Baumdiagramm, um die gemeinsamen Wahrscheinlichkeiten darzustellen. Weiterhin sollen die Randwahrscheinlichkeiten für \\(A\\) dargestellt sein.\nZeichnen Sie (per Hand) ein Baumdiagramm, um diesen Sachverhalt darzustellen.\nGeben Sie die Wahrscheinlichkeit des gesuchten Ereignisses an."
  },
  {
    "objectID": "posts/Bed-Wskt2/Bed-Wskt2.html#answerlist",
    "href": "posts/Bed-Wskt2/Bed-Wskt2.html#answerlist",
    "title": "Bed-Wskt2",
    "section": "",
    "text": "Zeichnen Sie (per Hand) ein Baumdiagramm, um die gemeinsamen Wahrscheinlichkeiten darzustellen. Weiterhin sollen die Randwahrscheinlichkeiten für \\(A\\) dargestellt sein.\nZeichnen Sie (per Hand) ein Baumdiagramm, um diesen Sachverhalt darzustellen.\nGeben Sie die Wahrscheinlichkeit des gesuchten Ereignisses an."
  },
  {
    "objectID": "posts/Regression2/Regression2.html",
    "href": "posts/Regression2/Regression2.html",
    "title": "Regression2",
    "section": "",
    "text": "Ein Streudiagramm von \\(x\\) und \\(y\\) ergibt folgende Abbildung:\n\n\n\n\n\nWählen Sie das am besten passende Modell aus der Liste aus!\n\n\n\n\\(y = 40 + 10 \\cdot x + \\epsilon\\)\n\\(y = 40 + -10 \\cdot x + \\epsilon\\)\n\\(y = -40 + 10 \\cdot x + \\epsilon\\)\n\\(y = -40 + -10 \\cdot x + \\epsilon\\)\n\\(y = 0 + -40 \\cdot x + \\epsilon\\)"
  },
  {
    "objectID": "posts/Regression2/Regression2.html#answerlist",
    "href": "posts/Regression2/Regression2.html#answerlist",
    "title": "Regression2",
    "section": "",
    "text": "\\(y = 40 + 10 \\cdot x + \\epsilon\\)\n\\(y = 40 + -10 \\cdot x + \\epsilon\\)\n\\(y = -40 + 10 \\cdot x + \\epsilon\\)\n\\(y = -40 + -10 \\cdot x + \\epsilon\\)\n\\(y = 0 + -40 \\cdot x + \\epsilon\\)"
  },
  {
    "objectID": "posts/Regression2/Regression2.html#answerlist-1",
    "href": "posts/Regression2/Regression2.html#answerlist-1",
    "title": "Regression2",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nRichtig\nFalsch\nFalsch\n\n\nCategories:\n\nregression\ndyn"
  },
  {
    "objectID": "posts/sd-vergleich/sd-vergleich.html",
    "href": "posts/sd-vergleich/sd-vergleich.html",
    "title": "sd-vergleich",
    "section": "",
    "text": "Welches der folgenden Diagramm hat die größte Streuung, gemessen in Standardabweichung (sd, sigma)?\n\n\n\n\n\n\n\n\nA\nB\nC\nalle gleich\nkeine Antwort möglich"
  },
  {
    "objectID": "posts/sd-vergleich/sd-vergleich.html#answerlist",
    "href": "posts/sd-vergleich/sd-vergleich.html#answerlist",
    "title": "sd-vergleich",
    "section": "",
    "text": "A\nB\nC\nalle gleich\nkeine Antwort möglich"
  },
  {
    "objectID": "posts/sd-vergleich/sd-vergleich.html#answerlist-1",
    "href": "posts/sd-vergleich/sd-vergleich.html#answerlist-1",
    "title": "sd-vergleich",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Dieses Diagramm hat die kleinste Streuung\nFalsch.\nWahr.\nFalsch. Die Streuungen sind unterschiedlich.\nFalsch.\n\n\nCategories:\n\ndatawrangling\neda\ntidyverse\nvis\nvariability\nschoice"
  },
  {
    "objectID": "posts/filter01/filter01.html",
    "href": "posts/filter01/filter01.html",
    "title": "filter01",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\nFiltern Sie alle Spiele, die mehr als 50 Euro kosten (total_pr) erzielt haben und die Versandkosten erheben (ship_pr)!\nGeben Sie die Antwort der Zeilen zurück, die nach dem Filtern im Datensatz verbleiben!\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nFiltern:\n\nmariokart2 &lt;- filter(mariokart, total_pr &gt; 50.00 & ship_pr &gt; 0)  # R bentzt Dezimalpunkt\n\nDie Lösung lautet: 32 Zeilen verbleiben im Datensatz nach dem Filtern.\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nnum"
  },
  {
    "objectID": "posts/wrangle1/wrangle1.html",
    "href": "posts/wrangle1/wrangle1.html",
    "title": "wrangle1",
    "section": "",
    "text": "Welche der folgenden Spalte ist nicht Teil des Datensatzes flights aus dem R-Paket nycflights13?\nAlternativ können Sie den Datensatz hier beziehen. Hilfe zum Datensatz (Codebook) finden Sie hier.\n\n\n\nyear\nmonth\n\nday\ndep_time\nsched_dep_time\nestimated_dep_time\narr_time\nsched_arr_time"
  },
  {
    "objectID": "posts/wrangle1/wrangle1.html#answerlist",
    "href": "posts/wrangle1/wrangle1.html#answerlist",
    "title": "wrangle1",
    "section": "",
    "text": "year\nmonth\n\nday\ndep_time\nsched_dep_time\nestimated_dep_time\narr_time\nsched_arr_time"
  },
  {
    "objectID": "posts/wrangle1/wrangle1.html#answerlist-1",
    "href": "posts/wrangle1/wrangle1.html#answerlist-1",
    "title": "wrangle1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\n\nFalsch\nFalsch\nFalsch\nWahr\nFalsch\nFalsch\n\n\nCategories:\n\neda\ndatawrangling\ntidyverse\ndplyr\nschoice"
  },
  {
    "objectID": "posts/mtcars-abhaengig_var2/mtcars-abhaengig_var2.html",
    "href": "posts/mtcars-abhaengig_var2/mtcars-abhaengig_var2.html",
    "title": "mtcars-abhaengig_var2",
    "section": "",
    "text": "Aufgabe\nIm Folgenden ist der Datensatz mtcars zu analysieren.\nDer Datensatz ist z.B. als CSV-Datei von dieser Webseite abrufbar.\nHilfe zum Datensatz ist via help(\"name_des_datensatzes\") oder auf dieser Webseite abrufbar.\nOb die Variable hp (UV; Ereignis \\(A\\)) und Spritverbrauch (mpg; AV; Ereignis \\(B\\)) wohl voneinander abhängig sind? Was meinen Sie? Was ist Ihre Einschätzung dazu? Vermutlich haben Sie ein (wenn vielleicht auch implizites) Vorab-Wissen zu dieser Frage. Lassen wir dieses Vorab-Wissen aber einmal außen vor und schauen uns rein Daten dazu an. Vereinfachen wir die Frage etwas, indem wir beide Variablen am Mittelwert aufteilen: Wenn eine Beobachtung (d.h. ein Auto) einen Wert in der jeweiligen Variablen höchstens so groß wie der Mittelwert der Variable aufweist, geben wir der Beobachtung der Wert 0, ansonsten den Wert 1. Wir nehmen die Anteile der gesuchten Größen als Schätzwert für deren Wahrscheinlichkeit.\nDie resultierenden binären Variablen nennen wir av_high bzw. uv_high (im schönsten Denglisch).\nBerechnen Sie: \\(Pr(\\neg \\text{uvhigh} \\, | \\, \\text{avhigh})\\)\nHinweise:\n\nDas “Ellbogen-Zeichen” \\(\\neg\\) kennzeichnet eine logische Negierung (das Gegenteil).\nDie angegebene Wahrscheinlichkeit ist eine bedingte Wahrscheinlichkeit.\nWeitere Hinweise\n\n         \n\n\nLösung\nSchauen wir zuerst mal in den Datensatz:\n\nmtcars %&gt;% \n  select(mpg, hp) %&gt;% \n  slice_head(n = 5)\n\n                   mpg  hp\nMazda RX4         21.0 110\nMazda RX4 Wag     21.0 110\nDatsun 710        22.8  93\nHornet 4 Drive    21.4 110\nHornet Sportabout 18.7 175\n\n\nDann berechnen wir die binären Variablen.\nZuerst av_high:\n\n# split by mean:\nd2 &lt;-\n  mtcars %&gt;% \n  select(mpg, hp) %&gt;% \n  mutate(av_high = case_when(\n    mpg &lt;= mean(mpg) ~ 0,\n    mpg &gt; mean(mpg) ~ 1\n  )) %&gt;% \n  select(-mpg) \n\nglimpse(d2)\n\nRows: 32\nColumns: 2\n$ hp      &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, …\n$ av_high &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,…\n\n\nav_high = 1 zeigt hohe Werte in mpg an, und av_high = 0 zeigt geringe Werte (im Verhältnis zum Mittelwert).\nMan beachte, dass hohe Werte in MPG einen geringen Spritverbrauch bedeuten (also eine hohe Sparsamkeit im Verbrauch).\nDann berechnen wir uv_high:\n\nd3 &lt;-\n  d2 %&gt;% \n  select(av_high, hp) %&gt;% \n  mutate(uv_high = case_when(\n    hp &lt;= mean(hp) ~ 0,\n    hp &gt; mean(hp) ~ 1\n  )) %&gt;% \n  select(-hp) \n\nglimpse(d3)\n\nRows: 32\nColumns: 2\n$ av_high &lt;dbl&gt; 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,…\n$ uv_high &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,…\n\n\nDann zählen wir die gesuchten Wahrscheinlichkeiten bzw. Anteile der AV:\n\nd3 %&gt;% \n  count(av_high)\n\n  av_high  n\n1       0 18\n2       1 14\n\n\nEs gibt also 14 Autos, die den oben gesuchten “hinteren Teil” der Bedingung erfüllen (av_high = 1).\nFiltern wir als nächstes nur in diesen 14 Autos nach dem “vorderen Teil” der gesuchten Wahrscheinlichkeit, also uv_high = 0.\n\nd3 %&gt;% \n  filter(av_high == 1) %&gt;% \n  count(uv_high) %&gt;% \n  mutate(prop = n/sum(n))\n\n  uv_high  n prop\n1       0 14    1\n\n\nEs gibt also 14 von 14 Autos, die diese Bedingung, uv_high = 0 erfüllen. Das sind 100%.\nIn Worten: Von den Autos mit hoher Sparsamkeit haben alle eine geringe PS-Zahl. Das macht intuitiv Sinn.\nDer gesuchte Wert beträgt also 1.\n\nCategories:\n\ndyn\nprobability"
  },
  {
    "objectID": "posts/adjustieren2a/adjustieren2a.html",
    "href": "posts/adjustieren2a/adjustieren2a.html",
    "title": "adjustieren2a",
    "section": "",
    "text": "Aufgabe\nBetrachten Sie folgendes Modell, das den Zusammenhang des Preises (price) und dem Gewicht (carat) von Diamanten untersucht (Datensatz diamonds).\n\nlibrary(tidyverse)\nlibrary(easystats)\ndiamonds &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n\nRows: 53940 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): cut, color, clarity\ndbl (8): rownames, carat, depth, table, price, x, y, z\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAber zuerst zentrieren wir den metrischen Prädiktor carat, um den Achsenabschnitt besser interpretieren zu können.\n\ndiamonds &lt;-\n  diamonds %&gt;% \n  mutate(carat_z = carat - mean(carat, na.rm = TRUE))\n\nDann berechnen wir ein (nicht-bayesianisches, sondern frequentistisches) Regressionsmodell:\n\nlm1 &lt;- lm(price ~ carat_z, data = diamonds)\nparameters(lm1)\n\nParameter   | Coefficient |    SE |             95% CI | t(53938) |      p\n--------------------------------------------------------------------------\n(Intercept) |     3932.80 |  6.67 | [3919.73, 3945.87] |   589.83 | &lt; .001\ncarat z     |     7756.43 | 14.07 | [7728.86, 7784.00] |   551.41 | &lt; .001\n\n\nZur Verdeutlichung ein Diagramm zum Modell:\n\nestimate_relation(lm1) |&gt; plot()\n\n\n\n\nAufgaben:\n\nWas kostet in Diamant mittlerer Größe laut Modell lm1? Runden Sie auf eine Dezimale. Geben Sie nur eine Zahl ein.\nGeben Sie eine Regressionsformel an, die lm1 ergänzt, so dass die Schliffart (cut) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben. Geben Sie nur die Regressionsformel an. Lassen Sie zwischen Termen jeweils ein Leerzeichen Abstand.\n\nHinweis: Es gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\ndiamonds %&gt;% \n  distinct(cut)\n\n# A tibble: 5 × 1\n  cut      \n  &lt;chr&gt;    \n1 Ideal    \n2 Premium  \n3 Good     \n4 Very Good\n5 Fair     \n\n\n         \n\n\nLösung\n\nUnser Modell lm1 schätzt den Preis eines Diamanten mittlerer Größe auf etwa 3932.5 (was immer auch die Einheiten sind, Dollar vermutlich). Da der Prädiktor carat_z zentriert ist, entspricht ein Wert von 0 dem Mittelwert der ursprünglichen Verteilung, carat. Der Y-Wert, wenn X=0, wird vom Intercept angegeben.\n\n\nparameters(lm1)\n\nParameter   | Coefficient |    SE |             95% CI | t(53938) |      p\n--------------------------------------------------------------------------\n(Intercept) |     3932.80 |  6.67 | [3919.73, 3945.87] |   589.83 | &lt; .001\ncarat z     |     7756.43 | 14.07 | [7728.86, 7784.00] |   551.41 | &lt; .001\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald t-distribution approximation.\n\n\nOder so:\n\ncoef(lm1)\n\n(Intercept)     carat_z \n   3932.800    7756.426 \n\n\nAlternativ können wir uns mit predict für jeden beliebigen Wert des Prädiktors die Vorhersage des Modells ausgeben lassen.\nWir definieren eine (hier sehr kurze) Tabelle mit Prädiktorwerten, für die wir die Vorhersage laut lm1 wissen möchten:\n\nneue_daten &lt;-\n  tibble(carat_z = 0)\n\nDann weisen wir unseren Lieblingsroboter an, auf Basis von lm1 eine Vorhersage (prediction) für neue_daten zu erstellen.\n\npredict(lm1, newdata = neue_daten)\n\n     1 \n3932.8 \n\n\n\nprice ~ carat_z + cut\n\nDieses zweite Modell könnten wir so berechnen:\n\nlm2 &lt;- lm(price ~ carat_z + cut, data = diamonds)\nparameters(lm2)\n\nParameter       | Coefficient |    SE |             95% CI | t(53934) |      p\n------------------------------------------------------------------------------\n(Intercept)     |     2405.18 | 37.83 | [2331.04, 2479.32] |    63.58 | &lt; .001\ncarat z         |     7871.08 | 13.98 | [7843.68, 7898.48] |   563.04 | &lt; .001\ncut [Good]      |     1120.33 | 43.50 | [1035.07, 1205.59] |    25.76 | &lt; .001\ncut [Ideal]     |     1800.92 | 39.34 | [1723.81, 1878.04] |    45.77 | &lt; .001\ncut [Premium]   |     1439.08 | 39.87 | [1360.94, 1517.21] |    36.10 | &lt; .001\ncut [Very Good] |     1510.14 | 40.24 | [1431.26, 1589.01] |    37.53 | &lt; .001\n\n\nMan könnte hier noch einen Interaktionseffekt ergänzen, wenn man Grund zur Annahme hat, dass es einen gibt.\n\nCategories:\n\nregression\n‘2023’\nstring"
  },
  {
    "objectID": "posts/wskt-quiz04/wskt-quiz04.html",
    "href": "posts/wskt-quiz04/wskt-quiz04.html",
    "title": "wskt-quiz04",
    "section": "",
    "text": "Sei \\(X \\sim Bin(10, 1/2)\\). Dann ist die zugehörige Verteilung (von \\(X\\)) symmetrisch.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz04/wskt-quiz04.html#answerlist",
    "href": "posts/wskt-quiz04/wskt-quiz04.html#answerlist",
    "title": "wskt-quiz04",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz04/wskt-quiz04.html#answerlist-1",
    "href": "posts/wskt-quiz04/wskt-quiz04.html#answerlist-1",
    "title": "wskt-quiz04",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\ndistribution\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/ausreisser1/ausreisser1.html",
    "href": "posts/ausreisser1/ausreisser1.html",
    "title": "ausreisser1",
    "section": "",
    "text": "Entfernen Sie alle Ausreißer im Datensatz mariokart!\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nDefinieren Sie “Ausreißer” als Werte, die mehr als 3SD vom Mittelwert entfernt sind."
  },
  {
    "objectID": "posts/ausreisser1/ausreisser1.html#setup",
    "href": "posts/ausreisser1/ausreisser1.html#setup",
    "title": "ausreisser1",
    "section": "Setup",
    "text": "Setup"
  },
  {
    "objectID": "posts/ausreisser1/ausreisser1.html#überblick",
    "href": "posts/ausreisser1/ausreisser1.html#überblick",
    "title": "ausreisser1",
    "section": "Überblick",
    "text": "Überblick\nWir verschaffen uns einen Überblick über die Verteilungen:\n\nplot_histogram(mariokart)  # aus Paket `DataExplorer`\n\n\n\n\nWie man sieht gibt es einige Ausreißer, z.B. bei ship_pr und total_pr."
  },
  {
    "objectID": "posts/ausreisser1/ausreisser1.html#daten-aufbereiten-mit-z-transformation",
    "href": "posts/ausreisser1/ausreisser1.html#daten-aufbereiten-mit-z-transformation",
    "title": "ausreisser1",
    "section": "Daten aufbereiten mit z-Transformation",
    "text": "Daten aufbereiten mit z-Transformation\n\nmariokart2 &lt;-\n  mariokart %&gt;% \n  select(-id) %&gt;% \n  mutate(across(  # \"across\" wiederholt die Funktionen \".fns\" über alle Spalten \".cols\"\n    .cols = where(is.numeric),\n    .fns = ~ as.numeric(standardize(.x))))\n\nLeider gibt standardize kein vernünftiges numerisches Objekt zurück, so dass wir mit as.numeric die Daten noch zur Räson rufen müssen.\nWie man sieht, ändert sich die Verteilungsform nicht durch die z-Transformation (oder durch irgendeine lineare Transformation):\n\nplot_histogram(mariokart2)"
  },
  {
    "objectID": "posts/ausreisser1/ausreisser1.html#extremwerte-durch-mw-ersetzen",
    "href": "posts/ausreisser1/ausreisser1.html#extremwerte-durch-mw-ersetzen",
    "title": "ausreisser1",
    "section": "Extremwerte durch MW ersetzen",
    "text": "Extremwerte durch MW ersetzen\n\nmariokart3 &lt;-\n  mariokart2 %&gt;% \n  mutate(across(\n    .cols = where(is.numeric),\n    .fns = ~ case_when(abs(.x) &lt;= 3 ~ .x,\n                       abs(.x) &gt; 3 ~ mean(.x))\n  ))\n\n\nplot_histogram(mariokart3)\n\n\n\n\nJetzt sind die Daten deutlich weniger extrem.\n\nCategories:\n\neda\ndatawrangling\ntidyverse\nausreisser\nstring"
  },
  {
    "objectID": "posts/Weinhaendler/Weinhaendler.html",
    "href": "posts/Weinhaendler/Weinhaendler.html",
    "title": "Weinhaendler",
    "section": "",
    "text": "Sie sind kürzlich in ein Startup-Unternehmen eingestiegen. Das Unternehmen versucht, einen Online-Weinhandel aufzubauen. Kern des Unternehmens ist eine künstliche Intelligenz, die versucht, den Kundis den best möglich passenden Wein anzudreh… zu verkaufen.\nSie haben sich bei Ihrem Bewerbungsgespräch persönlich von der Qualität der Produkte eingehend überzeugt und sind daher hoch motiviert, sich zum Wohle des Unternehmens einzusetzen.\nKürzlich hat eine Beratungsfirma, die Ihre Kunden im Rahmen einer qualitativen Studie untersucht hat, herausgefunden, dass doch ein beachtlicher Teil von einem Menschen, nicht von einem Roboter (bzw. der KI) beim Wein aussuchen beraten werden möchte. Diesen Anteil von Kunden (die nicht von der KI beraten werden möchten) möchten Sie jetzt genauer bestimmen.\nDazu haben Sie \\(N=42\\) Kundis befragt. Gut die Hälfte (\\(n=23\\)) hat sich zugunsten der KI ausgesprochen; der Rest der Kundis möchte lieber von einem Menschen beraten werden.\nGehen Sie im Folgenden davon aus, dass die Studie bzw. die erhaltenen Daten von guter Qualität ist (man also keine Probleme wie mangelnde Repräsentativität erwarten muss).\nVerwenden Sie die Gittermethode und gleichverteilte Priori-Werte.\n\nWie groß ist die Wahrscheinlichkeit, dass die KI-freundlichen Kundis bei Ihnen überwiegen?\nWie groß ist die Wahrscheinlichkeit (laut Modell), dass künftig eine Mehrheit an KI-freundlichen Kundis zu beobachten sein wird?\nWenn Sie nur eine Zahl angeben dürften: Was ist Ihr Schätzwert zum Anteil der KI-Freunde (in dieser Studie)?"
  },
  {
    "objectID": "posts/Weinhaendler/Weinhaendler.html#a",
    "href": "posts/Weinhaendler/Weinhaendler.html#a",
    "title": "Weinhaendler",
    "section": "A)",
    "text": "A)\n\nWie groß ist die Wahrscheinlichkeit (laut Modell), dass die KI-freundlichen Kundis bei Ihnen überwiegen?\n\nDas ist eine Frage nach der kumulative Verteilungsfuntion (cumulative distribution function, cdf).\n\np_grid &lt;- seq(from=0, \n              to=1, \n              length.out=1000)  # Gitterwerte\n\nprior &lt;- rep(1, 1000)  # Priori-Gewichte\n\nset.seed(42)  # Zufallszahlen festlegen\nlikelihood &lt;- dbinom(23, size = 42, prob=p_grid ) \n\nunstandardisierte_posterior &lt;- likelihood * prior \n\nposterior &lt;- unstandardisierte_posterior / sum(unstandardisierte_posterior)\n\nZiehen wir daraus Stichproben:\n\nset.seed(42)  # Zufallszahlen festlegen\nsamples &lt;- \n  tibble(\n    p = sample(p_grid , \n               prob = posterior, \n               size=1e4, \n               replace=TRUE))  \nsamples &lt;-\n  samples %&gt;% \n  mutate(id = 1:nrow(samples))\n\n\nsamples %&gt;% \n  filter(p &gt; 0.5) %&gt;% \n  summarise(wskt_mehrheit_will_ki = n()/nrow(samples))\n\n# A tibble: 1 × 1\n  wskt_mehrheit_will_ki\n                  &lt;dbl&gt;\n1                 0.731\n\n\nVisualisieren:\nMit {ggpubr}:\n\nlibrary(ggpubr)\n\ngghistogram(samples, x = \"p\") +\n  geom_vline(xintercept = 0.5, color = \"red\", linewidth=2) \n\n\n\n\nMit {ggplot2}:\n\nsamples %&gt;% \n  ggplot() +\n  aes(x = p) +\n  geom_histogram() +\n  geom_vline(xintercept = 0.5) +\n  labs(title = \"Post-Verteilung\")"
  },
  {
    "objectID": "posts/Weinhaendler/Weinhaendler.html#b",
    "href": "posts/Weinhaendler/Weinhaendler.html#b",
    "title": "Weinhaendler",
    "section": "b)",
    "text": "b)\n\nWie groß ist die Wahrscheinlichkeit (laut Modell), dass künftig eine Mehrheit an KI-freundlichen Kunfis zu beobachten sein wird?\n\n\nPPV &lt;-\n  samples %&gt;% \n  mutate(Anzahl_will_KI = rbinom(n = 1e4, size = 42, prob = p))\n\n\nPPV %&gt;% \n  ggplot() +\n  aes(x = Anzahl_will_KI) +\n  geom_histogram() +\n  labs(title = \"PPV\")\n\n\n\n\nEine Mehrheit entspricht mind. 22 von 42 Personen.\n\nPPV %&gt;% \n  filter(Anzahl_will_KI &gt;= 22) %&gt;% \n  summarise(prob_mehrheit_will_ki = n()/nrow(PPV))\n\n# A tibble: 1 × 1\n  prob_mehrheit_will_ki\n                  &lt;dbl&gt;\n1                 0.623"
  },
  {
    "objectID": "posts/Weinhaendler/Weinhaendler.html#c",
    "href": "posts/Weinhaendler/Weinhaendler.html#c",
    "title": "Weinhaendler",
    "section": "C)",
    "text": "C)\n\nWenn Sie nur eine Zahl angeben dürften: Was ist Ihr Schätzwert zum Anteil der KI-Freunde (in dieser Studie)?\n\nMan könnte den Mittelwert oder den Median angeben:\n\nlibrary(easystats)\ndescribe_distribution(samples)\n\nVariable |    Mean |      SD |     IQR |            Range | Skewness | Kurtosis |     n | n_Missing\n---------------------------------------------------------------------------------------------------\np        |    0.54 |    0.07 |    0.10 |     [0.27, 0.79] |    -0.09 |    -0.06 | 10000 |         0\nid       | 5000.50 | 2886.90 | 5000.50 | [1.00, 10000.00] |     0.00 |    -1.20 | 10000 |         0\n\n\n\nCategories:\n\nprobability\nbayes-box\nbayes\nstring"
  },
  {
    "objectID": "posts/Bed-Wskt3/Bed-Wskt3.html",
    "href": "posts/Bed-Wskt3/Bed-Wskt3.html",
    "title": "Bed-Wskt3",
    "section": "",
    "text": "Aufgabe\nAls Bildungsforscher(in) untersuchen Sie den Lernerfolg in einem Statistikkurs.\nEine Gruppe von Studierenden absolviert einen Statistikkurs. Ein Teil lernt gut mit (Ereignis \\(A\\)), ein Teil nicht (Ereignis \\(A^C\\)). Ein Teil besteht die Prüfung (Ereignis \\(B\\)); ein Teil nicht (\\(B^C\\)).\n(Eselsbrücke: Das Ereignis “A” steht für “Ah, hat Aufgepasst.)\nWir ziehen zufällig eine/n Studierende/n: Siehe da – Die Person hat bestanden. Yeah!\nDie Anteile der Gruppen (bzw. Wahrscheinlichkeit des Ereignisses) lassen sich unten stehender Tabelle entnehmen.\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(c(B, Bneg), round, digits = 2)`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n\n\n\n\n\nrow_ids\nB\nBneg\nSumme\n\n\n\n\nA\n0.29\n0.25\n0.54\n\n\nA_neg\n0.42\n0.04\n0.46\n\n\nSumme\n0.70\n0.29\n0.99\n\n\n\n\n\n\nAufgabe: Gesucht ist die (bedingte) Wahrscheinlichkeit, dass diese Person gut mitgelernt hat, gegeben der Tatsache, dass sie bestanden hat. Geben Sie die Wahrscheinlichkeit des gesuchten Ereignisses an!\nHinweise:\n\nRunden Sie auf 2 Dezimalstellen.\nGeben Sie Anteile stets in der Form 0.42 an (mit führender Null und Dezimalpunkt).\n“A_neg” bezieht sich auf das Komplementärereignis zu A.\n\n         \n\n\nLösung\nDer gesuchte Wert lautet: 0.41.\n\nCategories:\n\nprobability\nbayes\nnum"
  },
  {
    "objectID": "posts/filter-na1/filter-na1.html",
    "href": "posts/filter-na1/filter-na1.html",
    "title": "filter-na1",
    "section": "",
    "text": "Filtern Sie alle Zeilen ohne fehlende Werte im Datensatz penguins!"
  },
  {
    "objectID": "posts/filter-na1/filter-na1.html#setup",
    "href": "posts/filter-na1/filter-na1.html#setup",
    "title": "filter-na1",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnrow(d)\n\n[1] 344"
  },
  {
    "objectID": "posts/filter-na1/filter-na1.html#weg-1",
    "href": "posts/filter-na1/filter-na1.html#weg-1",
    "title": "filter-na1",
    "section": "Weg 1",
    "text": "Weg 1\n\nd_nona &lt;-\n  d %&gt;% \n  filter(complete.cases(.))\n\nnrow(d_nona)\n\n[1] 333"
  },
  {
    "objectID": "posts/filter-na1/filter-na1.html#weg-2",
    "href": "posts/filter-na1/filter-na1.html#weg-2",
    "title": "filter-na1",
    "section": "Weg 2",
    "text": "Weg 2\n\nd %&gt;% \n  filter(if_all(everything(), ~ !is.na(.))) %&gt;% \n  nrow()\n\n[1] 333\n\n\n\nCategories:\n\n2023\neda\nna\nstring"
  },
  {
    "objectID": "posts/penguins-stan-03/penguins-stan-03.html",
    "href": "posts/penguins-stan-03/penguins-stan-03.html",
    "title": "penguins-stan-03",
    "section": "",
    "text": "Aufgabe\nWir untersuchen Einflussfaktoren bzw. Prädiktoren auf das Körpergewicht von Pinguinen. In dieser Aufgabe untersuchen wir den Zusammenhang von Schnabellänge (als UV) und Körpergewicht (als AV).\nWie groß ist der statistische Einfluss der UV auf die AV?\nGeben Sie den Punktschätzer des Effekts an!\nHinweise:\n\nNutzen Sie den Datensatz zu den Palmer Penguins.\nSie können den Datensatz z.B. hier beziehen oder über das R-Paket palmerpenguins.\nBeziehen Sie sich auf den Median-Schätzwert.\nWeitere Hinweise\n\n         \n\n\nLösung\nZentrieren ist eigentlich immer nützlich, aber hier streng genommen nicht unbedingt nötig. Der Hauptgrund dafür ist, dass Stan für uns den Prior für den Intercept festlegt, und zwar auf Basis der Daten, wir uns also nicht um die komische Frage zu kümmern brauchen, welchen Prior wir für den unzentrierten Achsenabschnitt vergeben wollten: Wie schwer sind Pinguins der Schnabellänge Null? Mit zentrierten Prädiktoren ist die Frage nach dem Prior viel einfacher zu beantworten: Wie schwer ist ein Pinguin mit mittelgroßem Schnabel?\nSetup:\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\n\ndata(\"penguins\", package = \"palmerpenguins\")\n\nEs wird in dieser Aufgabe vorausgesetzt, dass Sie den Datensatz selbständig importieren können. Tipp: Kurzes Googeln hilft ggf., den Datensatz zu finden.\nAlternativ könnten Sie den Datensatz als CSV-Datei importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\npenguins &lt;- data_read(d_path)\n\nEin Blick in die Daten zur Kontrolle, ob das Importieren richtig funktioniert hat:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nVertrauen ist gut, aber - was Golems betrifft - ist Kontrolle eindeutig besser ;-)\n\nm1 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins, #  Daten\n               seed = 42,  # Repro.\n               refresh = 0)  # nicht so viel Output\n\n\nparameters(m1, ci_method = \"hdi\", ci = .9, keep = \"bill_length_mm\")  # nur für \"bill_length_mm\"\n\nParameter      | Median |         90% CI |   pd |  Rhat |     ESS |                Prior\n----------------------------------------------------------------------------------------\nbill_length_mm |  87.45 | [77.17, 98.51] | 100% | 0.999 | 3931.00 | Normal (0 +- 367.22)\n\n\n\nUncertainty intervals (highest-density) and p-values (two-tailed)\n  computed using a MCMC distribution approximation.\n\n\nDie Lösung lautet also, wie aus der Ausgabe zu den Parametern ersichtlich, 87.45.\n\nCategories:\n\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/twitter07/twitter07.html",
    "href": "posts/twitter07/twitter07.html",
    "title": "twitter07",
    "section": "",
    "text": "Exercise\nLaden Sie \\(n=10^k\\) Tweets von Twitter herunter (mit \\(k=2\\)) und zwar pro Nutzerkonto wie unten angegeben . die Tweets sollen jeweils an eine prominente Person gerichtet sein.\nBeziehen Sie sich auf diese Politikis.\n         \n         \n\n\nSolution\nWir starten die benötigten R-Pakete:\n\nlibrary(academictwitteR)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(askpass)\nlibrary(rio)\n\nHier ist der Datensatz mit den Twitterkonten, für die wir die Daten herunterladen sollen:\n\npoliticians_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/datascience-text/main/data/twitter-german-politicians.csv\"\npoliticians &lt;- import(politicians_path)\npoliticians\n\n                                               name  party      screenname\n1                                   Karl Lauterbach    SPD Karl_Lauterbach\n2                                       Olaf Scholz    SPD      OlafScholz\n3                                 Annalena Baerback Gruene       ABaerbock\n4  Bundesministerium für Wirtschaft und Klimaschutz Gruene            BMWK\n5                                    Friedrich Merz    CDU  _FriedrichMerz\n6                                      Markus Söder    CSU   Markus_Soeder\n7                                       Cem Özdemir Gruene    cem_oezdemir\n8                                    Janine Wissler  Linke  Janine_Wissler\n9                                 Martin Schirdewan  Linke      schirdewan\n10                                Christian Lindner    FDP       c_lindner\n11                    Marie-Agnes Strack-Zimmermann    FDP      MAStrackZi\n12                                   Tino Chrupalla    AFD  Tino_Chrupalla\n13                                     Alice Weidel    AFD    Alice_Weidel\n                                  comment\n1                                    &lt;NA&gt;\n2                                    &lt;NA&gt;\n3                                    &lt;NA&gt;\n4  Robert Habeck ist der Minister im BMWK\n5                                CDU-Chef\n6                                CSU-Chef\n7                                    BMEL\n8                            Linke-Chefin\n9                              Linke-Chef\n10                               FDP-Chef\n11     Vorsitzende Verteidigungsausschuss\n12                     AFD-Bundessprecher\n13                   AFD-Bundessprecherin\n\n\nWir müssen noch das Passwort bereitstellen:\n\nbearer_token &lt;- askpass::askpass(\"bearer token\")\n\nUnd dann definieren wir eine Funktion, die das Gewichtheben für uns erledigt:\n\nget_all_tweets_politicians &lt;- function(screenname, n = 1e1) {\n  get_all_tweets(query = paste0(\"to:\", screenname, \" -is:retweet\"),\n                 start_tweets = \"2021-01-01T00:00:00Z\",\n                 end_tweets = \"2021-12-31T23:59:59Z\",\n                 bearer_token = bearer_token,\n                 file = glue::glue(\"~/datasets/Twitter/hate-speech/tweets_to_{screenname}_2021.rds\"),\n                 data_path = glue::glue(\"~/datasets/Twitter/hate-speech/{screenname}\"),\n                 n = n)\n}\n\nJetzt wenden wir die Funktion auf jedes Twitterkonto unserer Liste (alle Politikis) an:\n\nd &lt;- politicians$screenname %&gt;% \n  map(get_all_tweets_politicians)\n\n\nCategories:\n\ntextmining\ntwitter\nprogramming"
  },
  {
    "objectID": "posts/diamonds-tidymodels01/diamonds-tidymodels01.html",
    "href": "posts/diamonds-tidymodels01/diamonds-tidymodels01.html",
    "title": "diamonds-tidymodels01",
    "section": "",
    "text": "Aufgabe\nFinden Sie ein möglichst “gutes” prädiktives Modell zur Vorhersage des Diamantenpreises im Datensatz diamonds!\nGegenstand dieser Aufgabe ist die Modellierung; Datenvorverarbeitug (wie explorative Datenanalyse) steht nicht im Fokus.\nHinweise:\n\nVerwenden Sie die Methoden aus tidymodels.\nHohe Modellgüte (“gutes Modell”) sei definiert über \\(R^2\\), RMSE und MAE\nVerwenden Sie verschiedene Algorithmen (lineare Modell, kNN, …) und verschiedene Rezepte.\nResampling und Tuning ist hier noch nicht nötig.s\n\nDer Datensatz ist hier zu beziehen. Außerdem ist er Teil von ggplot2 bzw. des Tidyverse und daher mit data() zu laden, wenn das entsprechende Paket vorhanden ist.\n         \n\n\nLösung\n\n\nSetup\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nDaten laden:\n\ndata(diamonds, package = \"ggplot2\")\n\nOder so:\n\ndiamonds &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n\nRows: 53940 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): cut, color, clarity\ndbl (8): rownames, carat, depth, table, price, x, y, z\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nTrain- vs. Testdaten:\n\nd_split &lt;- initial_split(diamonds, strata = price)\n\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\n\n\nModelle:\n\nlin_mod &lt;-\n  linear_reg()\n\n\nknn_mod &lt;-\n  nearest_neighbor(mode = \"regression\")\n\nHilfe zu kNN findet sich z.B. hier.\n\n\nRezepte:\n\nrec1 &lt;-\n  recipe(price ~ ., data = d_train) %&gt;% \n  update_role(1, new_role = \"id\") %&gt;% \n  step_naomit() %&gt;% \n  step_log(all_outcomes())\n\n\n\nRezept prüfen (preppen und backen)\n\nrec1_prepped &lt;-\n  rec1 %&gt;% \n  prep()\n\nrec1_prepped\n\n\n\n\n── Recipe ──────────────────────────────────────────────────────────────────────\n\n\n\n\n\n── Inputs \n\n\nNumber of variables by role\n\n\noutcome:   1\npredictor: 9\nid:        1\n\n\n\n\n\n── Training information \n\n\nTraining data contained 40453 data points and no incomplete rows.\n\n\n\n\n\n── Operations \n\n\n• Removing rows with NA values in: &lt;none&gt; | Trained\n\n\n• Log transformation on: price | Trained\n\n\n\nd_train_baked &lt;-\n  bake(rec1_prepped, new_data = d_train)\n\nEinen Überblick zu steps findet sich z.B. hier.\nRollen-Definitionen in Tidymodels-Rezepten kann man hier nachlesen.\n\nrec2 &lt;-\n  recipe(price ~ ., data = d_train) %&gt;% \n  update_role(1, new_role = \"id\") %&gt;% \n  step_impute_knn() %&gt;% \n  step_log(all_outcomes())\n\n\n\nWorkflows:\n\nwf1 &lt;-\n  workflow() %&gt;% \n  add_recipe(rec1) %&gt;% \n  add_model(lin_mod)\n\n\nwf2 &lt;-\n  wf1 %&gt;% \n  update_model(knn_mod)\n\n\n\nFitting\n\nfit1 &lt;-\n  wf1 %&gt;% \n  fit(d_train)\nfit1\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_naomit()\n• step_log()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n (Intercept)         carat       cutGood      cutIdeal    cutPremium  \n   -2.913222     -0.540689      0.091189      0.155213      0.108878  \ncutVery Good        colorE        colorF        colorG        colorH  \n    0.124711     -0.061150     -0.091230     -0.157784     -0.259018  \n      colorI        colorJ     clarityIF    claritySI1    claritySI2  \n   -0.386879     -0.528595      1.093164      0.607816      0.440536  \n  clarityVS1    clarityVS2   clarityVVS1   clarityVVS2         depth  \n    0.817124      0.751466      1.000923      0.935170      0.050243  \n       table             x             y             z  \n    0.009026      1.156195      0.012648      0.040728  \n\n\n\n\nFitten des Test-Samples\n\nfit1_test &lt;-\n  wf1 %&gt;% \n  last_fit(d_split)\nfit1_test\n\n# Resampling results\n# Manual resampling \n# A tibble: 1 × 6\n  splits                id             .metrics .notes   .predictions .workflow \n  &lt;list&gt;                &lt;chr&gt;          &lt;list&gt;   &lt;list&gt;   &lt;list&gt;       &lt;list&gt;    \n1 &lt;split [40453/13487]&gt; train/test sp… &lt;tibble&gt; &lt;tibble&gt; &lt;tibble&gt;     &lt;workflow&gt;\n\n\n\n\nModellgüte\n\ncollect_metrics(fit1_test)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       0.159 Preprocessor1_Model1\n2 rsq     standard       0.976 Preprocessor1_Model1\n\n\nDe-logarithmieren, wenn man Vorhersagen in den Rohwerten haben möchte:\n\ncollect_predictions(fit1_test) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n  id               .pred  .row price .config             \n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;               \n1 train/test split  5.81     5  5.81 Preprocessor1_Model1\n2 train/test split  5.86     6  5.82 Preprocessor1_Model1\n3 train/test split  5.89     8  5.82 Preprocessor1_Model1\n4 train/test split  6.10     9  5.82 Preprocessor1_Model1\n5 train/test split  5.85    21  5.86 Preprocessor1_Model1\n6 train/test split  5.90    25  5.87 Preprocessor1_Model1\n\n\n\nd_test_w_preds &lt;- \ncollect_predictions(fit1_test) %&gt;% \n  mutate(pred_raw = exp(.pred)) \n\nhead(d_test_w_preds)\n\n# A tibble: 6 × 6\n  id               .pred  .row price .config              pred_raw\n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt;\n1 train/test split  5.81     5  5.81 Preprocessor1_Model1     334.\n2 train/test split  5.86     6  5.82 Preprocessor1_Model1     352.\n3 train/test split  5.89     8  5.82 Preprocessor1_Model1     360.\n4 train/test split  6.10     9  5.82 Preprocessor1_Model1     447.\n5 train/test split  5.85    21  5.86 Preprocessor1_Model1     346.\n6 train/test split  5.90    25  5.87 Preprocessor1_Model1     364.\n\n\n\nCategories:\n\nds1\ntidymodels\nstatlearning\nstring"
  },
  {
    "objectID": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html",
    "href": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html",
    "title": "Nullhyp-Beispiel",
    "section": "",
    "text": "Welches der folgenden Beispiele ist kein Beispiel für eine Nullhypothese?\n\n\n\n\\(\\beta_1 &lt;= 0\\)\n\\(\\mu_1 = \\mu_2\\)\n\\(\\mu_1 = \\mu_2 = ... = \\mu_k\\)\n\\(\\rho = 0\\)\n\\(\\pi_1 = \\pi_2\\)"
  },
  {
    "objectID": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html#answerlist",
    "href": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html#answerlist",
    "title": "Nullhyp-Beispiel",
    "section": "",
    "text": "\\(\\beta_1 &lt;= 0\\)\n\\(\\mu_1 = \\mu_2\\)\n\\(\\mu_1 = \\mu_2 = ... = \\mu_k\\)\n\\(\\rho = 0\\)\n\\(\\pi_1 = \\pi_2\\)"
  },
  {
    "objectID": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html#answerlist-1",
    "href": "posts/Nullhyp-Beispiel/Nullhyp-Beispiel.html#answerlist-1",
    "title": "Nullhyp-Beispiel",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nnull\ninference"
  },
  {
    "objectID": "posts/Skalenniveau1a/Skalenniveau1a.html",
    "href": "posts/Skalenniveau1a/Skalenniveau1a.html",
    "title": "Skalenniveau1a",
    "section": "",
    "text": "Verfügt die Variable Alter über ein metrisches Skalenniveau?\n\n\n\nnein\nja"
  },
  {
    "objectID": "posts/Skalenniveau1a/Skalenniveau1a.html#answerlist",
    "href": "posts/Skalenniveau1a/Skalenniveau1a.html#answerlist",
    "title": "Skalenniveau1a",
    "section": "",
    "text": "nein\nja"
  },
  {
    "objectID": "posts/mtcars-abhaengig/mtcars-abhaengig.html",
    "href": "posts/mtcars-abhaengig/mtcars-abhaengig.html",
    "title": "mtcars-abhaengig",
    "section": "",
    "text": "Exercise\nOb wohl die PS-Zahl (Ereignis \\(A\\)) und der Spritverbrauch (Ereignis \\(B\\)) voneinander abhängig sind? Was meinen Sie? Was ist Ihre Einschätzung dazu? Vermutlich haben Sie ein (wenn vielleicht auch implizites) Vorab-Wissen zu dieser Frage. Lassen wir dieses Vorab-Wissen aber einmal außen vor und schauen uns rein Daten dazu an. Vereinfachen wir die Frage etwas, indem wir fragen, ob die Ereignisse “hoher Spritverbrauch” (A) und “hohe PS-Zahl” voneinander abhängig sind.\nUm es konkret zu machen, nutzen wir den Datensatz mtcars:\n\nlibrary(tidyverse)\ndata(mtcars)\nglimpse(mtcars)\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n\n\nWeitere Infos zum Datensatz bekommen Sie mit help(mtcars) in R.\nDefinieren wir uns das Ereignis “hohe PS-Zahl” (und nennen wir es hp_high, klingt cooler). Sagen wir, wenn die PS-Zahl größer ist als der Median, dann trifft hp_high zu, ansonsten nicht:\n\nmtcars %&gt;% \n  summarise(median(hp))\n\n  median(hp)\n1        123\n\n\nMit dieser “Wenn-Dann-Abfrage” können wir die Variable hp_high mit den Stufen TRUE und FALSE definieren:\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(hp_high = case_when(\n    hp &gt; 123 ~ TRUE,\n    hp &lt;= 123 ~ FALSE\n  ))\n\nGenauso gehen wir mit dem Spritverbrauch vor (mpg_high):\n\nmtcars &lt;- \n  mtcars %&gt;% \n  mutate(mpg_high = case_when(\n    mpg &gt; median(mpg) ~ TRUE,\n    mpg &lt;= median(mpg) ~ FALSE\n  ))\n\n\nSchauen Sie im Datensatz nach, ob unser Vorgehen (Erstellung von hp_high und mpg_high) überhaupt funktioniert hat. Probieren geht über Studieren.\nVisualisieren Sie in geeigneter Form den Zusammenhang.\nBerechnen Sie \\(Pr(\\text{mpg_high}|\\text{hp_high})\\) und \\(Pr(\\text{mpg_high}|\\neg \\text{hp_high})\\) !\n\n         \n\n\nSolution\n\nSchauen wir mal in den Datensatz:\n\n\nmtcars %&gt;% \n  select(hp, hp_high, mpg, mpg_high) %&gt;% \n  slice_head(n = 5)\n\n                   hp hp_high  mpg mpg_high\nMazda RX4         110   FALSE 21.0     TRUE\nMazda RX4 Wag     110   FALSE 21.0     TRUE\nDatsun 710         93   FALSE 22.8     TRUE\nHornet 4 Drive    110   FALSE 21.4     TRUE\nHornet Sportabout 175    TRUE 18.7    FALSE\n\n\n\n\n\n\nmtcars %&gt;% \n  #select(hp_high, mpg_high) %&gt;% \n  ggplot() +\n  aes(x = hp_high, fill = mpg_high) +\n  geom_bar(position = \"fill\")\n\n\n\n\nHey, sowas von abhängig voneinander, die zwei Variablen, mpg_high und hp_high!\nDer rechte Balken zeigt \\(Pr(\\text{mpg_high}|\\text{ hp_high})\\) und \\(Pr(\\neg \\text{mpg_high}|\\text{hp_high})\\).Der linke Balken zeigt \\(Pr(\\text{mpg_high}|\\neg \\text{hp_high})\\) und \\(Pr(\\neg \\text{mpg_high}|\\neg \\text{hp_high})\\).\n\nBerechnen wir die relevanten Anteile:\n\n\nmtcars %&gt;% \n  #select(hp_high, mpg_high) %&gt;% \n  count(hp_high, mpg_high) %&gt;%  # Anzahl pro Zelle der Kontingenztabelle\n  group_by(hp_high) %&gt;%  # die Anteile pro \"Balken\" s. Diagramm\n  mutate(prop = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   hp_high [2]\n  hp_high mpg_high     n   prop\n  &lt;lgl&gt;   &lt;lgl&gt;    &lt;int&gt;  &lt;dbl&gt;\n1 FALSE   FALSE        3 0.176 \n2 FALSE   TRUE        14 0.824 \n3 TRUE    FALSE       14 0.933 \n4 TRUE    TRUE         1 0.0667\n\n\nAm besten, Sie führen den letzten Code Schritt für Schritt aus und schauen sich jeweils das Ergebnis an, das hilft beim Verstehen.\nAlternativ kann man sich die Häufigkeiten auch schön bequem ausgeben lassen:\n\nlibrary(mosaic)\ntally(mpg_high ~ hp_high, \n      data = mtcars, \n      format = \"proportion\")\n\n        hp_high\nmpg_high       TRUE      FALSE\n   TRUE  0.06666667 0.82352941\n   FALSE 0.93333333 0.17647059\n\n\n\nCategories:\n\nprobability\ndependent"
  },
  {
    "objectID": "posts/Nerd-gelockert/Nerd-gelockert.html",
    "href": "posts/Nerd-gelockert/Nerd-gelockert.html",
    "title": "Nerd-gelockert",
    "section": "",
    "text": "Aufgabe\nIn einer Studie werden Persönlichkeitsmerkmale von Professoren untersucht. Laut der Studie wird bei 12% extreme Nerdigkeit festgestellt, bei 8% stark gelockerte Assoziation (vulgo: Schraube locker). Bei 4% wurden beide Merkmale festgestellt.\nAufgabe: Wie groß ist die Wahrscheinlichkeit, dass ein extrem nerdiger Prof gelockerte Assoziationen aufweist?\nAnders gesagt: Die Wahrscheinlichkeit von gelockerter Assoziation gegeben dass der Prof extermer Nerd ist.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nSei \\(N\\) “extreme Nerdigkeit”.\nSei \\(A\\) “gelockerte Assoziation”.\n\\(Pr(A|N) = \\frac{Pr(N \\cap A)}{Pr(N)} = \\frac{Pr(NA)}{Pr(N)}\\)\n\nPr_N &lt;- .12\nPr_A &lt;- .08\nPr_NA &lt;- .04\nPr_A_geg_N &lt;- (Pr_NA) / Pr_N\nPr_A_geg_N\n\n[1] 0.3333333\n\n\nDie Lösung lautet 0.3333333.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/kausal28/kausal28.html",
    "href": "posts/kausal28/kausal28.html",
    "title": "kausal28",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über mehrere Variablen, die als Knoten im Graph dargestellt sind und mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x7.\nAV: x8.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\n\n\n\n\n\n\n\n\n\n{ x1 , x2 , x3 , x4 , x5 , x6 }\n{ x3, x4 }\n{ x8 }\n{ x6, x7 }\n{ x2, x5 }"
  },
  {
    "objectID": "posts/kausal28/kausal28.html#answerlist",
    "href": "posts/kausal28/kausal28.html#answerlist",
    "title": "kausal28",
    "section": "",
    "text": "{ x1 , x2 , x3 , x4 , x5 , x6 }\n{ x3, x4 }\n{ x8 }\n{ x6, x7 }\n{ x2, x5 }"
  },
  {
    "objectID": "posts/kausal28/kausal28.html#answerlist-1",
    "href": "posts/kausal28/kausal28.html#answerlist-1",
    "title": "kausal28",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal\nschoice"
  },
  {
    "objectID": "posts/twitter06/twitter06.html",
    "href": "posts/twitter06/twitter06.html",
    "title": "twitter06",
    "section": "",
    "text": "Exercise\nLaden Sie \\(n=10^k\\) Tweets von Twitter herunter (mit \\(k=4\\)) via der Twitter API; die Tweets sollen jeweils an eine prominente Person gerichtet sein.\nBeziehen Sie sich auf folgende Personen bzw. Twitter-Accounts:\n\nMarkus_Soeder\nkarl_lauterbach.\n\nBereiten Sie die Textdaten mit grundlegenden Methoden des Textminings auf (Tokenisieren, Stopwörter entfernen, Zahlen entfernen, …).\nNutzen Sie die Daten dann, um eine Sentimentanalyse zu erstellen.\nVergleichen Sie die Ergebnisse für alle untersuchten Personen.\n         \n         \n\n\nSolution\n\nlibrary(rtweet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks rtweet::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytext)\nlibrary(lsa)  # Stopwörter\n\nLoading required package: SnowballC\n\nlibrary(SnowballC)  # Stemming\n\n\ndata(sentiws, package = \"pradadata\")\n\nZuerst muss man sich anmelden und die Tweets herunterladen:\n\nsource(\"/Users/sebastiansaueruser/credentials/hate-speech-analysis-v01-twitter.R\")\n\nauth &lt;- rtweet_app(bearer_token = Bearer_Token)\n\n\ntweets_to_kl &lt;- search_tweets(\"@karl_lauterbach\", n = 1e2, include_rts = FALSE)\n#write_rds(tweets_to_kl, file = \"tweets_to_kl.rds\", compress = \"gz\")\ntweets_to_ms &lt;- search_tweets(\"@Markus_Soeder\", n = 1e4, include_rts = FALSE)\n#write_rds(tweets_to_ms, file = \"tweets_to_ms.rds\", compress = \"gz\")\n\nDie Vorverarbeitung pro Screenname packen wir in eine Funktion, das macht es hinten raus einfacher:\n\nprepare_tweets &lt;- function(tweets){\n  \n  tweets %&gt;% \n    select(full_text) %&gt;% \n    unnest_tokens(output = word, input = full_text) %&gt;% \n    anti_join(tibble(word = lsa::stopwords_de)) %&gt;% \n    mutate(word = str_replace_na(word, \"^[:digit:]+$\")) %&gt;% \n    mutate(word = str_replace_na(word, \"hptts?://\\\\w+\")) %&gt;% \n    mutate(word = str_replace_na(word, \" +\")) %&gt;% \n    drop_na()\n}\n\nTest:\n\nkl_prepped &lt;- \n  prepare_tweets(tweets_to_kl_raw)\n\nJoining with `by = join_by(word)`\n\nhead(kl_prepped)\n\n# A tibble: 6 × 1\n  word                     \n  &lt;chr&gt;                    \n1 tonline⁩                  \n2 spreche                  \n3 neuen                    \n4 pläne                    \n5 bundesgesundheitsminister\n6 karl_lauterbach⁩          \n\n\n\nms_prepped &lt;-\n  prepare_tweets(tweets_to_ms_raw)\n\nJoining with `by = join_by(word)`\n\nhead(ms_prepped)\n\n# A tibble: 6 × 1\n  word         \n  &lt;chr&gt;        \n1 markus_soeder\n2 climate      \n3 activists    \n4 are          \n5 sometimes    \n6 depicted     \n\n\nScheint zu passen.\nDie Sentimentanalyse packen wir auch in eine Funktion:\n\nget_tweets_sentiments &lt;- function(tweets){\n  \n  tweets %&gt;% \n    inner_join(sentiws) %&gt;% \n    group_by(neg_pos) %&gt;% \n    summarise(senti_avg = mean(value, na.rm = TRUE),\n              senti_sd = sd(value, na.rm = TRUE),\n              senti_n = n()) \n}\n\nTest:\n\nkl_prepped %&gt;% \n  get_tweets_sentiments()\n\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(., sentiws): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6649 of `x` matches multiple rows in `y`.\nℹ Row 3102 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 2 × 4\n  neg_pos senti_avg senti_sd senti_n\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;int&gt;\n1 neg        -0.313    0.237    3576\n2 pos         0.112    0.145    5800\n\n\nTest:\n\ntweets_to_kl_raw %&gt;% \n  prepare_tweets() %&gt;% \n  get_tweets_sentiments()\n\nJoining with `by = join_by(word)`\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(., sentiws): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6649 of `x` matches multiple rows in `y`.\nℹ Row 3102 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 2 × 4\n  neg_pos senti_avg senti_sd senti_n\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;int&gt;\n1 neg        -0.313    0.237    3576\n2 pos         0.112    0.145    5800\n\n\nScheint zu passen.\nWir könnten noch die beiden Funktionen in eine wrappen:\n\nprep_sentiments &lt;- function(tweets) {\n\n  tweets %&gt;% \n    prepare_tweets() %&gt;% \n    get_tweets_sentiments()\n}\n\n\ntweets_to_kl_raw %&gt;% \n  prep_sentiments()\n\nJoining with `by = join_by(word)`\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(., sentiws): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6649 of `x` matches multiple rows in `y`.\nℹ Row 3102 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 2 × 4\n  neg_pos senti_avg senti_sd senti_n\n  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;int&gt;\n1 neg        -0.313    0.237    3576\n2 pos         0.112    0.145    5800\n\n\nOkay, jetzt werden wir die Funktion auf jede Screenname bzw. die Tweets jedes Screennames an.\n\ntweets_list &lt;-\n  list(\n    kl = tweets_to_kl_raw, \n    ms = tweets_to_ms_raw)\n\n\nsentis &lt;-\n  tweets_list %&gt;% \n  map_df(prep_sentiments, .id = \"id\")\n\nJoining with `by = join_by(word)`\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(., sentiws): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6649 of `x` matches multiple rows in `y`.\nℹ Row 3102 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nJoining with `by = join_by(word)`\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(., sentiws): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 17223 of `x` matches multiple rows in `y`.\nℹ Row 2894 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\nCategories:\n\ntextmining\ntwitter\nprogramming"
  },
  {
    "objectID": "posts/summarise06/summarise06.html",
    "href": "posts/summarise06/summarise06.html",
    "title": "summarise06",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\nFassen Sie die Spalte total_pr zusammen und zwar zu verschiedenene Maßen der Streuung (keine Gruppierung).\nWelchem Koeffizienten der Streuung schenken Sie am meisten Vertrauen in diesem Fall? Geben Sie den Wert als Antwort an.\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nOder so:\n\ndata(mariokart, package = \"openintro\")  # aus dem Paket \"openintro\"\n\nDazu muss das Paket openintro auf Ihrem Computer installiert sein.\nZusammenfassen:\n\nlibrary(DescTools)\nmariokart_summarised &lt;- summarise(mariokart, \n                                  pr_sd = sd(total_pr),\n                                  pr_iqr = IQR(total_pr),\n                                  pr_maa = mean(abs(total_pr - mean(total_pr))),\n                                  pr_maa2 = MeanAD(total_pr)\n)  # zusammenfassen\nmariokart_summarised\n\n# A tibble: 1 × 4\n  pr_sd pr_iqr pr_maa pr_maa2\n  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1  25.7   12.8   10.0    10.0\n\n\nMöchte man den MAA nicht von Hand ausrechnen, so kann man die Funktion MeanAD aus dem Paket DescTools nutzen (Denken Sie daran, dass Sie das Paket einmalig installiert haben müssen.)\nDa es Extremwerte gibt in total_pr wird die SD besonders hoch sein. Der Grund ist, dass die SD eine Statistik ist, die auf einem Mittelwert beruht. Außerdem werden bei der Berechnung der SD die einzelnen Werte quadriert, was große Werte überproportional vergrößert. Aus diesem Grund könnte der IQR hier gegenüber anderen Maßen bevorzugt werden.\nLösung: 12.82\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nvariability\nnum"
  },
  {
    "objectID": "posts/penguins-stan-05/penguins-stan-05.html",
    "href": "posts/penguins-stan-05/penguins-stan-05.html",
    "title": "penguins-stan-05",
    "section": "",
    "text": "Aufgabe\nWir untersuchen Einflussfaktoren bzw. Prädiktoren auf das Körpergewicht von Pinguinen. In dieser Aufgabe untersuchen wir den Zusammenhang von Schnabellänge (als UV) und Körpergewicht (als AV).\nAufgabe: Wie breit ist das 95%-ETI, wenn Sie nur die Spezies Adelie untersuchen?\nHinweise:\n\nSie können den Datensatz z.B. hier beziehen oder über das R-Paket palmerpenguins.\nWeitere Hinweise\n\n         \n\n\nLösung\nZentrieren ist eigentlich immer nützlich, aber hier streng genommen nicht unbedingt nötig. Der Hauptgrund dafür ist, dass Stan für uns den Prior für den Intercept festlegt, und zwar auf Basis der Daten, wir uns also nicht um die komische Frage zu kümmern brauchen, welchen Prior wir für den unzentrierten Achsenabschnitt vergeben wollten: Wie schwer sind Pinguins der Schnabellänge Null? Mit zentrierten Prädiktoren ist die Frage nach dem Prior viel einfacher zu beantworten: Wie schwer ist ein Pinguin mit mittelgroßem Schnabel?\nSetup:\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\n\ndata(\"penguins\", package = \"palmerpenguins\")\n\nEs wird in dieser Aufgabe vorausgesetzt, dass Sie den Datensatz selbständig importieren können. Tipp: Kurzes Googeln hilft ggf., den Datensatz zu finden.\nAlternativ könnten Sie den Datensatz als CSV-Datei importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\n\nEin Blick in die Daten zur Kontrolle, ob das Importieren richtig funktioniert hat:\n\npenguins &lt;- data_read(d_path)\npenguins_adelie &lt;- \n  penguins %&gt;% \n  filter(species == \"Adelie\")\n\nglimpse(penguins)\n\nRows: 344\nColumns: 9\n$ rownames          &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ species           &lt;chr&gt; \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"A…\n$ island            &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", …\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;chr&gt; \"male\", \"female\", \"female\", \"\", \"female\", \"male\", \"f…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nVertrauen ist gut, aber - was Golems betrifft - ist Kontrolle eindeutig besser ;-)\n\nm1 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins_adelie, #  Daten\n               seed = 42,  # Repro.\n               refresh = 0)  # nicht so viel Output\n\n\nparameters(m1, ci = .95, ci_method = \"eti\")\n\nParameter      | Median |            95% CI |     pd |  Rhat |     ESS |                       Prior\n----------------------------------------------------------------------------------------------------\n(Intercept)    |  18.20 | [-881.48, 930.13] | 51.75% | 1.000 | 3988.00 | Normal (3700.66 +- 1146.42)\nbill_length_mm |  94.71 | [  71.21, 118.31] |   100% | 1.000 | 3962.00 |     Normal (0.00 +- 430.43)\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nDie Lösung lautet also, wie in der Ausgabe zu den Parametern ersichtlich, 47.1.\n\nCategories:\n\nbayes\nregression\nexam-22"
  },
  {
    "objectID": "posts/Ridges-vergleichen/Ridges-vergleichen.html",
    "href": "posts/Ridges-vergleichen/Ridges-vergleichen.html",
    "title": "Ridges-vergleichen",
    "section": "",
    "text": "Warning: `stat(x)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(x)` instead.\n\n\n\n\n\n\n\n\nDie Mittelwerte der Histogramme sind identisch.\nDie Mediane der Histogramme sind identisch.\nDie Histogramme sind (alle) linksschief.\nDie Histogramme sind (alle) rechtsschief.\nDie Färbung (Füllfarbe) kodiert die Schliffart (cut).\nEinige Histogramme sind normalverteilt."
  },
  {
    "objectID": "posts/Ridges-vergleichen/Ridges-vergleichen.html#answerlist",
    "href": "posts/Ridges-vergleichen/Ridges-vergleichen.html#answerlist",
    "title": "Ridges-vergleichen",
    "section": "",
    "text": "Die Mittelwerte der Histogramme sind identisch.\nDie Mediane der Histogramme sind identisch.\nDie Histogramme sind (alle) linksschief.\nDie Histogramme sind (alle) rechtsschief.\nDie Färbung (Füllfarbe) kodiert die Schliffart (cut).\nEinige Histogramme sind normalverteilt."
  },
  {
    "objectID": "posts/Ridges-vergleichen/Ridges-vergleichen.html#answerlist-1",
    "href": "posts/Ridges-vergleichen/Ridges-vergleichen.html#answerlist-1",
    "title": "Ridges-vergleichen",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nRichtig\nFalsch\nFalsch\n\n\nCategories:\n\nvis\ndyn\nschoice"
  },
  {
    "objectID": "posts/fat-tails-Artikel/fat-tails-Artikel.html",
    "href": "posts/fat-tails-Artikel/fat-tails-Artikel.html",
    "title": "fat-tails-Artikel",
    "section": "",
    "text": "Exercise\nIn diesem Diagramm sehen Sie etwas Nomenklatur für eine Verteilung: Gipfel (Peak), Schultern (shoulders) und Ränder (tails). Bitte klicken Sie den Link, um sich das Diagramm anzuschauen.\nQuelle: Taleb, N. N. (2019). The statistical consequences of fat tails, papers and commentaries. https://nassimtaleb.org/2020/01/final-version-fat-tails/\nZwar sind viele Daten in der Welt normalverteilt, aber längst nicht alle. In jüngerer Zeit sind sog. “Fat Tails” in die Aufmerksamkeit gerückt. Das sind Variablen, bei denen Werte in den Rändern (tails) wahrscheinlicher sind als bei einer Normalverteilung; ein Beispiel für eine Fat-Tail-Verteilung ist die t-Verteilung mit 1 Freiheitsgrad. Sie müssen diese Verteilung nicht weiter kennen, es ist aber nützlich, zu wissen, wozu diese Verteilung nützt\nRecherchieren Sie (Fach-)Artikel, die argumentieren, dass ein bestimmtes Phänomen Fat-Tails zeigt!\n         \n\n\nSolution\n\nKriege\nPandemien\nErfolg auf der Singlebörse Tinder\nKapitelmarkt\n\n\nCategories:\n\nprobability\ndistributions\nfat-tails"
  },
  {
    "objectID": "posts/tidymodels-penguins04/tidymodels-penguins04.html",
    "href": "posts/tidymodels-penguins04/tidymodels-penguins04.html",
    "title": "tidymodels-penguins04",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein kNN-Modell mit tidymodels und zwar anhand des penguins Datensatzes.\nModellgleichung: body_mass_g ~ bill_length_mm, data = d_train.\nGesucht ist R-Quadrat als Maß für die Modellgüte im TEST-Sample.\nHinweise:\n\nFixieren Sie die Zufallszahlen auf den Startwert 42.\nNutzen Sie eine v=5,r=2 CV.\nTunen Sie \\(K\\) (Default-Tuning)\nEntfernen Sie fehlende Werte in den Variablen.\nVerzichten Sie auf weitere Schritte der Vorverarbeitung.\n\n         \n\n\nLösung\nSetup:\n\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nDatensatz auf NAs prüfen:\n\nd2 &lt;-\n  d %&gt;% \n  drop_na() \n\nDatensatz aufteilen:\n\nset.seed(42)\nd_split &lt;- initial_split(d2)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\nWorkflow:\n\nrec1 &lt;-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n  step_naomit(all_numeric())\n\nknn_model &lt;-\n  nearest_neighbor(\n    mode = \"regression\",\n    neighbors = tune()\n  ) \n\nwflow &lt;-\n  workflow() %&gt;%\n  add_recipe(rec1) %&gt;%\n  add_model(knn_model)\n\nwflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\nK-Nearest Neighbor Model Specification (regression)\n\nMain Arguments:\n  neighbors = tune()\n\nComputational engine: kknn \n\n\nBacken:\n\nd_baked &lt;- prep(rec1) %&gt;% bake(new_data = NULL)\nd_baked %&gt;% head()\n\n# A tibble: 6 × 2\n  bill_length_mm body_mass_g\n           &lt;dbl&gt;       &lt;dbl&gt;\n1           34.5        2900\n2           52.2        3450\n3           45.4        4800\n4           42.1        4000\n5           50          5350\n6           41.5        4000\n\n\nAuf NA prüfen:\n\nsum(is.na(d_baked))\n\n[1] 0\n\n\nCV:\n\nset.seed(42)\nfolds &lt;- vfold_cv(d_train, v = 5, repeats = 2)\nfolds\n\n#  5-fold cross-validation repeated 2 times \n# A tibble: 10 × 3\n   splits           id      id2  \n   &lt;list&gt;           &lt;chr&gt;   &lt;chr&gt;\n 1 &lt;split [199/50]&gt; Repeat1 Fold1\n 2 &lt;split [199/50]&gt; Repeat1 Fold2\n 3 &lt;split [199/50]&gt; Repeat1 Fold3\n 4 &lt;split [199/50]&gt; Repeat1 Fold4\n 5 &lt;split [200/49]&gt; Repeat1 Fold5\n 6 &lt;split [199/50]&gt; Repeat2 Fold1\n 7 &lt;split [199/50]&gt; Repeat2 Fold2\n 8 &lt;split [199/50]&gt; Repeat2 Fold3\n 9 &lt;split [199/50]&gt; Repeat2 Fold4\n10 &lt;split [200/49]&gt; Repeat2 Fold5\n\n\nTunen:\n\nd_resamples &lt;-\n  tune_grid(\n    wflow,\n    resamples = folds,\n    control = control_grid(save_workflow = TRUE)\n  )\n\nd_resamples\n\n# Tuning results\n# 5-fold cross-validation repeated 2 times \n# A tibble: 10 × 5\n   splits           id      id2   .metrics          .notes          \n   &lt;list&gt;           &lt;chr&gt;   &lt;chr&gt; &lt;list&gt;            &lt;list&gt;          \n 1 &lt;split [199/50]&gt; Repeat1 Fold1 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [199/50]&gt; Repeat1 Fold2 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [199/50]&gt; Repeat1 Fold3 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [199/50]&gt; Repeat1 Fold4 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [200/49]&gt; Repeat1 Fold5 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [199/50]&gt; Repeat2 Fold1 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [199/50]&gt; Repeat2 Fold2 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [199/50]&gt; Repeat2 Fold3 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [199/50]&gt; Repeat2 Fold4 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [200/49]&gt; Repeat2 Fold5 &lt;tibble [20 × 5]&gt; &lt;tibble [0 × 3]&gt;\n\n\nBester Kandidat:\n\nshow_best(d_resamples)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 7\n  neighbors .metric .estimator  mean     n std_err .config              \n      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1        15 rmse    standard    676.    10    15.6 Preprocessor1_Model10\n2        13 rmse    standard    684.    10    15.7 Preprocessor1_Model09\n3        11 rmse    standard    692.    10    16.4 Preprocessor1_Model08\n4        10 rmse    standard    694.    10    16.5 Preprocessor1_Model07\n5         9 rmse    standard    702.    10    15.8 Preprocessor1_Model06\n\n\n\nfitbest &lt;- fit_best(d_resamples)\nfitbest\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nkknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(15L,     data, 5))\n\nType of response variable: continuous\nminimal mean absolute error: 526.1741\nMinimal mean squared error: 416047.6\nBest kernel: optimal\nBest k: 15\n\n\nLast Fit:\n\nfit_last &lt;- last_fit(fitbest, d_split)\nfit_last\n\n# Resampling results\n# Manual resampling \n# A tibble: 1 × 6\n  splits           id               .metrics .notes   .predictions .workflow \n  &lt;list&gt;           &lt;chr&gt;            &lt;list&gt;   &lt;list&gt;   &lt;list&gt;       &lt;list&gt;    \n1 &lt;split [249/84]&gt; train/test split &lt;tibble&gt; &lt;tibble&gt; &lt;tibble&gt;     &lt;workflow&gt;\n\n\nModellgüte im Test-Sample:\n\nfit_last %&gt;% collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     605.    Preprocessor1_Model1\n2 rsq     standard       0.385 Preprocessor1_Model1\n\n\nR-Quadrat:\n\nsol &lt;- collect_metrics(fit_last)[[\".estimate\"]][2]\nsol\n\n[1] 0.3849557\n\n\n\nCategories:\n\nds1\ntidymodels\nprediction\nyacsda\nstatlearning\nnum"
  },
  {
    "objectID": "posts/adjustieren1/adjustieren1.html",
    "href": "posts/adjustieren1/adjustieren1.html",
    "title": "adjustieren1",
    "section": "",
    "text": "Exercise\nBetrachten Sie folgendes Modell, das den Zusammenhang von PS-Zahl und Spritverbrauch untersucht (Datensatz mtcars).\nAber zuerst zentrieren wir den metrischen Prädiktor hp, um den Achsenabschnitt besser interpretieren zu können.\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(hp_z = hp - mean(hp))\n\n\nlibrary(rstanarm)\nlm1 &lt;- stan_glm(mpg ~ hp_z, data = mtcars,\n                refresh = 0)\nsummary(lm1)\n\nEstimates:\n              mean   sd   10%   50%   90%\n(Intercept) 20.1    0.7 19.2  20.1  21.0 \nhp_z        -0.1    0.0 -0.1  -0.1  -0.1 \nsigma        4.0    0.5  3.4   3.9   4.7 \nJetzt können wir aus dem Achsenabschnitt (Intercept) herauslesen, dass ein Auto mit hp_z = 0 - also mit mittlerer PS-Zahl - vielleicht gut 20 Meilen weit mit einer Gallone Sprit kommt.\nZur Verdeutlichung ein Diagramm zum Modell:\n\nmtcars %&gt;% \n  ggplot() +\n  aes(x = hp_z, y = mpg) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nAdjustieren Sie im Modell die PS-Zahl um die Art des Schaltgetriebes (am), so dass das neue Modell den statistischen Effekt (nicht notwendig auch kausal) der PS-Zahl bereinigt bzw. unabhängig von der Art des Schaltgetriebes widerspiegelt!\nHinweise:\n\nam=0 ist ein Auto mit Automatikgetriebe.\nWir gehen davon aus, dass der Regressionseffekt gleich stark ist auf allen (beiden) Stufen von am. M.a.W.: Es liegt kein Interaktionseffekt vor.\n\n         \n\n\nSolution\n\nlibrary(rstanarm)\nlm2 &lt;- stan_glm(mpg ~ hp_z + am, data = mtcars,\n                refresh = 0)\nsummary(lm2)\n\nEstimates:\n              mean   sd   10%   50%   90%\n(Intercept) 26.6    1.5 24.7  26.6  28.5 \nhp          -0.1    0.0 -0.1  -0.1   0.0 \nam           5.3    1.1  3.8   5.3   6.6 \nsigma        3.0    0.4  2.5   3.0   3.5 \nDie Spalte mean gibt den mittleren geschätzten Wert für den jeweiligen Koeffizienten an, also den Schätzwert zum Koeffizienten.\nDie Koeffizienten zeigen, dass der Achsenabschnitt für Autos mit Automatikgetriebe um etwa 5 Meilen geringer ist als für Autos mit manueller Schaltung: Ein durchschnittliches Auto mit manueller Schaltung kommt also etwa 5 Meilen weiter als ein Auto mit Automatikschaltung, glaubt unser Modell.\n\nmtcars %&gt;% \n  mutate(am = factor(am)) %&gt;% \n  ggplot() +\n  aes(x = hp_z, y = mpg, color = am) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nMan könnte hier noch einen Interaktionseffekt ergänzen.\n\nCategories:\n\nqm2\nlm\nbayes\nstats-nutshell"
  },
  {
    "objectID": "posts/euro-bayes/euro-bayes.html",
    "href": "posts/euro-bayes/euro-bayes.html",
    "title": "euro-bayes",
    "section": "",
    "text": "Exercise\nIn Information Theory, Inference, and Learning Algorithms, stellt David MacKay folgendes Problem.\n“A statistical statement appeared in The Guardian on Friday January 4, 2002:\nWhen spun on edge 250 times, a Belgian one-euro coin came up heads 140 times and tails 110. ‘It looks very suspicious to me,’ said Barry Blight, a statistics lecturer at the London School of Economics. ‘If the coin were unbiased, the chance of getting a result as extreme as that would be less than 7%.’\nBut do these data give evidence that the coin is biased rather than fair?”\nWie wahrscheinlich ist es, dass die Münze (exakt) fair ist, im Lichte dieser Daten?\nHinweise:\n\nUntersuchen Sie die Hypothesen \\(\\pi_0 = 0, \\pi_1 = 0.1, \\pi_2 = 0.2, ..., \\pi_{10} = 1\\) für die Trefferwahrscheinlichkeit (Kopf; heads).\nErstellen Sie ein Bayes-Gitter zur Lösung dieser Aufgabe.\nGehen Sie davon aus, dass Sie indifferent gegenüber der Hypothesen zu den Parameterwerten der Münze sind.\nGeben Sie Prozentzahlen immer als Anteil an und lassen Sie die führende Null weg (z.B. .42).\n\n         \n\n\nSolution\n\n\n\n\n\np_Gitter\nPriori\nLikelihood\nunstd_Post\nPost\n\n\n\n\n0.0\n1\n0.00\n0.00\n0.00\n\n\n0.1\n1\n0.00\n0.00\n0.00\n\n\n0.2\n1\n0.00\n0.00\n0.00\n\n\n0.3\n1\n0.00\n0.00\n0.00\n\n\n0.4\n1\n0.00\n0.00\n0.00\n\n\n0.5\n1\n0.01\n0.01\n0.27\n\n\n0.6\n1\n0.02\n0.02\n0.73\n\n\n0.7\n1\n0.00\n0.00\n0.00\n\n\n0.8\n1\n0.00\n0.00\n0.00\n\n\n0.9\n1\n0.00\n0.00\n0.00\n\n\n1.0\n1\n0.00\n0.00\n0.00\n\n\n\n\n\n\n\n\n\n\nDie Wahrscheinlichkeit \\(Pr(\\pi = 1/2 \\, | \\, X=140)\\) wenn \\(X \\sim Bin(250, 1/2)\\) beträgt ca. 27% oder .27.\nAllerdings würden viele Statistiker:innen nicht (nur) fragen, wie wahrscheinlich 140 Treffer sind. Stattdessen könnte man von folgender Überlegung ausgehen.\nZuerst: Welcher Wert wäre am wahrscheinlichsten, wenn die Münze fair wäre?\n\ndbinom(x = 0:250, size = 250, prob = 1/2) %&gt;% which.max()\n\n[1] 126\n\n\nDer 126. Wert in der Liste 0:250 ist der wahrscheinlichste (also 125 Treffer).\nWenn die Münze fair ist, dann wären doch 15 Treffer mehr als 125 genauso so unwahrscheinlich wie 15 Treffer weniger als 125 Treffer. Beide Ereignisse - 110 und 140 Treffer - sind ja gleich weit entfernt von denjenigen Wert, der am wahrscheinlichsten ist, wenn die Münze fair ist.\nEi typischi Statistiki würde also eher fragen: “Wie wahrscheinlich ist es, dass man ein Ergebnis erhält, dass mind. 15 Treffer entfernt ist von der Trefferzahl, die bei einer fairen Münze zu erwarten ist?”. Aber genug davon für diese Aufgabe :-)\n\nCategories:\n\nprobability\nbayes-grid"
  },
  {
    "objectID": "posts/Ziele-Statistik/Ziele-Statistik.html",
    "href": "posts/Ziele-Statistik/Ziele-Statistik.html",
    "title": "Ziele-Statistik",
    "section": "",
    "text": "Welche von den folgenden Optionen gehört nicht zu den Zielen von Statistik bzw. einer Forschungsfrage mit statistischem Character?\n\n\n\nverstehen\nerklären\nvorhersagen\nbeschreiben"
  },
  {
    "objectID": "posts/Ziele-Statistik/Ziele-Statistik.html#answerlist",
    "href": "posts/Ziele-Statistik/Ziele-Statistik.html#answerlist",
    "title": "Ziele-Statistik",
    "section": "",
    "text": "verstehen\nerklären\nvorhersagen\nbeschreiben"
  },
  {
    "objectID": "posts/Ziele-Statistik/Ziele-Statistik.html#answerlist-1",
    "href": "posts/Ziele-Statistik/Ziele-Statistik.html#answerlist-1",
    "title": "Ziele-Statistik",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nbasics\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/mtcars-abhaengig_var3a/mtcars-abhaengig_var3a.html",
    "href": "posts/mtcars-abhaengig_var3a/mtcars-abhaengig_var3a.html",
    "title": "mtcars-abhaengig_var3a",
    "section": "",
    "text": "Aufgabe\nIm Folgenden ist der Datensatz mtcars zu analysieren. Er ist unter dieser Quelle erhältlich.\nDer Datensatz ist z.B. als CSV-Datei von dieser Webseite abrufbar.\nHilfe zum Datensatz ist via help(\"name_des_datensatzes\") oder auf dieser Webseite abrufbar.\nOb die Variable hp (UV) und Spritverbrauch (mpg; AV) wohl voneinander abhängig sind? Was meinen Sie? Was ist Ihre Einschätzung dazu? Vermutlich haben Sie ein (wenn vielleicht auch implizites) Vorab-Wissen zu dieser Frage. Lassen wir dieses Vorab-Wissen aber einmal außen vor und schauen uns rein Daten dazu an. Vereinfachen wir die Frage etwas, indem wir beide Variablen am Mittelwert aufteilen: Wenn eine Beobachtung (d.h. ein Auto) einen Wert in der jeweiligen Variablen höchstens so groß wie der Mittelwert der Variable aufweist, geben wir der Beobachtung der Wert 0, ansonsten den Wert 1. Das Ereignis \\(A\\) sei “hoher Spritverbrauch”, mpg_high == 1. Das Ereignis \\(B\\) sei “hohe PS_Zahl”, hp_high == 1.\nBerechnen Sie: \\(Pr(\\neg \\text{uv high} \\, | \\, \\text{av high})\\)\nHinweise:\n\nDas “Ellbogen-Zeichen” \\(\\neg\\) kennzeichnet eine logische Negierung (das Gegenteil oder Komplement).\nDie angegebene Wahrscheinlichkeit ist eine bedingte Wahrscheinlichkeit.\nWeitere Hinweise\n\n         \n\n\nLösung\nDieser Prädiktor wurde als UV bestimmt: hp.\nSchauen wir zuerst mal in den Datensatz:\n\ndata(mtcars)  # mtcars importieren\n\nmtcars %&gt;% \n  select(mpg, hp) %&gt;% \n  slice_head(n = 5)\n\n                   mpg  hp\nMazda RX4         21.0 110\nMazda RX4 Wag     21.0 110\nDatsun 710        22.8  93\nHornet 4 Drive    21.4 110\nHornet Sportabout 18.7 175\n\n\nDann berechnen wir die binären Variablen:\n\nmtcars2 &lt;-\n  mtcars %&gt;% \n  select(mpg, hp) %&gt;% \n  mutate(mpg_high = case_when(\n    mpg &lt;= mean(mpg) ~ 0,\n    mpg &gt; mean(mpg) ~ 1\n  )) %&gt;% \n  select(-mpg) \n\nmtcars3 &lt;-  # Jetzt analog für die UV, `hp`:\n  mtcars2 |&gt; \n  mutate(hp_high = case_when(\n    hp &lt;= mean(hp) ~ 0,\n    hp &gt; mean(hp) ~ 1\n  )) |&gt; \n  select(-hp)\n\nDann filtern wir die gesuchten Wahrscheinlichkeiten bzw. Anteile der AV:\n\nmtcars3_filtered &lt;-\n  mtcars3 %&gt;% \n  filter(mpg_high == 1)\n\nmtcars3_filtered\n\n               mpg_high hp_high\nMazda RX4             1       0\nMazda RX4 Wag         1       0\nDatsun 710            1       0\nHornet 4 Drive        1       0\nMerc 240D             1       0\nMerc 230              1       0\nFiat 128              1       0\nHonda Civic           1       0\nToyota Corolla        1       0\nToyota Corona         1       0\nFiat X1-9             1       0\nPorsche 914-2         1       0\nLotus Europa          1       0\nVolvo 142E            1       0\n\n\nDie Anzahl der Zeilen in mtcars3_filtered sagt uns, wie viele Autos die gesuchte Bedingung, also den “hinteren Teil” der Wahrscheinlichkeit, erfüllen.\nZur Erinnerung: Bedingte Wahrscheinlichkeit berechnen ist analog zum Filtern einer Tabelle:\nEs gibt also 14 Autos, die den oben gesuchten “hinteren Teil” der Bedingung erfüllen (mpg_high = 1).\nFiltern wir als nächstes nach dem “vorderen Teil” der gesuchten Wahrscheinlichkeit (was das gleiche ist wie ein Anteil in diesem Fall):\n\nmtcars3_filtered %&gt;% \n  filter(hp_high == 0) \n\n               mpg_high hp_high\nMazda RX4             1       0\nMazda RX4 Wag         1       0\nDatsun 710            1       0\nHornet 4 Drive        1       0\nMerc 240D             1       0\nMerc 230              1       0\nFiat 128              1       0\nHonda Civic           1       0\nToyota Corolla        1       0\nToyota Corona         1       0\nFiat X1-9             1       0\nPorsche 914-2         1       0\nLotus Europa          1       0\nVolvo 142E            1       0\n\n\nEs gibt also 14 Autos, für die gilt hp_high == 0.\nMit count kann man sich die Werte zählen lassen:\n\n\n  hp_high  n\n1       0 14\n\n\nDer gesuchte Wert beträgt also 14/14 = 1.\nVisualisieren wir noch die bedingten Wahrscheinlichkeiten, so könnte man die gesuchten Anteile einfach abzählen:\n\n\n\n\n\nSieht man in dem Diagramm nur eine Farbe (anstelle von zweien), so heißt das, dass es nur eine Gruppe gibt (und nicht zwei). Die Häufigkeit der nicht vorhandenen Gruppe ist demnach Null.\n\nCategories:\n\nprobability\nbayes\nnum"
  },
  {
    "objectID": "posts/import-mtcars/import-mtcars.html",
    "href": "posts/import-mtcars/import-mtcars.html",
    "title": "import-mtcars",
    "section": "",
    "text": "Aufgabe\nFinden Sie den Datensatz “mtcars” online! “mtcars.csv” Tipp: vincentarelbundock- das ist ein guter Ort. Importieren Sie dann den Datensatz in R.\nSagen Sie mir den Namen der letzten Spalte und dort den 1. Wert!\n         \n\n\nLösung\nAntwort: Die letzte Spalte heißt carb und der 1. Wert ist 4.\nAnstelle von data_read aus easystats könnte man auch read.csv verwenden, das ist ein “eingebauter” Befehl in R, für den man kein Paket gestartet haben muss.\n\nCategories:\n\nR\ndata\nnum"
  },
  {
    "objectID": "posts/rope-regr/rope-regr.html",
    "href": "posts/rope-regr/rope-regr.html",
    "title": "rope-regression",
    "section": "",
    "text": "Exercise\nJohn Kruschke hat einen (Absolut-)Wert vorschlagen, als Grenze für Regressionskoeffizienten “vernachlässigbarer” Größe.\nNennen Sie diesen Wert!\nHinweise:\n\nGeben Sie nur Zahlen ein (und ggf. Dezimaltrennzeichen).\nFührende Nullen dürfen auch bei Zahlen kleiner als 1 nicht weggelassen werden.\n\n         \n\n\nSolution\n0.05\n\nCategories:\n\nbayes\nregression\nrope"
  },
  {
    "objectID": "posts/Bayes-Theorem1/Bayes-Theorem1.html",
    "href": "posts/Bayes-Theorem1/Bayes-Theorem1.html",
    "title": "Bayes-Theorem1",
    "section": "",
    "text": "Aufgabe\nEin Krebstest (\\(T\\)) habe die Wahrscheinlichkeit von 0.85, einen vorhandenen Krebs (\\(K\\)) zu erkennen. Diese Wahrscheinlichkeit bezeichnen wir als \\(Pr(T+|K+)\\). Der Test erkennt also die meisten Krebsfälle, und ein paar werden übersehen.\nManchmal macht der Test auch den umgekehrten Fehler: Ein gesunder Mensch wird fälschlich Krebs diagnostiziert, \\(Pr(T+|K-)\\). Diese Wahrscheinlichkeit liegt bei dem Test bei 0.04, zum Glück also relativ gering.\nDie Grundrate dieser Krebsart belaufe sich in der Population auf 0.003, \\(Pr(K+)\\).\nAufgabe: Berechnen Sie die Wahrscheinlichkeit, dass ein Patient tatsächlich Krebs hat, wenn der Test positiv ist, also Krebs diagnostiziert hat!\n         \n\n\nLösung\n\nzaehler_bayes &lt;- Pr_Tpos_geg_Kpos * Pr_Kpos\nPr_Tpos &lt;- (zaehler_bayes + (1-Pr_Kpos) * Pr_Tpos_geg_Kneg)\n\nsol &lt;- Pr_Kpos_geg_Tpos &lt;- zaehler_bayes / Pr_Tpos \nsol &lt;- round(sol, 2)\nsol\n\n[1] 0.06\n\n\nDie Lösung beträgt also: 0.06.\n\nCategories:\n\nbayes\nprobability\nnum"
  },
  {
    "objectID": "posts/stan_glm01/stan_glm01.html",
    "href": "posts/stan_glm01/stan_glm01.html",
    "title": "stan_glm01",
    "section": "",
    "text": "Exercise\nGegeben dem folgenden Modell, geben Sie den Befehl mit stan_glm() an, um die Posteriori-Verteilung zu berechnen.\nLikelihood: \\(h_i \\sim \\mathcal{N}(\\mu, \\sigma)\\)\nPrior für \\(\\mu\\): \\(\\mu \\sim \\mathcal{N}(0, 1)\\) k\n         \n\n\nSolution\n\nlibrary(rstanarm)\n\n\nmodel &lt;-\n  stan_glm(h ~ 1,\n           prior_intercept = normal(0,1),\n           prior_aux = exponential(0.1),\n           daten = meine_Daten\n  )\n\n\nCategories:\n\nprobability\nbayes"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html",
    "title": "germeval10-wordvec-rf",
    "section": "",
    "text": "Erstellen Sie ein prädiktives Modell für Textdaten. Nutzen Sie deutsche Word-Vektoren für das Feature-Engineering.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\ndata(\"germeval_test\", package = \"pradadata\")\n\nDie AV lautet c1. Die (einzige) UV lautet: text.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie Tidymodels.\nNutzen Sie Wikipedia2Vec als Grundlage für die Wordembeddings in deutscher Sprache. Laden Sie die Daten herunter (Achtung: ca. 2.8 GB)."
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#deutsche-textvektoren-importieren",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#deutsche-textvektoren-importieren",
    "title": "germeval10-wordvec-rf",
    "section": "Deutsche Textvektoren importieren",
    "text": "Deutsche Textvektoren importieren\n\ntic()\nwiki_de_embeds &lt;- arrow::read_feather(\n  file = \"/Users/sebastiansaueruser/datasets/word-embeddings/wikipedia2vec/part-0.arrow\")\ntoc()\n\n0.743 sec elapsed\n\nnames(wiki_de_embeds)[1] &lt;- \"word\"\n\nwiki &lt;- as_tibble(wiki_de_embeds)"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#workflow",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#workflow",
    "title": "germeval10-wordvec-rf",
    "section": "Workflow",
    "text": "Workflow\n\n# model:\nmod1 &lt;-\n  rand_forest(mode = \"classification\",\n              mtry = tune())\n\n# recipe:\nrec1 &lt;-\n  recipe(c1 ~ ., data = d_train) |&gt; \n  update_role(id, new_role = \"id\")  |&gt; \n  #update_role(c2, new_role = \"ignore\") |&gt; \n  step_tokenize(text) %&gt;%\n  step_stopwords(text, language = \"de\", stopword_source = \"snowball\") |&gt; \n  step_word_embeddings(text,\n                       embeddings = wiki,\n                       aggregation = \"mean\")\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#preppenbaken",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#preppenbaken",
    "title": "germeval10-wordvec-rf",
    "section": "Preppen/Baken",
    "text": "Preppen/Baken\n\ntic()\nrec1_prepped &lt;- prep(rec1)\ntoc()\n\n68.465 sec elapsed\n\n\n\nd_train_baked &lt;-\n  bake(rec1_prepped, new_data = NULL)\nhead(d_train_baked)\n\n# A tibble: 6 × 102\n     id c1      wordembed_text_V2 wordembed_text_V3 wordembed_text_V4\n  &lt;int&gt; &lt;fct&gt;               &lt;dbl&gt;             &lt;dbl&gt;             &lt;dbl&gt;\n1     1 OTHER             -0.0648          -0.0664             0.0242\n2     2 OTHER             -0.207           -0.0102            -0.118 \n3     3 OTHER             -0.246           -0.110             -0.195 \n4     4 OTHER             -0.0139          -0.241             -0.135 \n5     5 OFFENSE           -0.0803          -0.164             -0.160 \n6     6 OTHER             -0.195           -0.00456           -0.132 \n# ℹ 97 more variables: wordembed_text_V5 &lt;dbl&gt;, wordembed_text_V6 &lt;dbl&gt;,\n#   wordembed_text_V7 &lt;dbl&gt;, wordembed_text_V8 &lt;dbl&gt;, wordembed_text_V9 &lt;dbl&gt;,\n#   wordembed_text_V10 &lt;dbl&gt;, wordembed_text_V11 &lt;dbl&gt;,\n#   wordembed_text_V12 &lt;dbl&gt;, wordembed_text_V13 &lt;dbl&gt;,\n#   wordembed_text_V14 &lt;dbl&gt;, wordembed_text_V15 &lt;dbl&gt;,\n#   wordembed_text_V16 &lt;dbl&gt;, wordembed_text_V17 &lt;dbl&gt;,\n#   wordembed_text_V18 &lt;dbl&gt;, wordembed_text_V19 &lt;dbl&gt;, …"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#tuninigfitting",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#tuninigfitting",
    "title": "germeval10-wordvec-rf",
    "section": "Tuninig/Fitting",
    "text": "Tuninig/Fitting\n\ntic()\nwf_fit &lt;-\n  wf1 %&gt;% \n  tune_grid(\n    grid = 5,\n    resamples = vfold_cv(strata = c1, \n                         v = 5,\n                         data = d_train),\n    control = control_grid(save_pred = TRUE,\n                           verbose = TRUE,\n                           save_workflow = FALSE)) \ntoc()\nbeep()\n\nOder das schon in grauer Vorzeit berechnete Objekt importieren:\n\nwf_fit &lt;- read_rds(\"/Users/sebastiansaueruser/github-repos/rexams-exercises/objects/germeval10-wordvec-rf.rds\")"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#plot-performance",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#plot-performance",
    "title": "germeval10-wordvec-rf",
    "section": "Plot performance",
    "text": "Plot performance\n\nautoplot(wf_fit)\n\n\n\n\n\nshow_best(wf_fit)\n\n# A tibble: 5 × 7\n   mtry .metric .estimator  mean     n std_err .config             \n  &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1     2 roc_auc binary     0.771     5 0.00846 Preprocessor1_Model3\n2    32 roc_auc binary     0.749     5 0.00878 Preprocessor1_Model4\n3    41 roc_auc binary     0.747     5 0.00859 Preprocessor1_Model2\n4    67 roc_auc binary     0.741     5 0.00952 Preprocessor1_Model1\n5    96 roc_auc binary     0.739     5 0.00883 Preprocessor1_Model5"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#finalisieren",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#finalisieren",
    "title": "germeval10-wordvec-rf",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nbest_params &lt;- select_best(wf_fit)\ntic()\nwf_finalized &lt;- finalize_workflow(wf1, best_params)\nlastfit1 &lt;- fit(wf_finalized, data = d_train)\ntoc()\n\n21.916 sec elapsed"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#test-set-güte",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#test-set-güte",
    "title": "germeval10-wordvec-rf",
    "section": "Test-Set-Güte",
    "text": "Test-Set-Güte\n\ntic()\npreds &lt;-\n  predict(lastfit1, new_data = germeval_test)\ntoc()\n\n10.773 sec elapsed\n\n\n\nd_test &lt;-\n  germeval_test |&gt; \n  bind_cols(preds) |&gt; \n  mutate(c1 = as.factor(c1))\n\n\nmy_metrics &lt;- metric_set(accuracy, f_meas)\nmy_metrics(d_test,\n           truth = c1,\n           estimate = .pred_class)\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.689\n2 f_meas   binary         0.196"
  },
  {
    "objectID": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#fazit",
    "href": "posts/germeval10-wordvec-rf/germeval10-wordvec-rf.html#fazit",
    "title": "germeval10-wordvec-rf",
    "section": "Fazit",
    "text": "Fazit\nwikipedia2vec ist für die deutsche Sprache vorgekocht. Das macht Sinn für einen deutschsprachigen Corpus.\nDas Modell braucht doch ganz schön viel Rechenzeit.\nAchtung: Mit dem Parameter save_pred = TRUE wird der Workflow größer als 3 GB.\n\nCategories:\n\ntextmining\ndatawrangling\ngermeval\nprediction\ntidymodels\nstring"
  },
  {
    "objectID": "posts/variation02/variation02.html",
    "href": "posts/variation02/variation02.html",
    "title": "variablity02",
    "section": "",
    "text": "In welchem Datensatz gibt es mehr Variation?\nDatensatz A:\n\n\n\n\n\nDatensatz B:\n\n\n\n\n\nDatensatz C:\n\n\n\n\n\nDatensatz D:\n\n\n\n\n\n\n\n\nA\nB\nC\nD"
  },
  {
    "objectID": "posts/variation02/variation02.html#answerlist",
    "href": "posts/variation02/variation02.html#answerlist",
    "title": "variablity02",
    "section": "",
    "text": "A\nB\nC\nD"
  },
  {
    "objectID": "posts/variation02/variation02.html#answerlist-1",
    "href": "posts/variation02/variation02.html#answerlist-1",
    "title": "variablity02",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nWahr\n\n\nCategories:\n\nvariablity\nbasics\nschoice"
  },
  {
    "objectID": "posts/abh-ereignisse/abh-ereignisse.html",
    "href": "posts/abh-ereignisse/abh-ereignisse.html",
    "title": "abh-ereignisse",
    "section": "",
    "text": "Aufgabe\n\n\n\n\n\nLesen Sie folgende Wahrscheinlichkeiten aus dem Diagramm ab:\n\n\\(Pr(A)\\)\n\\(Pr(B)\\)\n\\(Pr(AB)\\)\n\\(Pr(BA)\\)\n\\(Pr(B|A)\\)\n\\(Ür(A|B)\\)\n\nHinweise:\n\nDas Ereignis “B tritt ein” ist mit “B+” im Diagramm eingezeichnet (entsprechend für A). Analog ist das Ereignis “B tritt nicht ein” mit “B-” eingezeichnet (entsprechend für A).\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\n\n\\(Pr(A) = 1/2 + 1/8 = 5/8\\)\n\\(Pr(B) = 1/2\\)\n\\(Pr(AB) = 1/2 \\cdot 3/4 = 3/8\\)\n\\(Pr(BA) = Pr(AB) = 3/8\\)\n\\(Pr(B|A) = 3/5\\)\n\\(Ür(A|B) = 3/4\\)\n\n\nCategories:\n\nR\nprobability\nstring"
  },
  {
    "objectID": "posts/voll-normal/voll-normal.html",
    "href": "posts/voll-normal/voll-normal.html",
    "title": "voll-normal",
    "section": "",
    "text": "Exercise\nNehmen wir an, \\(k=10\\) voneinander unabhängige Eigenschaften \\(E_1, E_2, \\ldots, E_{10}\\) bestimmen, ob eine Person als “normal” angesehen wird. Jede dieser Eigenschaften kann entweder mit “normal” (n) oder aber “nichtnormal” (nn) ausgeprägt sein, wobei wir nicht genau vorhersagen können, wie diese Eigenschaften bei einer Person bestellt sein werden.\nAls Zufallsexperiment ausgedrückt: \\(\\Omega_E := \\{n, nn\\}\\) mit den zwei Ergebnissen \\(n\\) und \\(nn\\).\nMit der Wahrscheinlichkeit \\(Pr_{E_i} = 0.9\\) treffe das Ereignis \\(N_i := E_i = \\{n\\}\\) (für alle \\(i = 1, \\ldots, k\\)) zu.\nNehmen wir weiter an, als “voll normal” (\\(VN\\)) wird eine Person genau dann angesehen, wenn sie in allen \\(k\\) Eigenschaften “normal” ausgeprägt ist, das Ereignis \\(N\\) also für alle \\(k\\) Eigenschaften auftritt.\n\nNennen Sie Beispiele für mögliche Eigenschaften \\(E\\)!\nWie groß ist die Wahrscheinlichkeit - unter den hier geschilderten Annahmen -, dass eine Person “voll normal” ist?\nDiskutieren Sie die Plausibilität der Annahmen!\n\n         \n\n\nSolution\n\nIntelligenz, Aussehen, Gesundheit, Herkunft, Hautfarbe, sexuelle Identität oder Neigung, …\nFür unabhängige Ereignisse ist die Wahrscheinlichkeit, dass sie alle eintreten, gleich dem Produkt ihrer Einzelwahrscheinlichkeiten:\n\n\\(VN = Pr(E_i)^{10} = 0.9^{10} \\approx 0.3486784\\)\nDie Wahrscheinlichkeit, dass \\(VN\\) nicht eintritt (Nicht-Voll-Normal, NVN), ist dann die Gegenwahrscheinlichkeit: \\(NVN = 1- VN\\).\n\nMehrere der Annahmen sind diskutabel. So könnten die Eigenschaften nicht unabhängig sein, dann wäre der hier gezeigte Rechenweg nicht anwendbar. Die Wahrscheinlichkeit für “normal” könnte höher oder niedriger sein, wobei 90% nicht ganz unplausibel ist. Schließlich unterliegt das Ereignis \\(E_N\\) mit den Ergebnissen \\(n\\) bzw. \\(nn\\) sozialpsychologischen bzw. soziologischen Einflüssen und kann variieren.\n\n\nCategories:\n\nprobability\nmeta"
  },
  {
    "objectID": "posts/kausal09/kausal09.html",
    "href": "posts/kausal09/kausal09.html",
    "title": "kausal09",
    "section": "",
    "text": "Ein Forschungsteam aus Epidemiologen untersucht den (möglicherweise kausalen) Zusammenhang von Erziehung (education) und Diabetes (diabetes). Das Team schlägt folgendes Modell zur Erklärung des Zusammenhangs vor (s. DAG).\n\n\n\n\n\nNochmal den gleich DAG ohne “Schilder”, damit man die Pfeilspitzen besser sieht:\n\n\n\n\n\nSollte die Krankengeschichte der Mutter hinsichtlich Diabetes kontrolliert werden, um den kausalen Effekt von Erziehung auf Diabetes zu identifizieren?\n\n\n\nNein, Mother's Diabetes sollte nicht kontrolliert werden, da so ein Collider Bias (Kollisionsverzerrung) resultiert.\nNein, Mother's Diabetes sollte nicht kontrolliert werden, da so eine Konfundierung resultiert.\nNein, Mother's Diabetes sollte nicht kontrolliert werden, da zwar keine Verzerrung entsteht, es aber auch nicht nötig ist.\nJa, Mother's Diabetes sollte kontrolliert werden, da so ein Collider Bias (Kollisionsverzerrung) vermieden wird.\nJa, Mother's Diabetes sollte kontrolliert werden, da so eine Konfundierung vermieden wird."
  },
  {
    "objectID": "posts/kausal09/kausal09.html#answerlist",
    "href": "posts/kausal09/kausal09.html#answerlist",
    "title": "kausal09",
    "section": "",
    "text": "Nein, Mother's Diabetes sollte nicht kontrolliert werden, da so ein Collider Bias (Kollisionsverzerrung) resultiert.\nNein, Mother's Diabetes sollte nicht kontrolliert werden, da so eine Konfundierung resultiert.\nNein, Mother's Diabetes sollte nicht kontrolliert werden, da zwar keine Verzerrung entsteht, es aber auch nicht nötig ist.\nJa, Mother's Diabetes sollte kontrolliert werden, da so ein Collider Bias (Kollisionsverzerrung) vermieden wird.\nJa, Mother's Diabetes sollte kontrolliert werden, da so eine Konfundierung vermieden wird."
  },
  {
    "objectID": "posts/kausal09/kausal09.html#answerlist-1",
    "href": "posts/kausal09/kausal09.html#answerlist-1",
    "title": "kausal09",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/max-corr2/max-corr2.html",
    "href": "posts/max-corr2/max-corr2.html",
    "title": "max-corr2",
    "section": "",
    "text": "Aufgabe\nWelches Diagramm zeigt den stärksten (absoluten) linearen negativen Zusammenhang (Korrelation)?\nGeben Sie die Nummer ein, die in der Kopfzeile jedes Teildiagramms angezeigt wird.\n         \n\n\nLösung\n\n\n\n\n\n\nCategories:\n\nvis\n‘2023’\nnum"
  },
  {
    "objectID": "posts/nichtlineare-regr1/nichtlineare-regr1.html",
    "href": "posts/nichtlineare-regr1/nichtlineare-regr1.html",
    "title": "nichtlineare-regr1",
    "section": "",
    "text": "Aufgabe\nWir suchen ein Modell, das einen nichtlinearen Zusammenhang von PS-Zahl und Spritverbrauch darstellt (Datensatz mtcars).\nGeben Sie dafür ein mögliches Modell an! Nutzen Sie den R-Befehl lm.\n         \n\n\nLösung\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(mpg_log = log(mpg)) \n\nlm1 &lt;- lm(mpg_log ~ hp, data = mtcars)\nsummary(lm1)\n\n\nCall:\nlm(formula = mpg_log ~ hp, data = mtcars)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.41577 -0.06583 -0.01737  0.09827  0.39621 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  3.4604669  0.0785838  44.035  &lt; 2e-16 ***\nhp          -0.0034287  0.0004867  -7.045 7.85e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1858 on 30 degrees of freedom\nMultiple R-squared:  0.6233,    Adjusted R-squared:  0.6107 \nF-statistic: 49.63 on 1 and 30 DF,  p-value: 7.853e-08\n\n\nVisualisieren wir die Vorhersagen des Modells:\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(pred = predict(lm1))\n\n\nmtcars %&gt;% \n  ggplot() +\n  aes(x = hp) +\n  geom_line(aes( y = pred), color = \"blue\") +\n  geom_point(aes(y = mpg_log)) +\n  labs(y = \"log(mpg)\",\n       title = \"Vorhersage von log-mpg in einem Log-Y-Modell\")\n\n\n\n\nOder so visualisieren:\n\nlibrary(easystats)\nestimate_expectation(lm1) %&gt;% plot()\n\n\n\n\nMöchte man auf der Y-Achse mpg und nicht log(mpg) anzeigen, muss man den Logarithmus wieder “auflösen”, das erreicht man mit der Umkehrfunktion des Logarithmus, das Exponentieren (man “delogarithmiert”):\n\\[\\begin{aligned}\nlog(y) &= x \\qquad | \\text{Y in Log-Form}\\\\\n    exp(log(y)) &= exp(x)  \\qquad | \\text{Jetzt exponenzieren wir beide Seiten}\\\\\n    y = exp(x)\n\\end{aligned}\\]\nDabei gilt \\(exp(x) = e^x\\), mit \\(e\\) als Eulersche Zahl (2.71…).\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(pred_delog = exp(pred))  # delogarithmieren\n\n\nmtcars %&gt;% \n  ggplot() +\n  aes(x = hp) +\n  geom_line(aes( y = pred_delog), color = \"blue\") +\n  geom_point(aes(y = mpg_log)) +\n  labs(y = \"mpg\",\n       title = \"Vorhersage von mpg in einem Log-Y-Modell\")\n\n\n\n\n\nCategories:\n\nlm\nvis\nqm2\nregression\nstring"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html",
    "title": "wfsets_penguins01",
    "section": "",
    "text": "Berechnen Sie die Vorhersagegüte (RMSE) für folgende Lernalgorithmen:\n\nlineares Modell\nknn (neighbors: tune)\n\nModellgleichung: body_mass_g ~ bill_length_mm, data = d_train.\nNutzen Sie minimale Vorverarbeitung."
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#setup",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#setup",
    "title": "wfsets_penguins01",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\ndata(penguins, package = \"palmerpenguins\")"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#daten",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#daten",
    "title": "wfsets_penguins01",
    "section": "Daten",
    "text": "Daten\n\nd &lt;-\n  penguins %&gt;% \n  drop_na()\n\n\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#modelle",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#modelle",
    "title": "wfsets_penguins01",
    "section": "Modelle",
    "text": "Modelle\nLineares Modell:\n\nmod_lin &lt;- linear_reg()\n\nmod_knn &lt;- nearest_neighbor(mode = \"regression\",\n                                  neighbors = tune())"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#rezepte",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#rezepte",
    "title": "wfsets_penguins01",
    "section": "Rezepte",
    "text": "Rezepte\n\nrec_basic &lt;- recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n         step_normalize(all_predictors())\n\nrec_basic"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#resampling",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#resampling",
    "title": "wfsets_penguins01",
    "section": "Resampling",
    "text": "Resampling\n\nrsmpls &lt;- vfold_cv(d_train)"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#workflow-set",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#workflow-set",
    "title": "wfsets_penguins01",
    "section": "Workflow Set",
    "text": "Workflow Set\n\nwf_set &lt;-\n  workflow_set(\n    preproc = list(rec_simple = rec_basic),\n    models = list(mod_lm = mod_lin,\n                  mod_nn = mod_knn)\n  )\n\nwf_set\n\n# A workflow set/tibble: 2 × 4\n  wflow_id          info             option    result    \n  &lt;chr&gt;             &lt;list&gt;           &lt;list&gt;    &lt;list&gt;    \n1 rec_simple_mod_lm &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n2 rec_simple_mod_nn &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#fitten",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#fitten",
    "title": "wfsets_penguins01",
    "section": "Fitten",
    "text": "Fitten\n\nwf_fit &lt;-\n  wf_set %&gt;% \n  workflow_map(resamples = rsmpls)\n\nwf_fit\n\n# A workflow set/tibble: 2 × 4\n  wflow_id          info             option    result   \n  &lt;chr&gt;             &lt;list&gt;           &lt;list&gt;    &lt;list&gt;   \n1 rec_simple_mod_lm &lt;tibble [1 × 4]&gt; &lt;opts[1]&gt; &lt;rsmp[+]&gt;\n2 rec_simple_mod_nn &lt;tibble [1 × 4]&gt; &lt;opts[1]&gt; &lt;tune[+]&gt;\n\n\nCheck:\n\nwf_fit %&gt;% pluck(\"result\")\n\n[[1]]\n# Resampling results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics         .notes          \n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;           &lt;list&gt;          \n 1 &lt;split [224/25]&gt; Fold01 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [224/25]&gt; Fold02 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [224/25]&gt; Fold03 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [224/25]&gt; Fold04 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [224/25]&gt; Fold05 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [224/25]&gt; Fold06 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [224/25]&gt; Fold07 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [224/25]&gt; Fold08 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [224/25]&gt; Fold09 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [225/24]&gt; Fold10 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\n[[2]]\n# Tuning results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics          .notes          \n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;            &lt;list&gt;          \n 1 &lt;split [224/25]&gt; Fold01 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [224/25]&gt; Fold02 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [224/25]&gt; Fold03 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [224/25]&gt; Fold04 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [224/25]&gt; Fold05 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [224/25]&gt; Fold06 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [224/25]&gt; Fold07 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [224/25]&gt; Fold08 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [224/25]&gt; Fold09 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [225/24]&gt; Fold10 &lt;tibble [16 × 5]&gt; &lt;tibble [0 × 3]&gt;"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#bester-kandidat",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#bester-kandidat",
    "title": "wfsets_penguins01",
    "section": "Bester Kandidat",
    "text": "Bester Kandidat\n\nautoplot(wf_fit)\n\n\n\n\n\nautoplot(wf_fit, select_best = TRUE)\n\n\n\n\n\nrank_results(wf_fit, rank_metric = \"rmse\") %&gt;% \n  filter(.metric == \"rmse\")\n\n# A tibble: 9 × 9\n  wflow_id          .config .metric  mean std_err     n preprocessor model  rank\n  &lt;chr&gt;             &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;        &lt;chr&gt; &lt;int&gt;\n1 rec_simple_mod_nn Prepro… rmse     642.    31.3    10 recipe       near…     1\n2 rec_simple_mod_nn Prepro… rmse     646.    30.9    10 recipe       near…     2\n3 rec_simple_mod_lm Prepro… rmse     647.    24.0    10 recipe       line…     3\n4 rec_simple_mod_nn Prepro… rmse     648.    32.2    10 recipe       near…     4\n5 rec_simple_mod_nn Prepro… rmse     659.    31.7    10 recipe       near…     5\n6 rec_simple_mod_nn Prepro… rmse     660.    32.2    10 recipe       near…     6\n7 rec_simple_mod_nn Prepro… rmse     687.    36.4    10 recipe       near…     7\n8 rec_simple_mod_nn Prepro… rmse     729.    39.7    10 recipe       near…     8\n9 rec_simple_mod_nn Prepro… rmse     786.    47.6    10 recipe       near…     9\n\n\nAm besten war das lineare Modell, aber schauen wir uns auch mal das knn-Modell an, v.a. um zu wissen, wie man den besten Tuningparameter-Wert sieht:\n\nextract_workflow_set_result(wf_fit, \"rec_simple_mod_nn\") %&gt;% \n  select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 1 × 2\n  neighbors .config             \n      &lt;int&gt; &lt;chr&gt;               \n1        14 Preprocessor1_Model8"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#last-fit",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#last-fit",
    "title": "wfsets_penguins01",
    "section": "Last Fit",
    "text": "Last Fit\n\nbest_wf &lt;-\n  wf_fit %&gt;% \n  extract_workflow(\"rec_simple_mod_lm\")\n\nFinalisieren müssen wir diesen Workflow nicht, da er keine Tuningparameter hatte.\n\nfit_final &lt;-\n  best_wf %&gt;% \n  last_fit(d_split)"
  },
  {
    "objectID": "posts/wfsets_penguins01/wfsets_penguins01.html#modellgüte-im-test-set",
    "href": "posts/wfsets_penguins01/wfsets_penguins01.html#modellgüte-im-test-set",
    "title": "wfsets_penguins01",
    "section": "Modellgüte im Test-Set",
    "text": "Modellgüte im Test-Set\n\ncollect_metrics(fit_final)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     658.    Preprocessor1_Model1\n2 rsq     standard       0.342 Preprocessor1_Model1\n\n\n\nCategories:\n\nR\nstatlearning\ntidymodels\nnum"
  },
  {
    "objectID": "posts/lm-Standardfehler/lm-Standardfehler.html",
    "href": "posts/lm-Standardfehler/lm-Standardfehler.html",
    "title": "lm-Standardfehler",
    "section": "",
    "text": "Man kann angeben, wie genau eine Schätzung von Regressionskoeffizienten die Grundgesamtheit widerspiegelt. Zumeist wird dazu der Standardfehler (engl. standard error, SE) verwendet.\nIn dieser Übung untersuchen wir, wie sich der SE als Funktion der Stichprobengröße, \\(n\\), verhält.\nErstellen Sie dazu folgenden Datensatz:\n\nlibrary(tidyverse)\n\nn &lt;- 2^4\n\nd &lt;-\n  tibble(x = rnorm(n = n),  # im Default: mean = 0, sd = 1\n         y = x + rnorm(n, mean = 0, sd = .5))\n\nHier ist das Ergebnis. Uns interessiert v.a. Std. Error für den Prädiktor x:\n\nlm(y ~ x, data = d) %&gt;% \nsummary()\n\n\nCall:\nlm(formula = y ~ x, data = d)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.8039 -0.3986 -0.1500  0.6939  0.8013 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   0.1610     0.1446   1.114    0.284    \nx             1.1144     0.1660   6.711 9.92e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5777 on 14 degrees of freedom\nMultiple R-squared:  0.7629,    Adjusted R-squared:  0.746 \nF-statistic: 45.04 on 1 and 14 DF,  p-value: 9.919e-06\n\n\nHier haben wir eine Tabelle mit zwei Variablen, x und y, definiert mit n=16.\nVerdoppeln Sie die Stichprobengröße 5 Mal und betrachten Sie, wie sich die Schätzgenauigkeit, gemessen über den SE, verändert. Berechnen Sie dazu für jedes n eine Regression mit x als Prädiktor und y als AV!\nBei welcher Stichprobengröße ist SE am kleinsten?\n\n\n\n\\(2^5\\)\n\\(2^6\\)\n\\(2^7\\)\n\\(2^8\\)\n\\(2^9\\)"
  },
  {
    "objectID": "posts/lm-Standardfehler/lm-Standardfehler.html#answerlist",
    "href": "posts/lm-Standardfehler/lm-Standardfehler.html#answerlist",
    "title": "lm-Standardfehler",
    "section": "",
    "text": "\\(2^5\\)\n\\(2^6\\)\n\\(2^7\\)\n\\(2^8\\)\n\\(2^9\\)"
  },
  {
    "objectID": "posts/lm-Standardfehler/lm-Standardfehler.html#answerlist-1",
    "href": "posts/lm-Standardfehler/lm-Standardfehler.html#answerlist-1",
    "title": "lm-Standardfehler",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nFalsch\nFalsch\nFalsch\nWahr. Die größte Stichprobe impliziert den kleinsten SE, ceteris paribus.\n\n\nCategories:\n\ninference\nlm\nqm2"
  },
  {
    "objectID": "posts/wskt-quiz14/wskt-quiz14.html",
    "href": "posts/wskt-quiz14/wskt-quiz14.html",
    "title": "wskt-quiz14",
    "section": "",
    "text": "Behauptung:\n\\(Pr(AB) = Pr(A|B) \\cdot Pr(B)\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz14/wskt-quiz14.html#answerlist",
    "href": "posts/wskt-quiz14/wskt-quiz14.html#answerlist",
    "title": "wskt-quiz14",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz14/wskt-quiz14.html#answerlist-1",
    "href": "posts/wskt-quiz14/wskt-quiz14.html#answerlist-1",
    "title": "wskt-quiz14",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Lose-Nieten-Binomial-Grid/Lose-Nieten-Binomial-Grid.html",
    "href": "posts/Lose-Nieten-Binomial-Grid/Lose-Nieten-Binomial-Grid.html",
    "title": "Lose-Nieten-Binomial-Grid",
    "section": "",
    "text": "Exercise\nIn einer Lostrommel befinden sich “sehr viele” Lose, davon ein Anteil \\(p\\) Treffer (und \\(1-p\\) Nieten), mit zunächst \\(p=0.01\\).\nSie kaufen \\(n=10\\) Lose.\n\nWie groß ist die Wahrscheinlichkeit für genau \\(k=0,1,...,10\\) Treffer?\nSagen wir, Sie haben 3 Treffer in den 10 Losen. Yeah! Jetzt sei \\(p\\) unbekannt und Sie sind indifferent zu den einzelnen Werten von \\(p\\). Visualisieren Sie die Posteriori-Wahrscheinlichkeitsverteilung mit ca. 100 Gridwerten. Was beobachten Sie?\nVariieren Sie \\(n\\), aber halten Sie die Trefferquote bei 1/3. Was beobachten Sie?\n\nNutzen Sie die Gittermethode. Treffen Sie Annahmen, wo nötig.\n         \n\n\nSolution\n\nWie groß ist die Wahrscheinlichkeit für genau \\(k=0,1,...,10\\) Treffer?\n\n\nd_a &lt;- \n  tibble(\n    k = 0:10,\n    wskt = dbinom(k, size = 10, prob = .01))\n\nd_a %&gt;% \n  ggplot() +\n  aes(x = k, y = wskt) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = 1:10)\n\n\n\n\n\n\n\n\n\n\n\n\nk\nwskt\n\n\n\n\n0\n9.04 × 10−1\n\n\n1\n9.14 × 10−2\n\n\n2\n4.15 × 10−3\n\n\n3\n1.12 × 10−4\n\n\n4\n1.98 × 10−6\n\n\n5\n2.40 × 10−8\n\n\n6\n2.02 × 10−10\n\n\n7\n1.16 × 10−12\n\n\n8\n4.41 × 10−15\n\n\n9\n9.90 × 10−18\n\n\n10\n1.00 × 10−20\n\n\n\n\n\n\n\n\nSagen wir, Sie haben 3 Treffer in den 10 Losen. Yeah! Jetzt sei \\(p\\) unbekannt und Sie sind indifferent zu den einzelnen Werten von \\(p\\). Visualisieren Sie die Posteriori-Wahrscheinlichkeitsverteilung mit ca. 100 Gridwerten. Was beobachten Sie?\n\n\nd2 &lt;-\n  tibble(\n    p_grid = seq(0, 1, by = 0.01),\n    prior = 1,\n    Likelihood = dbinom(x = 3, size = 10, prob = p_grid),\n    unstand_post = prior * Likelihood,\n    std_post = unstand_post / sum(unstand_post)\n  )\n\nd2 %&gt;% \n  ggplot() +\n  aes(x = p_grid, y = std_post) +\n  geom_point() +\n  geom_line()\n\n\n\n\nDer Modus liegt bei ca 1/3. Der Bereich plausibler Werte für \\(p\\) liegt ca. zwischen 0.1 und und 0.7, grob visuell geschätzt. Mehr dazu später.\n\nVariieren Sie \\(n\\), aber halten Sie die Trefferquote bei 1/3. Was beobachten Sie?\n\n\n# n = 2\nd3 &lt;-\n  tibble(\n    p_grid = seq(0,1, by = 0.01),\n    prior = 1,\n    Likelihood = dbinom(x = 2, size = 6, prob = p_grid),\n    unstand_post = prior * Likelihood,\n    std_post = unstand_post / sum(unstand_post)\n  )\n\nd3 %&gt;% \n  ggplot() +\n  aes(x = p_grid, y = std_post) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"n=20\")\n\n\n# n = 20\nd4 &lt;-\n  tibble(\n    p_grid = seq(0,1, by = 0.01),\n    prior = 1,\n    Likelihood = dbinom(x = 20, size = 60, prob = p_grid),\n    unstand_post = prior * Likelihood,\n    std_post = unstand_post / sum(unstand_post)\n  )\n\nd4 %&gt;% \n  ggplot() +\n  aes(x = p_grid, y = std_post) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"n = 20\")\n\n# n = 200\nd5 &lt;-\n  tibble(\n    p_grid = seq(0,1, by = 0.01),\n    prior = 1,\n    Likelihood = dbinom(x = 200, size = 600, prob = p_grid),\n    unstand_post = prior * Likelihood,\n    std_post = unstand_post / sum(unstand_post)\n  )\n\nd5 %&gt;% \n  ggplot() +\n  aes(x = p_grid, y = std_post) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"n = 20\")\n\n\n\n\n\n\n\n\n\n\nDer Modus und andere Maße der zentralen Tendenz bleiben gleich; die Streuung wird geringer.\n\nCategories:\n\nprobability\nbinomial"
  },
  {
    "objectID": "posts/wskt-quiz13/wskt-quiz13.html",
    "href": "posts/wskt-quiz13/wskt-quiz13.html",
    "title": "wskt-quiz13",
    "section": "",
    "text": "Behauptung: Die Post-Verteilung gibt die Wahrscheinlichkeit der Daten an, gegeben der Hypothese.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz13/wskt-quiz13.html#answerlist",
    "href": "posts/wskt-quiz13/wskt-quiz13.html#answerlist",
    "title": "wskt-quiz13",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz13/wskt-quiz13.html#answerlist-1",
    "href": "posts/wskt-quiz13/wskt-quiz13.html#answerlist-1",
    "title": "wskt-quiz13",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Schiefe1/Schiefe1.html",
    "href": "posts/Schiefe1/Schiefe1.html",
    "title": "Schiefe1",
    "section": "",
    "text": "Welche der Abbildungen zeigt am deutlichsten eine rechtsschiefe Verteilung?\n\n\n\n\n\n\n\n\nA\nB\nC\nD"
  },
  {
    "objectID": "posts/Schiefe1/Schiefe1.html#answerlist",
    "href": "posts/Schiefe1/Schiefe1.html#answerlist",
    "title": "Schiefe1",
    "section": "",
    "text": "A\nB\nC\nD"
  },
  {
    "objectID": "posts/Schiefe1/Schiefe1.html#answerlist-1",
    "href": "posts/Schiefe1/Schiefe1.html#answerlist-1",
    "title": "Schiefe1",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nFalsch\nFalsch\n\n\nCategories:\nschoice"
  },
  {
    "objectID": "posts/mariokart-korr1/mariokart-korr1.html",
    "href": "posts/mariokart-korr1/mariokart-korr1.html",
    "title": "mariokart-korr1",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie die Korrelation von Verkaufspreis (total_pr) und Startgebot (start_pr)!\nHinweise:\n\nRunden Sie auf 2 Dezimalstellen.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;- \nd  %&gt;% \n  summarise(pr_cor = cor(total_pr, start_pr))\nsolution\n\n      pr_cor\n1 0.07340603\n\n\nAlternativ kann man (komfortabel) die Korrelation z.B. so berechnen:\n\nd %&gt;% \n  select(start_pr, total_pr) %&gt;% \n  correlation()\n\n# Correlation Matrix (pearson-method)\n\nParameter1 | Parameter2 |    r |        95% CI | t(141) |     p\n---------------------------------------------------------------\nstart_pr   |   total_pr | 0.07 | [-0.09, 0.23] |   0.87 | 0.384\n\np-value adjustment method: Holm (1979)\nObservations: 143\n\n\nMan kann das Ergebnis von correlation auch einfach in ein Diagramm überführen:\n\nmariokart_corr1 &lt;- \nd %&gt;% \n  select(start_pr, total_pr) %&gt;% \n  correlation()\n\nmariokart_corr1 %&gt;% plot()\n\n\n\n\nLösung: 0.07.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nassociation\nnum"
  },
  {
    "objectID": "posts/iq01/iq01.html",
    "href": "posts/iq01/iq01.html",
    "title": "iq01",
    "section": "",
    "text": "Aufgabe\nIntelligenz wird häufig mittels einem IQ-Test ermittelt. Ab einem Testwert von 130 Punkten nennt man die getestete Person hochbegabt.\nWie groß ist die Wahrscheinlichkeit, dass die nächste Person, die Sie treffen, hochbetagthochbegabt ist? Geben Sie die Wahrscheinlichkeit (als Anteil) an.\nHinweise:\n\nNutzen Sie Simulationsmethoden.\nGehen Sie von folgender IQ-Verteilung aus: \\(IQ \\sim N(100,15)\\).\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\nSimulieren Sie \\(n=10^3\\) Stichproben.\nNutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten).\nWir wollen hier keine Post-Verteilung berechnen, sondern lediglich Werte simulieren.\nGeben Sie keine Prozentzahlen, sondern stets Anteile an.\n\n         \n\n\nLösung\n\nlibrary(tidyverse)\n\nWir simulieren die Daten:\n\nset.seed(42)  # Reproduzierbarkeit\nd &lt;- tibble(\n  id = 1:10^3,  # Der Doppelpunkt heißt \"bis\", also \"von 1 bis 10 hoch 3\". Diese Spalte ist nicht so wichtig.\n  iq = rnorm(n = 10^3, mean = 100, sd = 15))\n\nhead(d)  # Die ersten paar Zeilen\n\n# A tibble: 6 × 2\n     id    iq\n  &lt;int&gt; &lt;dbl&gt;\n1     1 121. \n2     2  91.5\n3     3 105. \n4     4 109. \n5     5 106. \n6     6  98.4\n\n\nWir filtern wie in der Angabe gewünscht:\n\nd %&gt;% \n  count(iq &gt;= 130)\n\n# A tibble: 2 × 2\n  `iq &gt;= 130`     n\n  &lt;lgl&gt;       &lt;int&gt;\n1 FALSE         979\n2 TRUE           21\n\n\nCa. 20 von 1000 Personen erfüllen diese Bedingung (IQ &gt;= 130).\nGenau genommen:\n\n21/1000\n\n[1] 0.021\n\n\nLösung: Die gesuchte Wahrscheinlichkeit beträgt ca. 2% bzw. 0.02.\n\nCategories:\n\nprobability\nsimulation\nnormal-distribution\nexam-22\nnum"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html",
    "title": "tidymodels-tree3",
    "section": "",
    "text": "Berechnen Sie folgendes einfache Modell:\n\nEntscheidungsbaum\n\nModellformel: body_mass_g ~ . (Datensatz palmerpenguins::penguins)\nHier geht es darum, die Geschwindigkeit (und den Ressourcenverbrauch) beim Fitten zu verringern. Benutzen Sie dazu folgende Methoden\n\nAuslassen gering performanter Tuningparameterwerte\n\nHinweise:\n\nTunen Sie alle Parameter (die der Engine anbietet).\nVerwenden Sie Defaults, wo nicht anders angegeben.\nBeachten Sie die üblichen Hinweise."
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#setup",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#setup",
    "title": "tidymodels-tree3",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\ndata(\"penguins\", package = \"palmerpenguins\")\nlibrary(tictoc)  # Zeitmessung\nlibrary(finetune)  # tune_race_anova\nset.seed(42)\n\nEntfernen wir Fälle ohne y-Wert:\n\nd &lt;-\n  penguins %&gt;% \n  drop_na(body_mass_g)"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#daten-teilen",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#daten-teilen",
    "title": "tidymodels-tree3",
    "section": "Daten teilen",
    "text": "Daten teilen\n\nset.seed(42)\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#modelle",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#modelle",
    "title": "tidymodels-tree3",
    "section": "Modell(e)",
    "text": "Modell(e)\n\nmod_tree &lt;-\n  decision_tree(mode = \"regression\",\n                cost_complexity = tune(),\n                tree_depth = tune(),\n                min_n = tune())"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#rezepte",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#rezepte",
    "title": "tidymodels-tree3",
    "section": "Rezept(e)",
    "text": "Rezept(e)\n\nrec_plain &lt;- \n  recipe(body_mass_g ~ ., data = d_train)"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#resampling",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#resampling",
    "title": "tidymodels-tree3",
    "section": "Resampling",
    "text": "Resampling\n\nset.seed(42)\nrsmpl &lt;- vfold_cv(d_train)"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#workflows",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#workflows",
    "title": "tidymodels-tree3",
    "section": "Workflows",
    "text": "Workflows\n\nwf_tree &lt;-\n  workflow() %&gt;%  \n  add_recipe(rec_plain) %&gt;% \n  add_model(mod_tree)"
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#tuning-grid",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#tuning-grid",
    "title": "tidymodels-tree3",
    "section": "Tuning-Grid",
    "text": "Tuning-Grid\nTuninggrid:\n\ntune_grid &lt;- grid_regular(extract_parameter_set_dials(mod_tree), levels = 5)\n\nDie Zeilen im Tuninggrid zeigen uns, für wie viele Modellparameter ein Modell berechnet wird. Natürlich üblicherweise jedes Modell mit Resampling. Da kommt in Summe ein mitunter sehr große Menge an Modellberechnungen zusammen."
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#ohne-speed-up",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#ohne-speed-up",
    "title": "tidymodels-tree3",
    "section": "Ohne Speed-up",
    "text": "Ohne Speed-up\n\ntic()\nfit_tree &lt;-\n  tune_grid(object = wf_tree,\n            grid = tune_grid,\n            metrics = metric_set(rmse),\n            resamples = rsmpl)\ntoc()\n\n77.274 sec elapsed\n\n\nca. auf meinem Rechner (4-Kerne-MacBook Pro 2020)."
  },
  {
    "objectID": "posts/tidymodels-tree3/tidymodels-tree3.html#mit-geschicktem-weglassen-von-tuningparametern",
    "href": "posts/tidymodels-tree3/tidymodels-tree3.html#mit-geschicktem-weglassen-von-tuningparametern",
    "title": "tidymodels-tree3",
    "section": "Mit geschicktem Weglassen von Tuningparametern",
    "text": "Mit geschicktem Weglassen von Tuningparametern\n\ntic()\nfit_tree2 &lt;-\n  tune_race_anova(object = wf_tree,\n            grid = tune_grid,\n            metrics = metric_set(rmse),\n            resamples = rsmpl)\ntoc()\n\n68.768 sec elapsed\n\n\nca. - schneller!\n\nCategories:\n\nstatlearning\ntrees\ntidymodels\nspeed\nstring"
  },
  {
    "objectID": "posts/wuerfel02/wuerfel02.html",
    "href": "posts/wuerfel02/wuerfel02.html",
    "title": "wuerfel02",
    "section": "",
    "text": "Exercise\nWas ist die Wahrscheinlichkeit, mit zwei fairen Würfeln mindestens 10 Augen zu werfen?\nHinweise:\n\nNutzen Sie exakte Methoden der Wahrscheinlichkeitsrechnung, keine Simulation.\nGeben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n\n         \n\n\nSolution\nErstellen wir uns eine Tabelle, die alle Permutationen der beiden Würfelergebnisse fasst, das sind 36 Paare: (1,1), (1,2), …, (1,6), …, (6,6).\nDas kann man von Hand erstellen, halbautomatisch in Excel oder z.B. so:\n\nlibrary(tidyverse)\nd &lt;- expand_grid(wuerfel1 = 1:6,\n         wuerfel2 = 1:6)\n\nd\n\n# A tibble: 36 × 2\n   wuerfel1 wuerfel2\n      &lt;int&gt;    &lt;int&gt;\n 1        1        1\n 2        1        2\n 3        1        3\n 4        1        4\n 5        1        5\n 6        1        6\n 7        2        1\n 8        2        2\n 9        2        3\n10        2        4\n# ℹ 26 more rows\n\n\nJetzt ergänzen wir eine Spalte für die Wahrscheinlichkeit jeder Kombination, das ist einfach, denn \\(p(A \\cap B) = p(A) \\cdot p(B) = 1/36\\) gilt.\n\nd2 &lt;-\n  d %&gt;% \n  mutate(prob = 1/36)\n\nhead(d2)\n\n# A tibble: 6 × 3\n  wuerfel1 wuerfel2   prob\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;\n1        1        1 0.0278\n2        1        2 0.0278\n3        1        3 0.0278\n4        1        4 0.0278\n5        1        5 0.0278\n6        1        6 0.0278\n\n\nAußerdem ergänzen wir die Summe der Augenzahlen, weil die Frage ja nach einer bestimmten Summe an Augenzahlen abzielt.\n\nd3 &lt;-\n  d2 %&gt;% \n  mutate(augensumme = wuerfel1 + wuerfel2)\n\nhead(d3)\n\n# A tibble: 6 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        1        1 0.0278          2\n2        1        2 0.0278          3\n3        1        3 0.0278          4\n4        1        4 0.0278          5\n5        1        5 0.0278          6\n6        1        6 0.0278          7\n\n\nFür manche Augensummen gibt es mehrere Möglichkeiten:\n\nd3 %&gt;% \n  filter(augensumme == 7)\n\n# A tibble: 6 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        1        6 0.0278          7\n2        2        5 0.0278          7\n3        3        4 0.0278          7\n4        4        3 0.0278          7\n5        5        2 0.0278          7\n6        6        1 0.0278          7\n\n\n… für andere weniger:\n\nd3 %&gt;% \n  filter(augensumme == 12)\n\n# A tibble: 1 × 4\n  wuerfel1 wuerfel2   prob augensumme\n     &lt;int&gt;    &lt;int&gt;  &lt;dbl&gt;      &lt;int&gt;\n1        6        6 0.0278         12\n\n\nJetzt summieren wir (nach dem Additionssatz der Wahrscheinlichkeit) die Wahrscheinlichkeiten pro Augenzahl:\n\nd4 &lt;- \n  d3 %&gt;% \n  group_by(augensumme) %&gt;% \n  summarise(totale_w_pro_augenzahl = sum(prob))\n\nd4\n\n# A tibble: 11 × 2\n   augensumme totale_w_pro_augenzahl\n        &lt;int&gt;                  &lt;dbl&gt;\n 1          2                 0.0278\n 2          3                 0.0556\n 3          4                 0.0833\n 4          5                 0.111 \n 5          6                 0.139 \n 6          7                 0.167 \n 7          8                 0.139 \n 8          9                 0.111 \n 9         10                 0.0833\n10         11                 0.0556\n11         12                 0.0278\n\n\nTest: Die Summe der Wahrscheinlichkeit muss insgesamt 1 sein.\n\nd4 %&gt;% \n  summarise(sum(totale_w_pro_augenzahl))\n\n# A tibble: 1 × 1\n  `sum(totale_w_pro_augenzahl)`\n                          &lt;dbl&gt;\n1                             1\n\n\nUnd:\n\nd2 %&gt;% \n  summarise(sum(prob))\n\n# A tibble: 1 × 1\n  `sum(prob)`\n        &lt;dbl&gt;\n1           1\n\n\nPasst!\nDie Wahrscheinlichkeit für die Augensumme von mind. 10 beträgt also:\n\nloesung &lt;-\n  d4 %&gt;% \n  filter(augensumme &gt;= 10) %&gt;% \n  summarise(prob_sum = sum(totale_w_pro_augenzahl)) %&gt;% \n  pull(prob_sum)\n\nloesung\n\n[1] 0.1666667\n\n\n\nCategories:\n\nprobability\ndice"
  },
  {
    "objectID": "posts/wuerfel05/wuerfel05.html",
    "href": "posts/wuerfel05/wuerfel05.html",
    "title": "wuerfel05",
    "section": "",
    "text": "Aufgabe\nWas ist die Wahrscheinlichkeit, mit zwei fairen Würfeln genau 12 Augen zu werfen?\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n         \n\n\nLösung\nDie Ereignisse A=“Wurf des 1. Würfels” und B=“Wurf des 2. Würfels” sind unabhängig voneinander.\nDaher gilt: \\(Pr(A\\cap B) = Pr(AB) = Pr(A) \\cdot Pr(B)\\).\n\nPr_AB &lt;- 1/6 * 1/6\nPr_AB\n\n[1] 0.02777778\n\n\nAufgrund der Unabhängigkeit gilt außerdem: \\(Pr(A|B) = Pr(A) = Pr(A|\\neg B).\\)\nDie Lösung lautet 0.0277778.\n\nCategories:\n\nR\nprobability\nnum"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html",
    "href": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html",
    "title": "Verteilungen-Quiz-07",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nSei \\(X \\sim N(100,15)\\), dann ist \\(Pr(X \\le 100) \\ne 1/2\\).\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html#answerlist",
    "href": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html#answerlist",
    "title": "Verteilungen-Quiz-07",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-07/Verteilungen-Quiz-07.html#answerlist-1",
    "title": "Verteilungen-Quiz-07",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/wskt-quiz15/wskt-quiz15.html",
    "href": "posts/wskt-quiz15/wskt-quiz15.html",
    "title": "wskt-quiz15",
    "section": "",
    "text": "Behauptung:\n\\(Pr(BA) = Pr(B|A) \\cdot Pr(A)\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz15/wskt-quiz15.html#answerlist",
    "href": "posts/wskt-quiz15/wskt-quiz15.html#answerlist",
    "title": "wskt-quiz15",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz15/wskt-quiz15.html#answerlist-1",
    "href": "posts/wskt-quiz15/wskt-quiz15.html#answerlist-1",
    "title": "wskt-quiz15",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Krebs1/Krebs1.html",
    "href": "posts/Krebs1/Krebs1.html",
    "title": "Krebs1",
    "section": "",
    "text": "Aufgabe\nEin Krebstest (\\(T\\)) habe die Wahrscheinlichkeit von 0.9, einen vorhandenen Krebs (\\(K\\)) zu erkennen. Diese Wahrscheinlichkeit bezeichnen wir als \\(Pr(T+|K+)\\). Der Test erkennt also die meisten Krebsfälle, und ein paar werden übersehen.\nManchmal macht der Test auch den umgekehrten Fehler: Ein gesunder Mensch wird fälschlich Krebs diagnostiziert, \\(Pr(T+|K-)\\). Diese Wahrscheinlichkeit liegt bei dem Test bei 0.1, zum Glück also relativ gering.\nDie Grundrate dieser Krebsart belaufe sich in der Population auf 0.01, \\(Pr(K+)\\).\nAufgabe: Berechnen Sie die Wahrscheinlichkeit, dass ein Patient tatsächlich Krebs hat, wenn der Test positiv ist, also Krebs diagnostiziert hat!\n         \n\n\nLösung\nHier kann man Bayes Theorem anwenden:\n\\(Pr(K|T) = \\frac{Pr(K) \\cdot Pr(T|K) }{Pr(T)}\\).\n\nzaehler_bayes &lt;- Pr_Kpos * Pr_Tpos_geg_Kpos\nzaehler_bayes\n\n[1] 0.009\n\nPr_T &lt;- (zaehler_bayes + (1-Pr_Kpos) * Pr_Tpos_geg_Kneg)\nPr_T\n\n[1] 0.108\n\nsol &lt;- Pr_Kpos_geg_Tpos &lt;- zaehler_bayes / Pr_T \nsol &lt;- round(sol, 2)\nsol\n\n[1] 0.08\n\n\nDie Lösung beträgt also: 0.08.\nHier ist ein Baumdiagramm zur Visualisierung:\n\n\n\n\nflowchart LR\n  S[1000 Personen] --&gt; K[Krebs: 10]\n  S --&gt; NK[Nicht-Krebs: 990]\n  K --&gt; T[Test positiv: 9]\n  NK --&gt; NT[Nicht Test positiv: 1]\n  NK --&gt; TNK[Test positiv: 99]\n  NK --&gt; NTNK[Nicht Test positiv: 891]\n\n\n\n\n\n\nCategories:\n\nbayes\nprobability\nnum"
  },
  {
    "objectID": "posts/regression1/regression1.html",
    "href": "posts/regression1/regression1.html",
    "title": "regression1",
    "section": "",
    "text": "Die folgende Frage bezieht sich auf dieses Ergebnis einer Regressionsanalyse:\n\n\n\nCall:\nlm(formula = log(y) ~ log(x), data = d)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.9121 -0.9595 -0.1687  1.1232  3.6640 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.009234   0.217828  -0.042    0.966    \nlog(x)      -2.173359   0.223860  -9.709  1.8e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.822 on 68 degrees of freedom\nMultiple R-squared:  0.5809,    Adjusted R-squared:  0.5747 \nF-statistic: 94.26 on 1 and 68 DF,  p-value: 1.803e-14\n\n\nWelche der folgenden Aussagen ist korrekt?\n\n\n\nWenn x=0, dann ist ein Mittelwert von y in Höhe von etwa Inf zu erwarten.\nEs handelt sich um eine lineare Regression.\nWenn x um 1 Prozent steigt, dann kann eine Veränderung um etwa -0.01 Prozent in y erwartet werden.\nWenn x=1, dann ist ein Mittelwert von y in Höhe von ca. Inf zu erwarten.\nWenn x=2, dann ist ein Mittelwert von y in Höhe von ca. -0.01 zu erwarten."
  },
  {
    "objectID": "posts/regression1/regression1.html#answerlist",
    "href": "posts/regression1/regression1.html#answerlist",
    "title": "regression1",
    "section": "",
    "text": "Wenn x=0, dann ist ein Mittelwert von y in Höhe von etwa Inf zu erwarten.\nEs handelt sich um eine lineare Regression.\nWenn x um 1 Prozent steigt, dann kann eine Veränderung um etwa -0.01 Prozent in y erwartet werden.\nWenn x=1, dann ist ein Mittelwert von y in Höhe von ca. Inf zu erwarten.\nWenn x=2, dann ist ein Mittelwert von y in Höhe von ca. -0.01 zu erwarten."
  },
  {
    "objectID": "posts/regression1/regression1.html#answerlist-1",
    "href": "posts/regression1/regression1.html#answerlist-1",
    "title": "regression1",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nregression\ndyn\nlm\nschoice"
  },
  {
    "objectID": "posts/Bed-Wskt1/Bed-Wskt1.html",
    "href": "posts/Bed-Wskt1/Bed-Wskt1.html",
    "title": "Bed-Wskt1",
    "section": "",
    "text": "Aufgabe\nProf. Süß-Sauer untersucht eine seiner Lieblingsfragen: Wie viel bringt das Lernen auf eine Klausur? Dabei konzentriert er sich auf das Fach Statistik (es gefällt ihm gut). In einer aktuellen Untersuchung hat er \\(n=42\\) Studierende untersucht (s. Tabelle und Diagramm) und jeweils erfasst, ob die Person die Klausur bestanden (b) hat oder durchgefallen (d) ist. Dabei hat er zwei Gruppen unterschieden: Die “Viel-Lerner” (VL) und die “Wenig-Lerner” (WL).\nBerechnen Sie die folgende bedingte Wahrscheinlichkeit: p(Bestehen|Viellerner).\nBeispiel: Wenn Sie ausrechnen, dass die Wahrscheinlichkeit bei 42 Prozentpunkten liegt, so geben Sie ein: 0,42 bzw. 0.42 (das Dezimalzeichen ist abhängig von Ihren Spracheinstellungen).\nHinweise:\n\nGeben Sie nur eine Zahl ein (ohne Prozentzeichen o.Ä.), z.B. 0,42.\nAndere Angaben können u.U. nicht gewertet werden.\nRunden Sie auf zwei Dezimalstellen.\nAchten Sie darauf, das korrekte Dezimaltrennzeichen einzugeben; auf Geräten mit deutscher Spracheinstellung ist dies oft ein Komma.\n\n\n\n\n\n\n\n\nErgebnisse der Studie\n\n\n\nViellerner\nWeniglerner\n\n\n\n\nBestehen\n12\n20\n\n\nDurchfallen\n5\n5\n\n\n\n\n\n\n         \n\n\nLösung\n\n\n\n\n\n\n\n\nLerntyp\nKlausurergebnis\nn\nn_group\nprop_conditional_group\nN_gesamt\n\n\n\n\nViellerner\nBestehen\n12\n17\n0.7058824\n42\n\n\n\n\n\n\n\nAntwort: Der gesuchte Wert liegt bei \\(12 / 17 = 0.71\\).\n\nCategories:\n\nprobability\nbayes\nnum"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html",
    "href": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html",
    "title": "Verteilungen-Quiz-13",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nBei rechtsschiefen Verteilungen gilt \\(\\bar{x} \\gt Md\\).\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html#answerlist",
    "href": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html#answerlist",
    "title": "Verteilungen-Quiz-13",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-13/Verteilungen-Quiz-13.html#answerlist-1",
    "title": "Verteilungen-Quiz-13",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/wskt-quiz01/wskt-quiz01.html",
    "href": "posts/wskt-quiz01/wskt-quiz01.html",
    "title": "wskt-quiz01",
    "section": "",
    "text": "Sind die Ereignisse \\(A\\) und \\(B\\) unabhängig, so gilt \\(Pr(A|B) = P(A)\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz01/wskt-quiz01.html#answerlist",
    "href": "posts/wskt-quiz01/wskt-quiz01.html#answerlist",
    "title": "wskt-quiz01",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz01/wskt-quiz01.html#answerlist-1",
    "href": "posts/wskt-quiz01/wskt-quiz01.html#answerlist-1",
    "title": "wskt-quiz01",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Nein, die Aussage ist nicht falsch, sie ist wahr.\nWahr. Ja, die Aussage ist wahr.\n\n\nCategories:\n\nquiz\nprobability\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html",
    "href": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html",
    "title": "Aussagen-einfache-Regr",
    "section": "",
    "text": "Im Hinblick auf die lineare Regression: Welche der folgenden Aussage passt am besten?\n\n\n\nDie einfache Regression - \\(y=\\alpha + \\beta_1x_1 + \\epsilon\\) - prüft, inwieweit zwei Variablen zusammenhängen (linear oder anderweitig).\nObwohl statistische Zusammenhänge nicht ohne Weiteres Kausalschlüsse erlauben, kann man die Regression für Vorhersagen gut nutzen.\nRegressionskoeffizienten kann man so interpretieren: “Erhöht man X um eine 1 Einheit, so steigt daraufhin Y um \\(\\beta_1\\) Einheiten” (\\(\\beta_1\\) sei der entsprechende Regressionskoeffizient).\n“Lineare Regression” bedeutet, dass z.B. keine Polynome wie \\(y= \\alpha + \\beta_1 x_1^2 + \\beta_2 x_1 + \\epsilon\\) berechnet werden dürfen, bzw. nicht zur linearen Regression zählen.\nZentrieren der Prädiktoren ist bei der linearen Regression nicht zulässig."
  },
  {
    "objectID": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html#answerlist",
    "href": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html#answerlist",
    "title": "Aussagen-einfache-Regr",
    "section": "",
    "text": "Die einfache Regression - \\(y=\\alpha + \\beta_1x_1 + \\epsilon\\) - prüft, inwieweit zwei Variablen zusammenhängen (linear oder anderweitig).\nObwohl statistische Zusammenhänge nicht ohne Weiteres Kausalschlüsse erlauben, kann man die Regression für Vorhersagen gut nutzen.\nRegressionskoeffizienten kann man so interpretieren: “Erhöht man X um eine 1 Einheit, so steigt daraufhin Y um \\(\\beta_1\\) Einheiten” (\\(\\beta_1\\) sei der entsprechende Regressionskoeffizient).\n“Lineare Regression” bedeutet, dass z.B. keine Polynome wie \\(y= \\alpha + \\beta_1 x_1^2 + \\beta_2 x_1 + \\epsilon\\) berechnet werden dürfen, bzw. nicht zur linearen Regression zählen.\nZentrieren der Prädiktoren ist bei der linearen Regression nicht zulässig."
  },
  {
    "objectID": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html#answerlist-1",
    "href": "posts/Aussagen-einfache-Regr/Aussagen-einfache-Regr.html#answerlist-1",
    "title": "Aussagen-einfache-Regr",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Die lineare Regression \\(y=\\alpha + \\beta_1x_1 + \\epsilon\\) untersucht, wie die Korrelation, den Grad des linearen Zusammenhangs. Allerdings sind auch nicht-lineare Zusammenhänge von \\(y\\) und den Prädiktoren erlaubt, etwa \\(y=\\alpha + \\beta_1x_1^2 + \\beta_2x_2 + \\epsilon\\). Linear ist dabei so zu verstehen, dass \\(y\\) eine additive Funktion der Prädiktoren ist. Vielleicht wäre es daher besser, anstelle von “linearen” Modellen von “additiven” Modellen zu sprechen.\nRichtig. Für Vorhersagen ist Kenntnis einer Kausalstruktur nicht unbedingt nötig, kann aber sehr hilfreich sein.\nFalsch. Diese Interpretation suggeriert einen Kausaleffekt. Besser ist die Interpretation “Vergleicht man zwei Beobachtungen, die sich um 1 Einheit in X unterscheiden, so findet man im Durchschnitt einen Unterschied von \\(\\beta_1\\) in Y”.\nFalsch.Die Gleichung \\(y= \\alpha + \\beta_1 x_1^2 + \\beta_2 x_2 + \\epsilon\\) ist linear in ihren Summanden.\nFalsch. Zentrieren der Prädiktoren ist bei der linearen Regression zulässig und oft sinnvoll.\n\n\nCategories:\n\nregression\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html",
    "href": "posts/lm-mario1/lm-mario1.html",
    "title": "lm-mario1",
    "section": "",
    "text": "Sagen Sie den Verkaufspreis vorher für ein Spiel mit 2 Lenkrädern!\nHinweise:\n\nEntfernen Sie Spiele mit einem Verkaufspreis von über 100 Euro aus dem Datensatz."
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#setup",
    "href": "posts/lm-mario1/lm-mario1.html#setup",
    "title": "lm-mario1",
    "section": "Setup",
    "text": "Setup\n\nmariokart &lt;- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`."
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#bild-der-daten",
    "href": "posts/lm-mario1/lm-mario1.html#bild-der-daten",
    "title": "lm-mario1",
    "section": "Bild der Daten",
    "text": "Bild der Daten\n\nlibrary(ggpubr)  # einmalig vorab installieren, nicht vergessen\n\n\nAttaching package: 'ggpubr'\n\n\nThe following objects are masked from 'package:datawizard':\n\n    mean_sd, median_mad\n\nggscatter(mariokart, x = \"wheels\", y = \"total_pr\")  # aus ggpubr\n\n\n\n\nOder mit DataExplorer visualisieren:\n\nlibrary(DataExplorer)\n\nplot_scatterplot(mariokart, by = \"total_pr\")  # \"by\" ist Y-Achse"
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#extremwerte-entfernen",
    "href": "posts/lm-mario1/lm-mario1.html#extremwerte-entfernen",
    "title": "lm-mario1",
    "section": "Extremwerte entfernen",
    "text": "Extremwerte entfernen\n\nmariokart2 &lt;- \n  mariokart %&gt;% \n  filter(total_pr &lt; 100)  # alle Spiele teuerer als 100€ entfernen\n\nggscatter(mariokart2, x = \"wheels\", y = \"total_pr\")"
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#regressionsgerade-eintragen-in-das-diagramm",
    "href": "posts/lm-mario1/lm-mario1.html#regressionsgerade-eintragen-in-das-diagramm",
    "title": "lm-mario1",
    "section": "Regressionsgerade eintragen in das Diagramm",
    "text": "Regressionsgerade eintragen in das Diagramm\n\nggscatter(mariokart2, \n          x = \"wheels\", \n          y = \"total_pr\",\n          add = \"reg.line\")  # Dieser Schalter malt die Regr.gerade in das Diagramm"
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#regressionsgerade-berechnen",
    "href": "posts/lm-mario1/lm-mario1.html#regressionsgerade-berechnen",
    "title": "lm-mario1",
    "section": "Regressionsgerade berechnen",
    "text": "Regressionsgerade berechnen\n\nlm_mariokart &lt;- lm(total_pr ~ wheels, data = mariokart2)\nlm_mariokart\n\n\nCall:\nlm(formula = total_pr ~ wheels, data = mariokart2)\n\nCoefficients:\n(Intercept)       wheels  \n     37.502        8.643  \n\n\n“lm” wie llineares Modell, also eine Gerade."
  },
  {
    "objectID": "posts/lm-mario1/lm-mario1.html#vorhersagen",
    "href": "posts/lm-mario1/lm-mario1.html#vorhersagen",
    "title": "lm-mario1",
    "section": "Vorhersagen",
    "text": "Vorhersagen\nVorhersagen funktionieren mit dem Befehl predict.\n\nneues_spiel &lt;-\n  data.frame(\n    wheels = 2\n  )\n\nneues_spiel\n\n  wheels\n1      2\n\n\n\npredict(lm_mariokart, neues_spiel)  # predicte mir den Verkaufspreis\n\n       1 \n54.78743 \n\n\n\nCategories:\n\nR\nlm\npredict\nnum"
  },
  {
    "objectID": "posts/count-emoji-emo/count-emoji-emo.html",
    "href": "posts/count-emoji-emo/count-emoji-emo.html",
    "title": "count-emoji-emo",
    "section": "",
    "text": "Aufgabe\nGegeben eines (mehrelementigen) Strings, my_string, und eines Lexicons, my_lexicon, zählen Sie, wie häufig sich ein Emoji in einem Element des Strings wiederfindet.\n\nmy_string &lt;-\n  c(\"Heute ist ein schöner Tag 😄😄\", \"Was geht in dieser Woche?\", \"Super 🙂\")\n\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie die Funktion emo::ji.\n\n         \n\n\nLösung\n\nlibrary(emo)\nlibrary(purrr)\n\n\nmap_int(my_string, ji_count)\n\n[1] 2 0 1\n\n\n\nCategories:\n\ntextmining\nnlp\nemoji\nstring"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html",
    "href": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html",
    "title": "Verteilungen-Quiz-15",
    "section": "",
    "text": "Ist folgende Aussage wahr?\nDas HDI schneidet auf beiden Seiten des Intervalls die gleiche Wahrscheinlichkeitsmasse ab.\n\n\n\nJa\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html#answerlist",
    "href": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html#answerlist",
    "title": "Verteilungen-Quiz-15",
    "section": "",
    "text": "Ja\nNein"
  },
  {
    "objectID": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html#answerlist-1",
    "href": "posts/Verteilungen-Quiz-15/Verteilungen-Quiz-15.html#answerlist-1",
    "title": "Verteilungen-Quiz-15",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\ndistributions\nVerteilungen-Quiz\nprobability\nbayes\nsimulation"
  },
  {
    "objectID": "posts/wskt-quiz07/wskt-quiz07.html",
    "href": "posts/wskt-quiz07/wskt-quiz07.html",
    "title": "wskt-quiz07",
    "section": "",
    "text": "Folgende Formel ist korrekt: \\(Pr(H|D) = Pr(D|H) \\cdot Pr(H)\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz07/wskt-quiz07.html#answerlist",
    "href": "posts/wskt-quiz07/wskt-quiz07.html#answerlist",
    "title": "wskt-quiz07",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz07/wskt-quiz07.html#answerlist-1",
    "href": "posts/wskt-quiz07/wskt-quiz07.html#answerlist-1",
    "title": "wskt-quiz07",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/rf-finalize3/rf-finalize3.html",
    "href": "posts/rf-finalize3/rf-finalize3.html",
    "title": "rf-finalize3",
    "section": "",
    "text": "Berechnen Sie ein prädiktives Modell (Random Forest) mit dieser Modellgleichung:\nbody_mass_g ~ . (Datensatz: palmerpenguins::penguins).\nZeigen Sie, welche Werte für mtry im Default von Tidymodels gesetzt werden!\nHinweise: - Tunen Sie alle Tuningparameter mit jeweils 3 Werten. - Verwenden Sie Kreuzvalidierung - Verwenden Sie Standardwerte, wo nicht anders angegeben. - Fixieren Sie Zufallszahlen auf den Startwert 42."
  },
  {
    "objectID": "posts/rf-finalize3/rf-finalize3.html#standard-start",
    "href": "posts/rf-finalize3/rf-finalize3.html#standard-start",
    "title": "rf-finalize3",
    "section": "Standard-Start",
    "text": "Standard-Start\nZuererst der Standardablauf:\n\n# Setup:\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tictoc)  # Zeitmessung\nset.seed(42)\n\n\n# Data:\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# rm NA in the dependent variable:\nd &lt;- d %&gt;% \n  drop_na(body_mass_g)\n\n\nset.seed(42)\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\n\n# model:\nmod_rf &lt;-\n  rand_forest(mode = \"regression\",\n           mtry = tune(),\n           min_n = tune(),\n           trees = tune())\n\n\n# cv:\nset.seed(42)\nrsmpl &lt;- vfold_cv(d_train)\n\n\n# recipe:\nrec_plain &lt;- \n  recipe(body_mass_g ~  ., data = d_train) %&gt;% \n  step_impute_bag(all_predictors())\n\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod_rf) %&gt;% \n  add_recipe(rec_plain)"
  },
  {
    "objectID": "posts/rf-finalize3/rf-finalize3.html#tuninggrid",
    "href": "posts/rf-finalize3/rf-finalize3.html#tuninggrid",
    "title": "rf-finalize3",
    "section": "Tuninggrid",
    "text": "Tuninggrid\nWelche Tuningparameter hat unser Workflow?\n\nwf1_params_unclear &lt;- \n  extract_parameter_set_dials(wf1)\nwf1_params_unclear\n\nCollection of 3 parameters for tuning\n\n identifier  type    object\n       mtry  mtry nparam[?]\n      trees trees nparam[+]\n      min_n min_n nparam[+]\n\nModel parameters needing finalization:\n   # Randomly Selected Predictors ('mtry')\n\nSee `?dials::finalize` or `?dials::update.parameters` for more information.\n\n\nVerlangt waren 3 Tuningparameterwerte pro Parameter:\n\nmy_grid &lt;- grid_latin_hypercube(wf1_params_unclear, levels = 3)\n\nWarning: `levels` is not an argument to `grid_latin_hypercube()`. Did you mean\n`size`?\n\n\nError in `grid_latin_hypercube()`:\n! These arguments contain unknowns: `mtry`.\nℹ See the `finalize()` function.\n\nmy_grid\n\nError in eval(expr, envir, enclos): object 'my_grid' not found\n\n\nTidymodels weiß nicht, welche Werte für mtry benutzt werden sollen, da dieser Wert abhängig ist von der Anzahl der Spalten des Datensatzes, und damit unabhängig vom Modell.\nDie Ausgabe nparam[?] oben sagt uns, dass Tidymodels den Wertebereich des Tuningparameter nicht klären könnte, da er Daten abhängig ist.\nInformieren wir also Tidymodels zu diesem Wertebereich:\n\nwf1_params &lt;- \n  wf1 %&gt;% \n  extract_parameter_set_dials() %&gt;% \n  update(mtry = finalize(mtry(), d_train))\n\nwf1_params\n\nCollection of 3 parameters for tuning\n\n identifier  type    object\n       mtry  mtry nparam[+]\n      trees trees nparam[+]\n      min_n min_n nparam[+]\n\n\nSo, jetzt weiß Tidymodels, wie viele Werte für mtry benutzt werden können.\nWir können jetzt das Tuninggitter erstellen (das macht das Paket dials):\n\nmy_grid &lt;- grid_latin_hypercube(wf1_params, size = 125)\nmy_grid %&gt;% head()\n\n# A tibble: 6 × 3\n   mtry trees min_n\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1   105    11\n2     5  1036    21\n3     3   325    16\n4     4  1375    28\n5     6  1405    21\n6     7   304    15\n\n\nWie viele verschiedene Werte gibt es in dem Tuningitter?\nSchauen wir es uns mal an.\n\nmy_grid %&gt;% \n  ggplot(aes(x = trees, y = mtry)) +\n  geom_point()\n\n\n\n\nWir können das Tuninggitter auch selber erstellen:\n\nmy_grid &lt;-\n  grid_latin_hypercube(mtry(range = c(1, ncol(d_train)-1)),\n                       trees(),\n                       min_n(),\n                       size = 60)\ndim(my_grid)\n\n[1] 60  3"
  },
  {
    "objectID": "posts/rf-finalize3/rf-finalize3.html#tuningfitting",
    "href": "posts/rf-finalize3/rf-finalize3.html#tuningfitting",
    "title": "rf-finalize3",
    "section": "Tuning/Fitting",
    "text": "Tuning/Fitting\n\n# tuning:\ntic()\nwf1_fit &lt;-\n  wf1 %&gt;% \n  tune_grid(\n    grid = my_grid,\n    resamples = rsmpl)\ntoc()\n\n145.827 sec elapsed\n\n\nDann schauen wir uns das Ergebnisobjekt vom Tuning an.\n\nwf1_fit %&gt;% \n  collect_metrics() %&gt;% \n  filter(.metric == \"rmse\") %&gt;% \n  arrange(mtry)\n\n# A tibble: 60 × 9\n    mtry trees min_n .metric .estimator  mean     n std_err .config             \n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n 1     1  1835    33 rmse    standard    332.    10    13.7 Preprocessor1_Model…\n 2     1  1742    14 rmse    standard    316.    10    13.1 Preprocessor1_Model…\n 3     1   510    29 rmse    standard    327.    10    14.1 Preprocessor1_Model…\n 4     1   826     3 rmse    standard    310.    10    13.0 Preprocessor1_Model…\n 5     2   672    15 rmse    standard    283.    10    11.2 Preprocessor1_Model…\n 6     2   147    22 rmse    standard    287.    10    10.7 Preprocessor1_Model…\n 7     2  1927     7 rmse    standard    283.    10    11.4 Preprocessor1_Model…\n 8     2   386    23 rmse    standard    288.    10    11.9 Preprocessor1_Model…\n 9     2    81    29 rmse    standard    292.    10    12.3 Preprocessor1_Model…\n10     2   359     6 rmse    standard    283.    10    11.1 Preprocessor1_Model…\n# ℹ 50 more rows\n\n\nIn der Hilfe ist zu lesen:\n\nIn some cases, the tuning parameter values depend on the dimensions of the data. For example, mtry in random forest models depends on the number of predictors. In this case, the default tuning parameter object requires an upper range. dials::finalize() can be used to derive the data-dependent parameters. Otherwise, a parameter set can be created (via dials::parameters()) and the dials update() function can be used to change the values. This updated parameter set can be passed to the function via the param_info argument.\n\nAchtung: step_impute_knn scheint Probleme zu haben, wenn es Charakter-Variablen gibt.\nPraktischerweise findet Tidymodels die Begrenzung von mtry selber heraus, wenn Sie kein Tuninggrid definieren. Das erkennen Sie daran, dass Tidymodels beim Tuning/Fitten die folgende Ausgabe zeigt:\ni Creating pre-processing data to finalize unknown parameter: mtry.\n\nCategories:\n\ntidymodels\nstatlearning\ntemplate\nstring"
  },
  {
    "objectID": "posts/wskt-quiz09/wskt-quiz09.html",
    "href": "posts/wskt-quiz09/wskt-quiz09.html",
    "title": "wskt-quiz09",
    "section": "",
    "text": "Sei \\(X \\sim U(0, 1)\\).\nBehauptung: Es gilt: \\(f(X=1) = .1\\).\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\n\n\n\n\nFalsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz09/wskt-quiz09.html#answerlist",
    "href": "posts/wskt-quiz09/wskt-quiz09.html#answerlist",
    "title": "wskt-quiz09",
    "section": "",
    "text": "Falsch\nWahr"
  },
  {
    "objectID": "posts/wskt-quiz09/wskt-quiz09.html#answerlist-1",
    "href": "posts/wskt-quiz09/wskt-quiz09.html#answerlist-1",
    "title": "wskt-quiz09",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\n\n\nCategories:\n\nquiz\nprobability\nbayes\ndistribution\nquiz1-qm2-ws23\nschoice"
  },
  {
    "objectID": "posts/wrangle5/wrangle5.html",
    "href": "posts/wrangle5/wrangle5.html",
    "title": "wrangle5",
    "section": "",
    "text": "Wie prüft man in R auf Gleichheit zweier Ausdrücke?\nWählen Sie die korrekte Aussage.\n\n\n\n!= – “definiert als”\n== Prüfung auf Gleichheit\n= – Prüfung auf Gleichheit\n&lt;- – Prüfung auf Gleichheit\n!= – Prüfung auf Gleichheit"
  },
  {
    "objectID": "posts/wrangle5/wrangle5.html#answerlist",
    "href": "posts/wrangle5/wrangle5.html#answerlist",
    "title": "wrangle5",
    "section": "",
    "text": "!= – “definiert als”\n== Prüfung auf Gleichheit\n= – Prüfung auf Gleichheit\n&lt;- – Prüfung auf Gleichheit\n!= – Prüfung auf Gleichheit"
  },
  {
    "objectID": "posts/wrangle5/wrangle5.html#answerlist-1",
    "href": "posts/wrangle5/wrangle5.html#answerlist-1",
    "title": "wrangle5",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\neda\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/movies-vis1/movies-vis1.html",
    "href": "posts/movies-vis1/movies-vis1.html",
    "title": "movies-vis1",
    "section": "",
    "text": "Aufgabe\nImportieren Sie bitte für diese Aufgabe den Datensatz movies (aus dem R-Paket ggplot2movies). Ein Data-Dictionary findet sich hier.\nErstellen Sie folgende Visualisierung:\n\nStreudiagramme mit rating als Y-Variable, und alle übrigen metrischen Variablen als X-Variable.\nLassen Sie aber folgende Variablen außen vor: etwaige ID-Variablen, die Variablen, die die Perzentile der Bewertungen angeben (rX, mit X von 1 bis 10)\nBerücksichtigen Sie nur Actionfilme ab 2000\nVerzichten Sie auf Filme mit einer unterdurchschnittlichen Zahl an Bewertungen (votes; gemessen an allen Filmen, gerundet zur nächsten ganzen Zahl)\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(DataExplorer)\n\nDaten importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2movies/movies.csv\"\nd &lt;- read.csv(d_path)\n\nDurchschnittliche Zahl an Bewertungen:\n\nd %&gt;% \n  summarise(votes_mean = mean(votes))\n\n  votes_mean\n1   632.1304\n\n\nDie durchschnittliche Zahl an Bewertungen beträgt also 632.\n\nd %&gt;% \n  select(length, budget, rating, year, votes, Action) %&gt;% \n  filter(year &gt;= 2000) %&gt;% \n  filter(Action == 1) %&gt;% \n  filter(votes &gt;= 632) %&gt;% \n  select(-Action) %&gt;% \n  plot_scatterplot(by = \"rating\")\n\nWarning: Removed 66 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nCategories:\n\nvis\neda\nstring"
  },
  {
    "objectID": "posts/ReThink3m3/ReThink3m3.html",
    "href": "posts/ReThink3m3/ReThink3m3.html",
    "title": "ReThink3m3",
    "section": "",
    "text": "Exercise\nNehmen wir an, wir haben 8 (Wasser-)“Treffer” (\\(W=8\\)) bei 15 Würfen (\\(N=15\\)) erhalten (wieder im Globusversuch).\n\nFühren Sie einen Posteriori-Prädiktiv-Check durch: Erstellen Sie also eine Posteriori-Prädiktiv-Verteilung (PPV). Mit anderen Worten: Erstellen Sie die Stichprobenverteilung, gemittelt über die Posteriori-Wahrscheinlichkeiten des Wasseranteils \\(p\\)!\nVisualisieren Sie die PPV!\nWas ist die Wahrscheinlichkeit laut PPV 8 von 15 Treffer zu erzielen (also 8 Wasser in 15 Würfen)?\n\nHinweise:\n\nBerechnen Sie eine Bayes-Box (Gittermethode).\nVerwenden Sie 1000 Gitterwerte.\nGehen Sie von einem gleichverteilten Prior aus.\nFixieren Sie die Zufallszahlen mit dem Startwert 42, d.h. set.seed(42).\n\nQuelle: McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Aufl.). Taylor and Francis, CRC Press.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n\n\n\nErstellen wir zuerst wieder die Posteriori-Verteilung für den Globusversuch.\n\np_grid &lt;- seq( from=0 , to=1 , length.out=1000 )  # Gitterwerte\n\nprior &lt;- rep(1, 1000 )  # Priori-Gewichte\n\nlikelihood &lt;- dbinom(8 , size= 15, prob=p_grid ) \n\nunstandardisierte_posterior &lt;- likelihood * prior \n\nposterior &lt;- unstandardisierte_posterior / sum(unstandardisierte_posterior)\n\nDann ziehen wir unsere Stichproben daraus:\n\n# um die Zufallszahlen festzulegen, damit alle die gleichen Zufallswerte bekommen: \nset.seed(42) \n\n# Stichproben ziehen aus der Posteriori-Verteilung\nsamples &lt;- \n  tibble(\n    p = sample(p_grid , prob=posterior, size=1e4, replace=TRUE))\n\n\nPPV &lt;- \n  samples %&gt;% \n  mutate( anzahl_wasser = rbinom(1e4, size = 15, prob = p))\n\nDurch prob = p gewichten wir die Wahrscheinlichkeit an den Werten der Posteriori-Verteilung.\nSo sehen die ersten paar Zeilen von PPV aus:\n\n\n\n\n\n\n\n\np\nanzahl_wasser\n\n\n\n\n0.4304304\n4\n\n\n0.5575576\n11\n\n\n0.6516517\n4\n\n\n0.6156156\n9\n\n\n0.6716717\n6\n\n\n\n\n\n\n\n\n\n\n\nPPV %&gt;% \n  ggplot() +\n  aes(x = anzahl_wasser) +\n  geom_bar()\n\n\n\n\n\n\n\n\nPPV %&gt;% \n  count(anzahl_wasser == 8)\n\n# A tibble: 2 × 2\n  `anzahl_wasser == 8`     n\n  &lt;lgl&gt;                &lt;int&gt;\n1 FALSE                 8536\n2 TRUE                  1464\n\n\nAlternativer R-Code:\n\nw &lt;- rbinom(1e4, size = 15, prob = samples$p)\nmean(w == 8)\n\n[1] 0.1504\n\n\nQuelle\n\nCategories:\n\nbayes\nppv\nprobability"
  },
  {
    "objectID": "posts/kausal25/kausal25.html",
    "href": "posts/kausal25/kausal25.html",
    "title": "kausal25",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über 6 Variablen, die als Knoten im Graph dargestellt sind und mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x4.\nAV: x5.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “/”.\nEs ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.\n\n\n\n\n\n\n\n\n\n{ x4 }\n{ }\n{ x1, x5 }\n{ x4, x6 }\n{ x3, x4 }"
  },
  {
    "objectID": "posts/kausal25/kausal25.html#answerlist",
    "href": "posts/kausal25/kausal25.html#answerlist",
    "title": "kausal25",
    "section": "",
    "text": "{ x4 }\n{ }\n{ x1, x5 }\n{ x4, x6 }\n{ x3, x4 }"
  },
  {
    "objectID": "posts/kausal25/kausal25.html#answerlist-1",
    "href": "posts/kausal25/kausal25.html#answerlist-1",
    "title": "kausal25",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nRichtig\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/mariokart-sd2/mariokart-sd2.html",
    "href": "posts/mariokart-sd2/mariokart-sd2.html",
    "title": "mariokart-sd2",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie die SD des Verkaufspreis (total_pr)!\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nmariokart &lt;- data_read(d_url)\n\n\nmariokart %&gt;% \n  summarise(pr_sd = sd(total_pr))\n\n     pr_sd\n1 25.68856\n\n\nLösung: 25.7.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nvariability\nnum"
  },
  {
    "objectID": "posts/Skalenniveau1b/Skalenniveau1b.html",
    "href": "posts/Skalenniveau1b/Skalenniveau1b.html",
    "title": "Skalenniveau1b",
    "section": "",
    "text": "Geben Sie für jede Variable an, ob sie über ein metrisches Skalenniveau verfügt!\n\n\n\nAlter\nRanking von Hochschulen (1. Platz XYZ, 2. Platz ABC, …)\nUmsatz einer Firma\nGeschlecht"
  },
  {
    "objectID": "posts/Skalenniveau1b/Skalenniveau1b.html#answerlist",
    "href": "posts/Skalenniveau1b/Skalenniveau1b.html#answerlist",
    "title": "Skalenniveau1b",
    "section": "",
    "text": "Alter\nRanking von Hochschulen (1. Platz XYZ, 2. Platz ABC, …)\nUmsatz einer Firma\nGeschlecht"
  },
  {
    "objectID": "posts/Skalenniveau1b/Skalenniveau1b.html#answerlist-1",
    "href": "posts/Skalenniveau1b/Skalenniveau1b.html#answerlist-1",
    "title": "Skalenniveau1b",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nRichtig\nFalsch\n\n\nCategories:\n\ndyn\nvariable-levels\nvariable-levels\nmchoice"
  },
  {
    "objectID": "posts/Priorwahl2/Priorwahl2.html",
    "href": "posts/Priorwahl2/Priorwahl2.html",
    "title": "Priorwahl2",
    "section": "",
    "text": "Betrachten wir den biologisch fundierten Zusammenhang von Gewicht (UV) und Körpergröße (AV).\nWelche der folgenden Priori-Verteilungen passt am besten für \\(\\beta\\)?\nGehen Sie von z-standardisierten Variablen aus.\n\n\n\n\\(N(0,1)\\)\n\\(N(0,100)\\)\n\\(N(1,0)\\)\n\\(N(0,0)\\)\n\\(N(-1,1)\\)"
  },
  {
    "objectID": "posts/Priorwahl2/Priorwahl2.html#answerlist",
    "href": "posts/Priorwahl2/Priorwahl2.html#answerlist",
    "title": "Priorwahl2",
    "section": "",
    "text": "\\(N(0,1)\\)\n\\(N(0,100)\\)\n\\(N(1,0)\\)\n\\(N(0,0)\\)\n\\(N(-1,1)\\)"
  },
  {
    "objectID": "posts/Priorwahl2/Priorwahl2.html#answerlist-1",
    "href": "posts/Priorwahl2/Priorwahl2.html#answerlist-1",
    "title": "Priorwahl2",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr. Plausibler Prior. Bei z-standardisierten Werten sind die Koeffizienten meist kleiner 1. Noch sinnvoller wäre vermutlich, wenn \\(\\mu &gt; 0\\) und nicht \\(\\mu=0\\).\nFalsch. Zu weit.\nFalsch. Keine Streuung.\nFalsch. Keine Streuung.\nFalsch. Negativer Mittelwert ist nicht sehr plausibel.\n\n\nCategories:\n\nregression\nbayes\ndistribution"
  },
  {
    "objectID": "posts/knn-ames01/knn-ames01.html",
    "href": "posts/knn-ames01/knn-ames01.html",
    "title": "knn-ames01",
    "section": "",
    "text": "Aufgabe\nBerechnen Sie ein knn-Modell für den Datensatz ames!\nNutzen Sie diese Modellformel: Sale_Price ~ Lot_Area + Fireplaces + Longitude + Latitude.\nBerichten Sie die Modellgüte.\nHinweise:\n\nTunen Sie \\(k\\) mit den Werten 1 bis 10.\nTeilen Sie in Train- und Test-Sample auf.\nVerwenden Sie Defaults der Funktionen, wo nicht anders angegeben.\nz-Transformieren Sie die Prädiktoren.\nVerwenden Sie den RSME als Kennzahl der Modellgüte.\n\n         \n\n\nLösung\n\nlibrary(tidymodels)\ndata(ames)\n\nDaten aufteilen:\n\nd_split &lt;- initial_split(ames)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\nModell definieren:\n\nmod1 &lt;-\n  nearest_neighbor(\n    mode = \"regression\",\n    neighbors = tune())  # k-Wert zum Tunen taggen\n\nRezept definieren:\n\nrec1 &lt;-\n  recipe(Sale_Price ~ Lot_Area + Fireplaces + Longitude + Latitude, data = d_split) %&gt;% \n  step_normalize(all_predictors())\n\nWorkflow definieren:\n\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)\n\nResampling definieren:\n\ncv1 &lt;- vfold_cv(d_train)\n\nTuning definieren:\n\nk_grid &lt;-\n  tibble(neighbors = 1:10)\n\nFitting:\n\nfit1 &lt;-\n  tune_grid(wf1,\n            resamples = vfold_cv(d_train),\n            metrics = metric_set(rmse),  # nur RMSE als Modellgüte, Default ist RMSE und R2\n            grid = k_grid,\n            control = control_grid(save_workflow = TRUE)  # nur nötig für \"fit_best\", s.u.\n            )\n\nMetriken im Train-Sample (genauer: im Assessment-Sample):\n\nshow_best(fit1)\n\n# A tibble: 5 × 7\n  neighbors .metric .estimator   mean     n std_err .config              \n      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                \n1        10 rmse    standard   43067.    10   1798. Preprocessor1_Model10\n2         9 rmse    standard   43089.    10   1774. Preprocessor1_Model09\n3         8 rmse    standard   43115.    10   1738. Preprocessor1_Model08\n4         7 rmse    standard   43181.    10   1708. Preprocessor1_Model07\n5         6 rmse    standard   43317.    10   1682. Preprocessor1_Model06\n\n\n(Komplettes) Train-Sample mit bestem Tuning-Kandidat fitten:\n\ntune1_best &lt;- fit_best(fit1)\n\nIm Test-Sample predicten:\n\nfit_test &lt;- last_fit(tune1_best, d_split)\n\nMetriken einsammeln:\n\ncollect_metrics(fit_test)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   42554.    Preprocessor1_Model1\n2 rsq     standard       0.717 Preprocessor1_Model1\n\n\nDie Lösung lautet 4.2554397^{4}.\n\nCategories:\n\nstatlearning\ntidymodels\nnum"
  },
  {
    "objectID": "posts/Boosting2/Boosting2.html",
    "href": "posts/Boosting2/Boosting2.html",
    "title": "Boosting2",
    "section": "",
    "text": "Boosting ist eine beliebte Methode des statistischen Lernens, da sie sich in vielen prädiktiven Fragestellungen als hoch prädiktiv herausgestellt hat. Die Modellfunktion von Boosting kann man so darstellen:\n\\[\\hat{f}(x)=\\sum_{b=1}^B \\lambda \\hat{f}^b(x)\\]\n(Dabei stellt \\(B\\) die Anzahl der Bäume im Modell dar und \\(\\lambda\\) einen Tuningparamter zur Penalisierung/Regularisierung bzw. die Lernrate des Modells.)\nWelche Aussage ist in diesem Zusammenhang korrekt?\n\n\n\nBoosting gleicht einem Random-Forest-Modell, nur dass die Bäume sequenzielle Modelle darstellen und nicht parallel (gleichzeitig) in ein Modell einfließen.\nBoosting-Modelle bestehen aus einer Sequenz von Bäumen mit jeweils nur einer Inputvariablen (Gabelung/Split; internal nodes).\nAlle Boosting-Modelle erfüllen obige Funktionsgleichung und sind daher immer linear.\nBoosting-Modelle analysieren im Allgemeinen in jedem der \\(B\\) Durchläufe einen anderen Datensatz.\nDer Parameter \\(B\\) sollte nicht über Kreuzvalidierungsmethoden bestimmt werden."
  },
  {
    "objectID": "posts/Boosting2/Boosting2.html#answerlist",
    "href": "posts/Boosting2/Boosting2.html#answerlist",
    "title": "Boosting2",
    "section": "",
    "text": "Boosting gleicht einem Random-Forest-Modell, nur dass die Bäume sequenzielle Modelle darstellen und nicht parallel (gleichzeitig) in ein Modell einfließen.\nBoosting-Modelle bestehen aus einer Sequenz von Bäumen mit jeweils nur einer Inputvariablen (Gabelung/Split; internal nodes).\nAlle Boosting-Modelle erfüllen obige Funktionsgleichung und sind daher immer linear.\nBoosting-Modelle analysieren im Allgemeinen in jedem der \\(B\\) Durchläufe einen anderen Datensatz.\nDer Parameter \\(B\\) sollte nicht über Kreuzvalidierungsmethoden bestimmt werden."
  },
  {
    "objectID": "posts/Boosting2/Boosting2.html#answerlist-1",
    "href": "posts/Boosting2/Boosting2.html#answerlist-1",
    "title": "Boosting2",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Im Gegensatz zu Random-Forest-Modellen wird im Boosting u.a. kein Resampling verwendet.\nFalsch. Boosting-Modelle können mehr als eine Gabelung enthalten.\nFalsch. Boosting-Modelle sind nur dann linear, wenn Sie nur eine Gabelung enthalten.\nRichtig. In jedem Durchlauf wird der analysierte Datensatz verändert, insofern als das jeweils die Residuen des vorherigen Durchlaufs den Datensatz des nächsten Durchlaufs bilden.\nFalsch. Es macht Sinn, den Paramter \\(B\\) über Kreuzvalidierungsmethoden zu bestimmen. Allerdings ist die Überfittingsgefahr relativ gering.\n\n\nCategories:\nschoice"
  },
  {
    "objectID": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html",
    "href": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html",
    "title": "Szenario-charakterisieren1",
    "section": "",
    "text": "Angenommen, Sie arbeiten als Analyst mit folgender Aufgabe:\nEs liegt ein Datensatz mit 600 Beschäftigten (als Beobachtungseinheit) vor. Für jede Person sind folgende Informationen bekannt: Dauer der Betriebszugehörigkeit, Alter, Ausbildung und Ergebnis der letzten Leistungsbeurteilung. Ziel ist es, die Höhe des zu erwartenden Gehalts vorherzusagen.\n\n\n\nEs handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Klassifikation. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Erklärung (inference) \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=5\\).\nEs handelt sich um eine Klassifikation. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\). Es handelt sich um eine unüberwachte (unsupervised) Analyse."
  },
  {
    "objectID": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html#answerlist",
    "href": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html#answerlist",
    "title": "Szenario-charakterisieren1",
    "section": "",
    "text": "Es handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Klassifikation. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Erklärung (inference) \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=5\\).\nEs handelt sich um eine Klassifikation. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\).\nEs handelt sich um eine Regression. Ziel ist eine Vorhersage. \\(N=600\\), \\(p=4\\). Es handelt sich um eine unüberwachte (unsupervised) Analyse."
  },
  {
    "objectID": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html#answerlist-1",
    "href": "posts/Szenario-charakterisieren1/Szenario-charakterisieren1.html#answerlist-1",
    "title": "Szenario-charakterisieren1",
    "section": "Answerlist",
    "text": "Answerlist\n\nWahr\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\nschoice"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html",
    "href": "posts/regr-tree03/regr-tree03.html",
    "title": "regr-tree03",
    "section": "",
    "text": "library(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#setup",
    "href": "posts/regr-tree03/regr-tree03.html#setup",
    "title": "regr-tree03",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\ndata(mtcars)\nlibrary(tictoc)  # Zeitmessung\n\nFür Klassifikation verlangt Tidymodels eine nominale AV, keine numerische:\n\nmtcars &lt;-\n  mtcars %&gt;% \n  mutate(am = factor(am))"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#daten-teilen",
    "href": "posts/regr-tree03/regr-tree03.html#daten-teilen",
    "title": "regr-tree03",
    "section": "Daten teilen",
    "text": "Daten teilen\n\nd_split &lt;- initial_split(mtcars)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#modelle",
    "href": "posts/regr-tree03/regr-tree03.html#modelle",
    "title": "regr-tree03",
    "section": "Modell(e)",
    "text": "Modell(e)\n\nmod_tree &lt;-\n  decision_tree(mode = \"classification\",\n                cost_complexity = tune(),\n                tree_depth = tune(),\n                min_n = tune())"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#rezepte",
    "href": "posts/regr-tree03/regr-tree03.html#rezepte",
    "title": "regr-tree03",
    "section": "Rezept(e)",
    "text": "Rezept(e)\n\nrec1 &lt;- \n  recipe(am ~ ., data = d_train)"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#resampling",
    "href": "posts/regr-tree03/regr-tree03.html#resampling",
    "title": "regr-tree03",
    "section": "Resampling",
    "text": "Resampling\n\nrsmpl &lt;- vfold_cv(d_train, v = 2)"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#workflow",
    "href": "posts/regr-tree03/regr-tree03.html#workflow",
    "title": "regr-tree03",
    "section": "Workflow",
    "text": "Workflow\n\nwf1 &lt;-\n  workflow() %&gt;%  \n  add_recipe(rec1) %&gt;% \n  add_model(mod_tree)"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#tuningfitting",
    "href": "posts/regr-tree03/regr-tree03.html#tuningfitting",
    "title": "regr-tree03",
    "section": "Tuning/Fitting",
    "text": "Tuning/Fitting\nTuninggrid:\n\ntune_grid &lt;- grid_regular(extract_parameter_set_dials(mod_tree), levels = 5)\ntune_grid\n\n# A tibble: 125 × 3\n   cost_complexity tree_depth min_n\n             &lt;dbl&gt;      &lt;int&gt; &lt;int&gt;\n 1    0.0000000001          1     2\n 2    0.0000000178          1     2\n 3    0.00000316            1     2\n 4    0.000562              1     2\n 5    0.1                   1     2\n 6    0.0000000001          4     2\n 7    0.0000000178          4     2\n 8    0.00000316            4     2\n 9    0.000562              4     2\n10    0.1                   4     2\n# ℹ 115 more rows\n\n\n\ntic()\nfit1 &lt;-\n  tune_grid(object = wf1,\n            grid = tune_grid,\n            metrics = metric_set(roc_auc),\n            resamples = rsmpl)\n\n→ A | warning: 21 samples were requested but there were 12 rows in the data. 12 will be used.\n\n\nThere were issues with some computations   A: x1\n\n\n→ B | warning: 30 samples were requested but there were 12 rows in the data. 12 will be used.\n\n\nThere were issues with some computations   A: x1\nThere were issues with some computations   A: x25   B: x1\nThere were issues with some computations   A: x25   B: x23\n→ C | warning: 40 samples were requested but there were 12 rows in the data. 12 will be used.\nThere were issues with some computations   A: x25   B: x23\nThere were issues with some computations   A: x25   B: x25   C: x18\nThere were issues with some computations   A: x26   B: x25   C: x25\nThere were issues with some computations   A: x27   B: x25   C: x25\nThere were issues with some computations   A: x50   B: x25   C: x25\nThere were issues with some computations   A: x50   B: x48   C: x25\nThere were issues with some computations   A: x50   B: x50   C: x45\nThere were issues with some computations   A: x50   B: x50   C: x50\n\ntoc()\n\n29.277 sec elapsed"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#bester-kandidat",
    "href": "posts/regr-tree03/regr-tree03.html#bester-kandidat",
    "title": "regr-tree03",
    "section": "Bester Kandidat",
    "text": "Bester Kandidat\n\nautoplot(fit1)\n\n\n\n\n\nshow_best(fit1)\n\n# A tibble: 5 × 9\n  cost_complexity tree_depth min_n .metric .estimator  mean     n std_err\n            &lt;dbl&gt;      &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;\n1    0.0000000001          1     2 roc_auc binary     0.825     2   0.075\n2    0.0000000178          1     2 roc_auc binary     0.825     2   0.075\n3    0.00000316            1     2 roc_auc binary     0.825     2   0.075\n4    0.000562              1     2 roc_auc binary     0.825     2   0.075\n5    0.1                   1     2 roc_auc binary     0.825     2   0.075\n# ℹ 1 more variable: .config &lt;chr&gt;"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#finalisieren",
    "href": "posts/regr-tree03/regr-tree03.html#finalisieren",
    "title": "regr-tree03",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nwf1_finalized &lt;-\n  wf1 %&gt;% \n  finalize_workflow(select_best(fit1))"
  },
  {
    "objectID": "posts/regr-tree03/regr-tree03.html#last-fit",
    "href": "posts/regr-tree03/regr-tree03.html#last-fit",
    "title": "regr-tree03",
    "section": "Last Fit",
    "text": "Last Fit\n\nfinal_fit &lt;- \n  last_fit(object = wf1_finalized, d_split)\n\ncollect_metrics(final_fit)\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.75  Preprocessor1_Model1\n2 roc_auc  binary         0.833 Preprocessor1_Model1\n\n\n\nCategories:\n\nstatlearning\ntrees\ntidymodels\nstring"
  },
  {
    "objectID": "posts/mtcars-simple2/mtcars-simple2.html",
    "href": "posts/mtcars-simple2/mtcars-simple2.html",
    "title": "mtcars-simple2",
    "section": "",
    "text": "Exercise\nWe will use the dataset mtcars in this exercise.\nAssume your causal model of your research dictates that fuel economy is a linear function of horse power, cylinder count and displacement of the engine.\nCompute the explained variance (point estimate) for the above model!\nNotes:\n\nUse can either use frequentist or bayesian modeling.\nUse R for all computations.\nThere are multiple ways to find a solution.\n\n         \n\n\nSolution\nCompute Model:\n\nlm1_freq &lt;- lm(mpg ~ hp + cyl + disp, data = mtcars)\n\nlibrary(rstanarm)\nlm1_bayes &lt;- stan_glm(mpg ~ hp + cyl + disp, data = mtcars, refresh = 0)\n\nGet R2:\n\nlibrary(easystats)\n\n\nr2(lm1_freq)\n\n# R2 for Linear Regression\n       R2: 0.768\n  adj. R2: 0.743\n\n\n\nr2(lm1_bayes)\n\n# Bayesian R2 with Compatibility Interval\n\n  Conditional R2: 0.749 (95% CI [0.599, 0.849])\n\n\nThe coefficient is estimated as about 0.77.\n\nCategories:\n\nregression\nen\nbayes\nfrequentist\nqm1\nstats-nutshell"
  },
  {
    "objectID": "posts/Streudiagramm/Streudiagramm.html",
    "href": "posts/Streudiagramm/Streudiagramm.html",
    "title": "Streudiagramm",
    "section": "",
    "text": "-.90\n0\n+.90\n1\n-1"
  },
  {
    "objectID": "posts/Streudiagramm/Streudiagramm.html#answerlist",
    "href": "posts/Streudiagramm/Streudiagramm.html#answerlist",
    "title": "Streudiagramm",
    "section": "",
    "text": "-.90\n0\n+.90\n1\n-1"
  },
  {
    "objectID": "posts/Streudiagramm/Streudiagramm.html#answerlist-1",
    "href": "posts/Streudiagramm/Streudiagramm.html#answerlist-1",
    "title": "Streudiagramm",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch\nWahr\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\nvis\n‘2023’\nschoice"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html",
    "href": "posts/tmdb02/tmdb02.html",
    "title": "tmdb02",
    "section": "",
    "text": "Wir bearbeiten hier die Fallstudie TMDB Box Office Prediction - Can you predict a movie’s worldwide box office revenue?, ein Kaggle-Prognosewettbewerb.\nZiel ist es, genaue Vorhersagen zu machen, in diesem Fall für Filme.\nDie Daten können Sie von der Kaggle-Projektseite beziehen oder so:\n\nd_train_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/train.csv\"\nd_test_path &lt;- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/tmdb-box-office-prediction/test.csv\"\n\n\n\nReichen Sie bei Kaggle eine Submission für die Fallstudie ein! Berichten Sie den Kaggle-Score\nHinweise:\n\nSie müssen sich bei Kaggle ein Konto anlegen (kostenlos und anonym möglich); alternativ können Sie sich mit einem Google-Konto anmelden.\nBerechnen Sie einen Entscheidungsbaum und einen Random-Forest.\nTunen Sie nach Bedarf; verwenden Sie aber Default-Werte.\nVerwenden Sie Tidymodels."
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#vorbereitung",
    "href": "posts/tmdb02/tmdb02.html#vorbereitung",
    "title": "tmdb02",
    "section": "Vorbereitung",
    "text": "Vorbereitung\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(tictoc)\nlibrary(doParallel)  # mehrere CPUs nutzen\nlibrary(finetune)  # Tune Anova\n\n\nd_train &lt;- read_csv(d_train_path)\nd_test &lt;- read_csv(d_test_path)\n\nglimpse(d_train)\n\nRows: 3,000\nColumns: 23\n$ id                    &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 313576, 'name': 'Hot Tub Time Machine C…\n$ budget                &lt;dbl&gt; 1.40e+07, 4.00e+07, 3.30e+06, 1.20e+06, 0.00e+00…\n$ genres                &lt;chr&gt; \"[{'id': 35, 'name': 'Comedy'}]\", \"[{'id': 35, '…\n$ homepage              &lt;chr&gt; NA, NA, \"http://sonyclassics.com/whiplash/\", \"ht…\n$ imdb_id               &lt;chr&gt; \"tt2637294\", \"tt0368933\", \"tt2582802\", \"tt182148…\n$ original_language     &lt;chr&gt; \"en\", \"en\", \"en\", \"hi\", \"ko\", \"en\", \"en\", \"en\", …\n$ original_title        &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ overview              &lt;chr&gt; \"When Lou, who has become the \\\"father of the In…\n$ popularity            &lt;dbl&gt; 6.575393, 8.248895, 64.299990, 3.174936, 1.14807…\n$ poster_path           &lt;chr&gt; \"/tQtWuwvMf0hCc2QR2tkolwl7c3c.jpg\", \"/w9Z7A0GHEh…\n$ production_companies  &lt;chr&gt; \"[{'name': 'Paramount Pictures', 'id': 4}, {'nam…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'US', 'name': 'United States of…\n$ release_date          &lt;chr&gt; \"2/20/15\", \"8/6/04\", \"10/10/14\", \"3/9/12\", \"2/5/…\n$ runtime               &lt;dbl&gt; 93, 113, 105, 122, 118, 83, 92, 84, 100, 91, 119…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}]\", \"[{'…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"The Laws of Space and Time are About to be Viol…\n$ title                 &lt;chr&gt; \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ Keywords              &lt;chr&gt; \"[{'id': 4379, 'name': 'time travel'}, {'id': 96…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 4, 'character': 'Lou', 'credit_id'…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '59ac067c92514107af02c8c8', 'dep…\n$ revenue               &lt;dbl&gt; 12314651, 95149435, 13092000, 16000000, 3923970,…\n\nglimpse(d_test)\n\nRows: 4,398\nColumns: 22\n$ id                    &lt;dbl&gt; 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, …\n$ belongs_to_collection &lt;chr&gt; \"[{'id': 34055, 'name': 'Pokémon Collection', 'p…\n$ budget                &lt;dbl&gt; 0.00e+00, 8.80e+04, 0.00e+00, 6.80e+06, 2.00e+06…\n$ genres                &lt;chr&gt; \"[{'id': 12, 'name': 'Adventure'}, {'id': 16, 'n…\n$ homepage              &lt;chr&gt; \"http://www.pokemon.com/us/movies/movie-pokemon-…\n$ imdb_id               &lt;chr&gt; \"tt1226251\", \"tt0051380\", \"tt0118556\", \"tt125595…\n$ original_language     &lt;chr&gt; \"ja\", \"en\", \"en\", \"fr\", \"en\", \"en\", \"de\", \"en\", …\n$ original_title        &lt;chr&gt; \"ディアルガVSパルキアVSダークライ\", \"Attack of t…\n$ overview              &lt;chr&gt; \"Ash and friends (this time accompanied by newco…\n$ popularity            &lt;dbl&gt; 3.851534, 3.559789, 8.085194, 8.596012, 3.217680…\n$ poster_path           &lt;chr&gt; \"/tnftmLMemPLduW6MRyZE0ZUD19z.jpg\", \"/9MgBNBqlH1…\n$ production_companies  &lt;chr&gt; NA, \"[{'name': 'Woolner Brothers Pictures Inc.',…\n$ production_countries  &lt;chr&gt; \"[{'iso_3166_1': 'JP', 'name': 'Japan'}, {'iso_3…\n$ release_date          &lt;chr&gt; \"7/14/07\", \"5/19/58\", \"5/23/97\", \"9/4/10\", \"2/11…\n$ runtime               &lt;dbl&gt; 90, 65, 100, 130, 92, 121, 119, 77, 120, 92, 88,…\n$ spoken_languages      &lt;chr&gt; \"[{'iso_639_1': 'en', 'name': 'English'}, {'iso_…\n$ status                &lt;chr&gt; \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               &lt;chr&gt; \"Somewhere Between Time & Space... A Legend Is B…\n$ title                 &lt;chr&gt; \"Pokémon: The Rise of Darkrai\", \"Attack of the 5…\n$ Keywords              &lt;chr&gt; \"[{'id': 11451, 'name': 'pok√©mon'}, {'id': 1155…\n$ cast                  &lt;chr&gt; \"[{'cast_id': 3, 'character': 'Tonio', 'credit_i…\n$ crew                  &lt;chr&gt; \"[{'credit_id': '52fe44e7c3a368484e03d683', 'dep…"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#rezept",
    "href": "posts/tmdb02/tmdb02.html#rezept",
    "title": "tmdb02",
    "section": "Rezept",
    "text": "Rezept\n\nRezept definieren\n\nrec1 &lt;-\n  recipe(revenue ~ ., data = d_train) %&gt;% \n  update_role(all_predictors(), new_role = \"id\") %&gt;% \n  update_role(popularity, runtime, revenue, budget) %&gt;% \n  update_role(revenue, new_role = \"outcome\") %&gt;% \n  step_mutate(budget = ifelse(budget &lt; 10, 10, budget)) %&gt;% \n  step_log(budget) %&gt;% \n  step_impute_knn(all_predictors())\n\nrec1\n\n\n\nCheck das Rezept\n\nrec1_prepped &lt;-\n  prep(rec1, verbose = TRUE)\n\noper 1 step mutate [training] \noper 2 step log [training] \noper 3 step impute knn [training] \nThe retained training set is ~ 28.71 Mb  in memory.\n\nrec1_prepped\n\n\nd_train_baked &lt;-\n  rec1_prepped %&gt;% \n  bake(new_data = NULL) \n\nhead(d_train_baked)\n\n# A tibble: 6 × 23\n     id belongs_to_collection   budget genres homepage imdb_id original_language\n  &lt;dbl&gt; &lt;fct&gt;                    &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;fct&gt;            \n1     1 [{'id': 313576, 'name'…  16.5  [{'id… &lt;NA&gt;     tt2637… en               \n2     2 [{'id': 107674, 'name'…  17.5  [{'id… &lt;NA&gt;     tt0368… en               \n3     3 &lt;NA&gt;                     15.0  [{'id… http://… tt2582… en               \n4     4 &lt;NA&gt;                     14.0  [{'id… http://… tt1821… hi               \n5     5 &lt;NA&gt;                      2.30 [{'id… &lt;NA&gt;     tt1380… ko               \n6     6 &lt;NA&gt;                     15.9  [{'id… &lt;NA&gt;     tt0093… en               \n# ℹ 16 more variables: original_title &lt;fct&gt;, overview &lt;fct&gt;, popularity &lt;dbl&gt;,\n#   poster_path &lt;fct&gt;, production_companies &lt;fct&gt;, production_countries &lt;fct&gt;,\n#   release_date &lt;fct&gt;, runtime &lt;dbl&gt;, spoken_languages &lt;fct&gt;, status &lt;fct&gt;,\n#   tagline &lt;fct&gt;, title &lt;fct&gt;, Keywords &lt;fct&gt;, cast &lt;fct&gt;, crew &lt;fct&gt;,\n#   revenue &lt;dbl&gt;\n\n\nDie AV-Spalte sollte leer sein:\n\nbake(rec1_prepped, new_data = head(d_test), all_outcomes())\n\n# A tibble: 6 × 0\n\n\n\nd_train_baked %&gt;% \n  map_df(~ sum(is.na(.)))\n\n# A tibble: 1 × 23\n     id belongs_to_collection budget genres homepage imdb_id original_language\n  &lt;int&gt;                 &lt;int&gt;  &lt;int&gt;  &lt;int&gt;    &lt;int&gt;   &lt;int&gt;             &lt;int&gt;\n1     0                  2396      0      7     2054       0                 0\n# ℹ 16 more variables: original_title &lt;int&gt;, overview &lt;int&gt;, popularity &lt;int&gt;,\n#   poster_path &lt;int&gt;, production_companies &lt;int&gt;, production_countries &lt;int&gt;,\n#   release_date &lt;int&gt;, runtime &lt;int&gt;, spoken_languages &lt;int&gt;, status &lt;int&gt;,\n#   tagline &lt;int&gt;, title &lt;int&gt;, Keywords &lt;int&gt;, cast &lt;int&gt;, crew &lt;int&gt;,\n#   revenue &lt;int&gt;\n\n\nKeine fehlenden Werte mehr in den Prädiktoren.\nNach fehlenden Werten könnte man z.B. auch so suchen:\n\ndatawizard::describe_distribution(d_train_baked)\n\nVariable   |     Mean |       SD |      IQR |              Range | Skewness | Kurtosis |    n | n_Missing\n---------------------------------------------------------------------------------------------------------\nid         |  1500.50 |   866.17 |  1500.50 |    [1.00, 3000.00] |     0.00 |    -1.20 | 3000 |         0\nbudget     |    12.51 |     6.44 |    14.88 |      [2.30, 19.76] |    -0.87 |    -1.09 | 3000 |         0\npopularity |     8.46 |    12.10 |     6.88 | [1.00e-06, 294.34] |    14.38 |   280.10 | 3000 |         0\nruntime    |   107.85 |    22.08 |    24.00 |     [0.00, 338.00] |     1.02 |     8.20 | 3000 |         0\nrevenue    | 6.67e+07 | 1.38e+08 | 6.66e+07 |   [1.00, 1.52e+09] |     4.54 |    27.78 | 3000 |         0\n\n\nSo bekommt man gleich noch ein paar Infos über die Verteilung der Variablen. Praktische Sache.\nDas Test-Sample backen wir auch mal:\n\nd_test_baked &lt;-\n  bake(rec1_prepped, new_data = d_test)\n\nd_test_baked %&gt;% \n  head()\n\n# A tibble: 6 × 22\n     id belongs_to_collection   budget genres homepage imdb_id original_language\n  &lt;dbl&gt; &lt;fct&gt;                    &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;   &lt;fct&gt;            \n1  3001 [{'id': 34055, 'name':…   2.30 [{'id… &lt;NA&gt;     &lt;NA&gt;    ja               \n2  3002 &lt;NA&gt;                     11.4  [{'id… &lt;NA&gt;     &lt;NA&gt;    en               \n3  3003 &lt;NA&gt;                      2.30 [{'id… &lt;NA&gt;     &lt;NA&gt;    en               \n4  3004 &lt;NA&gt;                     15.7  &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;    fr               \n5  3005 &lt;NA&gt;                     14.5  [{'id… &lt;NA&gt;     &lt;NA&gt;    en               \n6  3006 &lt;NA&gt;                      2.30 [{'id… &lt;NA&gt;     &lt;NA&gt;    en               \n# ℹ 15 more variables: original_title &lt;fct&gt;, overview &lt;fct&gt;, popularity &lt;dbl&gt;,\n#   poster_path &lt;fct&gt;, production_companies &lt;fct&gt;, production_countries &lt;fct&gt;,\n#   release_date &lt;fct&gt;, runtime &lt;dbl&gt;, spoken_languages &lt;fct&gt;, status &lt;fct&gt;,\n#   tagline &lt;fct&gt;, title &lt;fct&gt;, Keywords &lt;fct&gt;, cast &lt;fct&gt;, crew &lt;fct&gt;"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#kreuzvalidierung",
    "href": "posts/tmdb02/tmdb02.html#kreuzvalidierung",
    "title": "tmdb02",
    "section": "Kreuzvalidierung",
    "text": "Kreuzvalidierung\n\ncv_scheme &lt;- vfold_cv(d_train,\n                      v = 5, \n                      repeats = 1)"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#modelle",
    "href": "posts/tmdb02/tmdb02.html#modelle",
    "title": "tmdb02",
    "section": "Modelle",
    "text": "Modelle\n\nBaum\n\nmod_tree &lt;-\n  decision_tree(cost_complexity = tune(),\n                tree_depth = tune(),\n                mode = \"regression\")\n\n\n\nRandom Forest\n\nmod_rf &lt;-\n  rand_forest(mtry = tune(),\n              min_n = tune(),\n              trees = 1000,\n              mode = \"regression\") %&gt;% \n  set_engine(\"ranger\", num.threads = 4)"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#workflows",
    "href": "posts/tmdb02/tmdb02.html#workflows",
    "title": "tmdb02",
    "section": "Workflows",
    "text": "Workflows\n\nwf_tree &lt;-\n  workflow() %&gt;% \n  add_model(mod_tree) %&gt;% \n  add_recipe(rec1)\n\nwf_rf &lt;-\n  workflow() %&gt;% \n  add_model(mod_rf) %&gt;% \n  add_recipe(rec1)"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#fitten-und-tunen",
    "href": "posts/tmdb02/tmdb02.html#fitten-und-tunen",
    "title": "tmdb02",
    "section": "Fitten und tunen",
    "text": "Fitten und tunen\nUm Rechenzeit zu sparen, kann man den Parameter grid bei tune_grid() auf einen kleinen Wert setzen. Der Default ist 10. Um gute Vorhersagen zu erzielen, sollte man den Wert tendenziell noch über 10 erhöhen.\n\nTree\nParallele Verarbeitung starten:\n\ncl &lt;- makePSOCKcluster(4)  # Create 4 clusters\nregisterDoParallel(cl)\n\n\ntic()\ntree_fit &lt;-\n  wf_tree %&gt;% \n  tune_race_anova(\n    resamples = cv_scheme,\n    #grid = 2\n  )\ntoc()\n\n37.736 sec elapsed\n\n\nHilfe zu tune_grid() bekommt man hier.\n\ntree_fit\n\n# Tuning results\n# 5-fold cross-validation \n# A tibble: 5 × 5\n  splits             id    .order .metrics          .notes          \n  &lt;list&gt;             &lt;chr&gt;  &lt;int&gt; &lt;list&gt;            &lt;list&gt;          \n1 &lt;split [2400/600]&gt; Fold1      3 &lt;tibble [20 × 6]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [2400/600]&gt; Fold2      1 &lt;tibble [20 × 6]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [2400/600]&gt; Fold3      2 &lt;tibble [20 × 6]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [2400/600]&gt; Fold5      4 &lt;tibble [16 × 6]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [2400/600]&gt; Fold4      5 &lt;tibble [14 × 6]&gt; &lt;tibble [0 × 3]&gt;\n\n\nSteht was in den .notes?\n\ntree_fit[[\".notes\"]][[2]]\n\n# A tibble: 0 × 3\n# ℹ 3 variables: location &lt;chr&gt;, type &lt;chr&gt;, note &lt;chr&gt;\n\n\nNein.\n\ncollect_metrics(tree_fit)\n\n# A tibble: 14 × 8\n   cost_complexity tree_depth .metric .estimator      mean     n std_err .config\n             &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;  \n 1        1.56e- 5         14 rmse    standard     8.95e+7     5 4.65e+6 Prepro…\n 2        1.56e- 5         14 rsq     standard     5.82e-1     5 3.16e-2 Prepro…\n 3        9.32e- 5         10 rmse    standard     8.91e+7     5 4.66e+6 Prepro…\n 4        9.32e- 5         10 rsq     standard     5.85e-1     5 3.11e-2 Prepro…\n 5        2.36e-10          5 rmse    standard     8.80e+7     5 4.57e+6 Prepro…\n 6        2.36e-10          5 rsq     standard     5.92e-1     5 3.20e-2 Prepro…\n 7        2.29e- 8         11 rmse    standard     8.93e+7     5 4.67e+6 Prepro…\n 8        2.29e- 8         11 rsq     standard     5.83e-1     5 3.10e-2 Prepro…\n 9        9.60e- 4          9 rmse    standard     8.84e+7     5 5.00e+6 Prepro…\n10        9.60e- 4          9 rsq     standard     5.90e-1     5 3.22e-2 Prepro…\n11        1.94e- 9         12 rmse    standard     8.95e+7     5 4.64e+6 Prepro…\n12        1.94e- 9         12 rsq     standard     5.82e-1     5 3.10e-2 Prepro…\n13        5.72e- 7          7 rmse    standard     8.83e+7     5 4.73e+6 Prepro…\n14        5.72e- 7          7 rsq     standard     5.91e-1     5 3.38e-2 Prepro…\n\n\n\nshow_best(tree_fit)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric .estimator      mean     n  std_err .config\n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;  \n1        2.36e-10          5 rmse    standard   88038619.     5 4572618. Prepro…\n2        5.72e- 7          7 rmse    standard   88262344.     5 4734314. Prepro…\n3        9.60e- 4          9 rmse    standard   88397994.     5 5003102. Prepro…\n4        9.32e- 5         10 rmse    standard   89140111.     5 4663576. Prepro…\n5        2.29e- 8         11 rmse    standard   89330466.     5 4668641. Prepro…"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#finalisieren",
    "href": "posts/tmdb02/tmdb02.html#finalisieren",
    "title": "tmdb02",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nbest_tree_wf &lt;-\n  wf_tree %&gt;% \n  finalize_workflow(select_best(tree_fit))\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\nbest_tree_wf\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n3 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_impute_knn()\n\n── Model ───────────────────────────────────────────────────────────────────────\nDecision Tree Model Specification (regression)\n\nMain Arguments:\n  cost_complexity = 2.36005153743282e-10\n  tree_depth = 5\n\nComputational engine: rpart \n\n\n\ntree_last_fit &lt;-\n  fit(best_tree_wf, data = d_train)\n\ntree_last_fit\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n3 Recipe Steps\n\n• step_mutate()\n• step_log()\n• step_impute_knn()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 3000 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n 1) root 3000 5.672651e+19   66725850  \n   2) budget&lt; 18.32631 2845 1.958584e+19   46935270  \n     4) budget&lt; 17.19976 2252 5.443953e+18   25901120  \n       8) popularity&lt; 9.734966 1745 1.665118e+18   17076460  \n        16) popularity&lt; 5.761331 1019 3.184962e+17    8793730  \n          32) budget&lt; 15.44456 782 1.408243e+17    6074563 *\n          33) budget&gt;=15.44456 237 1.528117e+17   17765830 *\n        17) popularity&gt;=5.761331 726 1.178595e+18   28701940  \n          34) budget&lt; 16.15249 484 6.504138e+17   21093220 *\n          35) budget&gt;=16.15249 242 4.441208e+17   43919380 *\n       9) popularity&gt;=9.734966 507 3.175231e+18   56273980  \n        18) budget&lt; 15.36217 186 3.092335e+17   24880850  \n          36) popularity&lt; 14.04031 151 1.743659e+17   20728170 *\n          37) popularity&gt;=14.04031 35 1.210294e+17   42796710 *\n        19) budget&gt;=15.36217 321 2.576473e+18   74464390  \n          38) popularity&lt; 19.64394 300 2.025184e+18   68010500 *\n          39) popularity&gt;=19.64394 21 3.602808e+17  166662900 *\n     5) budget&gt;=17.19976 593 9.361685e+18  126815400  \n      10) popularity&lt; 19.63372 570 6.590372e+18  117422100  \n        20) budget&lt; 17.86726 374 2.692151e+18   94469490  \n          40) popularity&lt; 8.444193 149 6.363495e+17   68256660 *\n          41) popularity&gt;=8.444193 225 1.885623e+18  111828200 *\n        21) budget&gt;=17.86726 196 3.325222e+18  161219400  \n          42) popularity&lt; 11.60513 126 1.693483e+18  136587100 *\n          43) popularity&gt;=11.60513 70 1.417677e+18  205557600 *\n      11) popularity&gt;=19.63372 23 1.474624e+18  359605200  \n        22) runtime&gt;=109.5 16 9.882757e+17  299077200 *\n        23) runtime&lt; 109.5 7 2.937458e+17  497955000 *\n   3) budget&gt;=18.32631 155 1.557371e+19  429978800  \n     6) popularity&lt; 17.26579 101 4.711450e+18  299997300  \n      12) budget&lt; 18.73897 67 1.671489e+18  230290900  \n        24) popularity&lt; 12.66146 40 5.426991e+17  174328700  \n          48) budget&lt; 18.44536 18 1.099070e+17  134734600 *\n          49) budget&gt;=18.44536 22 3.814856e+17  206724000 *\n        25) popularity&gt;=12.66146 27 8.179336e+17  313197700  \n          50) budget&lt; 18.52944 13 1.273606e+17  234797100 *\n          51) budget&gt;=18.52944 14 5.364675e+17  385998300 *\n      13) budget&gt;=18.73897 34 2.072879e+18  437360100  \n        26) runtime&lt; 132.5 26 1.123840e+18  391271100  \n          52) popularity&lt; 11.34182 9 9.729505e+16  248614500 *\n          53) popularity&gt;=11.34182 17 7.464210e+17  466795200 *\n        27) runtime&gt;=132.5 8 7.143147e+17  587149400 *\n     7) popularity&gt;=17.26579 54 5.964228e+18  673092200  \n      14) budget&lt; 18.99438 33 2.082469e+18  534404700  \n        28) popularity&lt; 25.35778 19 5.425201e+17  416871200 *\n\n...\nand 4 more lines."
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#vorhersage-test-sample",
    "href": "posts/tmdb02/tmdb02.html#vorhersage-test-sample",
    "title": "tmdb02",
    "section": "Vorhersage Test-Sample",
    "text": "Vorhersage Test-Sample\n\npredict(tree_last_fit, new_data = d_test)\n\n# A tibble: 4,398 × 1\n        .pred\n        &lt;dbl&gt;\n 1   6074563.\n 2   6074563.\n 3  21093221.\n 4  21093221.\n 5   6074563.\n 6  21093221.\n 7   6074563.\n 8  68256659.\n 9  43919378.\n10 205557624.\n# ℹ 4,388 more rows\n\n\n\nRF"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#fitten-und-tunen-1",
    "href": "posts/tmdb02/tmdb02.html#fitten-und-tunen-1",
    "title": "tmdb02",
    "section": "Fitten und Tunen",
    "text": "Fitten und Tunen\nUm Rechenzeit zu sparen, kann man das Objekt, wenn einmal berechnet, abspeichern unter result_obj_path auf der Festplatte und beim nächsten Mal importieren, das geht schneller als neu berechnen.\nDas könnte dann z.B. so aussehen:\n\nif (file.exists(result_obj_path)) {\n  rf_fit &lt;- read_rds(result_obj_path)\n} else {\n  tic()\n  rf_fit &lt;-\n    wf_rf %&gt;% \n    tune_grid(\n      resamples = cv_scheme)\n  toc()\n}\n\nAchtung Ein Ergebnisobjekt von der Festplatte zu laden ist gefährlich. Wenn Sie Ihr Modell verändern, aber vergessen, das Objekt auf der Festplatte zu aktualisieren, werden Ihre Ergebnisse falsch sein (da auf dem veralteten Objekt beruhend), ohne dass Sie durch eine Fehlermeldung von R gewarnt würden!\nSo kann man das Ergebnisobjekt auf die Festplatte schreiben:\n\n#write_rds(rf_fit, file = \"objects/tmbd_rf_fit1.rds\")\n\nAber wir berechnen lieber neu:\n\ntic()\nrf_fit &lt;-\n  wf_rf %&gt;% \n  tune_grid(\n    resamples = cv_scheme\n    #grid = 2\n    )\ntoc()\n\n34.282 sec elapsed\n\n\n\ncollect_metrics(rf_fit)\n\n# A tibble: 20 × 8\n    mtry min_n .metric .estimator         mean     n      std_err .config       \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;             &lt;dbl&gt; &lt;int&gt;        &lt;dbl&gt; &lt;chr&gt;         \n 1     3    26 rmse    standard   81496992.        5 4420334.     Preprocessor1…\n 2     3    26 rsq     standard          0.647     5       0.0319 Preprocessor1…\n 3     1     8 rmse    standard   81104914.        5 4249148.     Preprocessor1…\n 4     1     8 rsq     standard          0.651     5       0.0270 Preprocessor1…\n 5     3    13 rmse    standard   82253761.        5 4204371.     Preprocessor1…\n 6     3    13 rsq     standard          0.639     5       0.0316 Preprocessor1…\n 7     2    16 rmse    standard   81466291.        5 4103501.     Preprocessor1…\n 8     2    16 rsq     standard          0.646     5       0.0298 Preprocessor1…\n 9     2    36 rmse    standard   81355080.        5 4051776.     Preprocessor1…\n10     2    36 rsq     standard          0.649     5       0.0281 Preprocessor1…\n11     3     5 rmse    standard   84125788.        5 4113181.     Preprocessor1…\n12     3     5 rsq     standard          0.623     5       0.0347 Preprocessor1…\n13     1    32 rmse    standard   82381636.        5 4069505.     Preprocessor1…\n14     1    32 rsq     standard          0.645     5       0.0230 Preprocessor1…\n15     1    33 rmse    standard   82130106.        5 3978566.     Preprocessor1…\n16     1    33 rsq     standard          0.647     5       0.0231 Preprocessor1…\n17     2    20 rmse    standard   81547269.        5 4189669.     Preprocessor1…\n18     2    20 rsq     standard          0.647     5       0.0294 Preprocessor1…\n19     2    23 rmse    standard   81351141.        5 4073682.     Preprocessor1…\n20     2    23 rsq     standard          0.648     5       0.0285 Preprocessor1…\n\n\n\nselect_best(rf_fit)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 1 × 3\n   mtry min_n .config              \n  &lt;int&gt; &lt;int&gt; &lt;chr&gt;                \n1     1     8 Preprocessor1_Model02"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#finalisieren-1",
    "href": "posts/tmdb02/tmdb02.html#finalisieren-1",
    "title": "tmdb02",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nfinal_wf &lt;-\n  wf_rf %&gt;% \n  finalize_workflow(select_best(rf_fit))\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n\nfinal_fit &lt;-\n  fit(final_wf, data = d_train)\n\n\nfinal_preds &lt;- \n  final_fit %&gt;% \n  predict(new_data = d_test) %&gt;% \n  bind_cols(d_test)\n\n\nsubmission &lt;-\n  final_preds %&gt;% \n  select(id, revenue = .pred)\n\nAbspeichern und einreichen:\n\nwrite_csv(submission, file = \"submission.csv\")"
  },
  {
    "objectID": "posts/tmdb02/tmdb02.html#kaggle-score",
    "href": "posts/tmdb02/tmdb02.html#kaggle-score",
    "title": "tmdb02",
    "section": "Kaggle Score",
    "text": "Kaggle Score\nDiese Submission erzielte einen Score von 2.7664 (RMSLE).\n\nsol &lt;- 2.7664\n\n\nCategories:\n\nds1\ntidymodels\nstatlearning\ntmdb\ntrees\nnum"
  },
  {
    "objectID": "posts/summarise04/summarise04.html",
    "href": "posts/summarise04/summarise04.html",
    "title": "summarise04",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\n\nGruppieren Sie danach, wie viele Lenkräder bei der Auktion dabei waren.\nFassen Sie die Spalte total_pr zusammen und zwar zur Standardabweichung (SD) - pro Gruppe!\n\nGeben Sie die erste Kennzahl als Antwort zurück!\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nOder so:\n\ndata(mariokart, package = \"openintro\")  # aus dem Paket \"openintro\"\n\nDazu muss das Paket openintro auf Ihrem Computer installiert sein.\nZusammenfassen:\n\nmariokart_gruppiert &lt;- group_by(mariokart, wheels)  # Gruppieren\nmariokart_klein &lt;- summarise(mariokart_gruppiert, pr_sd = sd(total_pr))  # zusammenfassen\nmariokart_klein\n\n# A tibble: 5 × 2\n  wheels pr_sd\n   &lt;int&gt; &lt;dbl&gt;\n1      0 14.3 \n2      1  4.15\n3      2 38.3 \n4      3  7.42\n5      4 NA   \n\n\nDie Lösung lautet: 14.27\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nvariability\nnum"
  },
  {
    "objectID": "posts/adjustieren2_var1/adjustieren2_var1.html",
    "href": "posts/adjustieren2_var1/adjustieren2_var1.html",
    "title": "adjustieren2_var1",
    "section": "",
    "text": "Aufgabe\nBetrachten Sie folgendes Modell, das den Zusammenhang des Preises (price) und dem Gewicht (carat) von Diamanten untersucht (Datensatz diamonds).\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\ndiamonds &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n\nRows: 53940 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): cut, color, clarity\ndbl (8): rownames, carat, depth, table, price, x, y, z\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAber zuerst zentrieren wir den metrischen Prädiktor carat, um den Achsenabschnitt besser interpretieren zu können.\n\ndiamonds2 &lt;-\n  diamonds %&gt;% \n  mutate(carat_z = carat - mean(carat, na.rm = TRUE))\n\nDann berechnen wir ein (bayesianisches) Regressionsmodell, wobei wir auf die Standardwerte der Prior zurückgreifen.\n\nlibrary(rstanarm)\nlm1 &lt;- stan_glm(price ~ carat_z, data = diamonds2,\n                refresh = 0)\nparameters(lm1)\n\nParameter   |  Median |             95% CI |   pd |  Rhat |     ESS |                       Prior\n-------------------------------------------------------------------------------------------------\n(Intercept) | 3932.64 | [3919.83, 3945.55] | 100% | 1.004 | 1178.00 | Normal (3932.80 +- 9973.60)\ncarat_z     | 7755.90 | [7727.59, 7783.52] | 100% | 1.000 | 4716.00 |   Normal (0.00 +- 21040.85)\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nZur Verdeutlichung ein Diagramm zum Modell:\n\ndiamonds2 %&gt;% \n  ggplot() +\n  aes(x = carat_z, y = price) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nOder so:\n\nestimate_relation(lm1) |&gt; plot()\n\n\n\n\nAufgabe:\nGeben Sie eine Regressionsformel an, die lm1 ergänzt, so dass die Schliffart (cut) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben.\nHinweis:\n\nGeben Sie nur die Regressionsformel an.\nLassen Sie zwischen Termen der Regressionsformel jeweils ein Leerzeichen Abstand.\nBeziehen Sie sich auf das Modell bzw. die Angaben oben.\nEs gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\n\ndiamonds %&gt;% \n  distinct(cut)\n\n# A tibble: 5 × 1\n  cut      \n  &lt;chr&gt;    \n1 Ideal    \n2 Premium  \n3 Good     \n4 Very Good\n5 Fair     \n\n\n         \n\n\nLösung\nDie richtige Antwort lautet: price ~ carat_z + cut\nDas Modell könnten wir so berechnen:\n\nlm2 &lt;- stan_glm(price ~ carat_z + cut, data = diamonds2,\n                refresh = 0)  # verhindert einen Haufen unnötigen Output\nparameters(lm2)\n\nParameter    |  Median |             95% CI |   pd |  Rhat |     ESS |                       Prior\n--------------------------------------------------------------------------------------------------\n(Intercept)  | 2401.60 | [2326.67, 2475.70] | 100% | 1.000 | 1022.00 | Normal (3932.80 +- 9973.60)\ncarat_z      | 7871.06 | [7844.55, 7898.35] | 100% | 0.999 | 3734.00 |   Normal (0.00 +- 21040.85)\ncutGood      | 1124.68 | [1040.23, 1213.25] | 100% | 1.000 | 1224.00 |   Normal (0.00 +- 34685.38)\ncutIdeal     | 1804.40 | [1726.43, 1883.62] | 100% | 1.000 | 1083.00 |   Normal (0.00 +- 20362.28)\ncutPremium   | 1443.13 | [1365.40, 1520.66] | 100% | 1.000 | 1099.00 |   Normal (0.00 +- 22862.49)\ncutVery Good | 1513.52 | [1435.77, 1594.26] | 100% | 1.000 | 1092.00 |   Normal (0.00 +- 23922.15)\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nOder auch so, mit der klassischen Regression:\nlm(price ~ carat_z + cut, data = diamonds2) gi```\nDas führt zu ähnlichen Ergebnissen.\nMan könnte hier noch einen Interaktionseffekt ergänzen.\n\nCategories:\n\nlm\nregression\nbayes\nadjust\nstring"
  },
  {
    "objectID": "posts/summarise03/summarise03.html",
    "href": "posts/summarise03/summarise03.html",
    "title": "summarise03",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\n\nGruppieren Sie danach, wie viele Lenkräder bei der Auktion dabei waren.\nFassen Sie die Spalte total_pr zusammen und zwar zum Mittelwert - pro Gruppe!\nBerechnen Sie den Mittelwert dieser Zahlen!\n\nGeben Sie diese Zahl als Antwort zurück!\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nZusammenfassen:\n\nmariokart_gruppiert &lt;- group_by(mariokart, wheels)  # Gruppieren\nmariokart_klein &lt;- summarise(mariokart_gruppiert, pr_mean = mean(total_pr))  # zusammenfassen\nmariokart_klein\n\n# A tibble: 5 × 2\n  wheels pr_mean\n   &lt;int&gt;   &lt;dbl&gt;\n1      0    41.1\n2      1    44.2\n3      2    61.0\n4      3    69.8\n5      4    65.0\n\n\n\nsummarise(mariokart_klein, pr_mean = mean(pr_mean))\n\n# A tibble: 1 × 1\n  pr_mean\n    &lt;dbl&gt;\n1    56.2\n\n\nmin analog.\nDie Lösung lautet: 56\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nnum"
  },
  {
    "objectID": "posts/filter-na2/filter-na2.html",
    "href": "posts/filter-na2/filter-na2.html",
    "title": "filter-na2",
    "section": "",
    "text": "Filtern Sie alle Zeilen mit fehlende Werte im Datensatz penguins!"
  },
  {
    "objectID": "posts/filter-na2/filter-na2.html#setup",
    "href": "posts/filter-na2/filter-na2.html#setup",
    "title": "filter-na2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnrow(d)\n\n[1] 344"
  },
  {
    "objectID": "posts/filter-na2/filter-na2.html#weg-1",
    "href": "posts/filter-na2/filter-na2.html#weg-1",
    "title": "filter-na2",
    "section": "Weg 1",
    "text": "Weg 1\n\nd %&gt;% \n  filter(!complete.cases(.)) %&gt;% \n  nrow()\n\n[1] 11"
  },
  {
    "objectID": "posts/filter-na2/filter-na2.html#weg-2",
    "href": "posts/filter-na2/filter-na2.html#weg-2",
    "title": "filter-na2",
    "section": "Weg 2",
    "text": "Weg 2\n\nd %&gt;% \n  filter(if_any(everything(), ~ is.na(.))) %&gt;% \n  nrow()\n\n[1] 11\n\n\n\nCategories:\n\n2023\neda\nna\nstring"
  },
  {
    "objectID": "posts/tidymodels-vorlage3/tidymodels-vorlage3.html",
    "href": "posts/tidymodels-vorlage3/tidymodels-vorlage3.html",
    "title": "tidymodels-vorlage3",
    "section": "",
    "text": "Aufgabe\n\nSchreiben Sie eine prototypische Analyse für ein Vorhersagemodell, das sich als Vorlage für Analysen dieser Art eignet!\nVerzichten Sie auf Resampling und Tuning.\nHinweise:\n\nBerechnen Sie ein Modell\nTunen Sie keinen Parameter des Modells\nVerwenden Sie keine Kreuzvalidierung.\nVerwenden Sie Standardwerte, wo nicht anders angegeben.\nFixieren Sie Zufallszahlen auf den Startwert 42.\n\n         \n\n\nLösung\n\n# Setup:\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tictoc)  # Zeitmessung\nlibrary(easystats)   # NAs zählen\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\n# Data:\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nset.seed(42)\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\n\n# model:\nmod1 &lt;-\n  rand_forest(mode = \"regression\")\n\n\n# cv:\nset.seed(42)\nrsmpl &lt;- vfold_cv(d_train)\n\n\n# recipe:\nrec1 &lt;- recipe(body_mass_g ~  ., data = d_train) |&gt; \n  step_unknown(all_nominal_predictors(), new_level = \"NA\") |&gt; \n  step_naomit(all_predictors()) |&gt; \n  step_dummy(all_nominal_predictors()) |&gt; \n  step_zv(all_predictors()) |&gt; \n  step_normalize(all_predictors()) \n\n\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)\n\n\n# tuning:\ntic()\nwf1_fit &lt;-\n  wf1 %&gt;% \n  last_fit(split = d_split)\n\n→ A | error:   Missing data in columns: bill_length_mm, bill_depth_mm, flipper_length_mm.\nThere were issues with some computations   A: x1\nThere were issues with some computations   A: x1\n\n\nWarning: All models failed. Run `show_notes(.Last.tune.result)` for more\ninformation.\n\ntoc()\n\n0.594 sec elapsed\n\ncollect_metrics(wf1_fit)\n\nNULL\n\n\nAls Check: Das gepreppte/bebackene Rezept:\n\nrec1_prepped &lt;- prep(rec1)\nd_train_baked &lt;- bake(rec1_prepped, new_data = NULL)\n\n\nd_train_baked |&gt; \n  head()\n\n# A tibble: 6 × 12\n  rownames bill_length_mm bill_depth_mm flipper_length_mm    year body_mass_g\n     &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;   &lt;dbl&gt;       &lt;dbl&gt;\n1   -1.24          -1.53          0.386            -0.794 -1.29          3450\n2    1.45           1.32          0.386            -0.365  1.14          3675\n3   -0.212          0.401        -1.97              0.707 -1.29          4500\n4   -0.993          0.343         0.887            -0.294 -0.0757        4150\n5    0.530          0.879        -0.566             2.07  -0.0757        5800\n6   -0.281         -0.957         0.787            -1.15   1.14          3650\n# ℹ 6 more variables: species_Chinstrap &lt;dbl&gt;, species_Gentoo &lt;dbl&gt;,\n#   island_Dream &lt;dbl&gt;, island_Torgersen &lt;dbl&gt;, sex_male &lt;dbl&gt;, sex_NA. &lt;dbl&gt;\n\n\n\ndescribe_distribution(d_train_baked)\n\nVariable          |      Mean |     SD |     IQR |              Range | Skewness | Kurtosis |   n | n_Missing\n-------------------------------------------------------------------------------------------------------------\nrownames          | -5.63e-17 |   1.00 |    1.70 |      [-1.72, 1.68] |    -0.01 |    -1.21 | 257 |         0\nbill_length_mm    | -2.97e-16 |   1.00 |    1.68 |      [-2.28, 2.98] |     0.01 |    -0.79 | 257 |         0\nbill_depth_mm     |  2.71e-16 |   1.00 |    1.60 |      [-2.02, 2.19] |    -0.11 |    -0.87 | 257 |         0\nflipper_length_mm | -9.83e-16 |   1.00 |    1.64 |      [-1.94, 2.07] |     0.32 |    -1.02 | 257 |         0\nyear              | -6.89e-14 |   1.00 |    2.43 |      [-1.29, 1.14] |    -0.12 |    -1.51 | 257 |         0\nbody_mass_g       |   4200.97 | 792.54 | 1212.50 | [2700.00, 6300.00] |     0.49 |    -0.69 | 257 |         0\nspecies_Chinstrap | -2.24e-17 |   1.00 |    0.00 |      [-0.50, 1.98] |     1.49 |     0.22 | 257 |         0\nspecies_Gentoo    |  1.64e-17 |   1.00 |    2.07 |      [-0.76, 1.31] |     0.56 |    -1.70 | 257 |         0\nisland_Dream      | -5.50e-17 |   1.00 |    2.08 |      [-0.75, 1.34] |     0.60 |    -1.66 | 257 |         0\nisland_Torgersen  |  1.72e-17 |   1.00 |    0.00 |      [-0.41, 2.43] |     2.04 |     2.18 | 257 |         0\nsex_male          | -5.86e-17 |   1.00 |    2.00 |      [-0.96, 1.03] |     0.07 |    -2.01 | 257 |         0\nsex_NA.           |  1.45e-17 |   1.00 |    0.00 |      [-0.15, 6.46] |     6.35 |    38.63 | 257 |         0\n\n\n\nCategories:\n\ntidymodels\nstatlearning\ntemplate\nstring"
  },
  {
    "objectID": "posts/tidymodels-remove-na2/tidymodels-remove-na2.html",
    "href": "posts/tidymodels-remove-na2/tidymodels-remove-na2.html",
    "title": "tidymodels-remove-na2",
    "section": "",
    "text": "Aufgabe\n\nDas folgende Rezept ist gedacht, fehlende Werte aus dem Datensatz penguins zu entfernen. Allerdings erfüllt es diese Aufgabe nicht.\nFinden Sie den Fehler und korrigieren Sie das Rezept.\nHinweise:\n\nVerwenden Sie tidymodels.\nVerwenden Sie Standardwerte, wo nicht anders angegeben.\nFixieren Sie Zufallszahlen auf den Startwert 42.\n\n         \n\n\nLösung\n\n# Setup:\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n\n\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\n# Data:\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# recipe:\nrec1 &lt;- recipe(body_mass_g ~  ., data = d) |&gt; \n  step_naomit() \n\nAls Check: Das gepreppte/bebackene Rezept:\n\nrec1_prepped &lt;- prep(rec1)\nd_train_baked &lt;- bake(rec1_prepped, new_data = NULL)\n\n\nd_train_baked |&gt; \n  head()\n\n# A tibble: 6 × 9\n  rownames species island   bill_length_mm bill_depth_mm flipper_length_mm sex  \n     &lt;dbl&gt; &lt;fct&gt;   &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt; &lt;fct&gt;\n1        1 Adelie  Torgers…           39.1          18.7               181 male \n2        2 Adelie  Torgers…           39.5          17.4               186 fema…\n3        3 Adelie  Torgers…           40.3          18                 195 fema…\n4        4 Adelie  Torgers…           NA            NA                  NA &lt;NA&gt; \n5        5 Adelie  Torgers…           36.7          19.3               193 fema…\n6        6 Adelie  Torgers…           39.3          20.6               190 male \n# ℹ 2 more variables: year &lt;dbl&gt;, body_mass_g &lt;dbl&gt;\n\n\n\ndescribe_distribution(d_train_baked)\n\nVariable          |    Mean |     SD |     IQR |              Range | Skewness | Kurtosis |   n | n_Missing\n-----------------------------------------------------------------------------------------------------------\nrownames          |  172.50 |  99.45 |  172.50 |     [1.00, 344.00] |     0.00 |    -1.20 | 344 |         0\nbill_length_mm    |   43.92 |   5.46 |    9.30 |     [32.10, 59.60] |     0.05 |    -0.88 | 342 |         2\nbill_depth_mm     |   17.15 |   1.97 |    3.12 |     [13.10, 21.50] |    -0.14 |    -0.91 | 342 |         2\nflipper_length_mm |  200.92 |  14.06 |   23.25 |   [172.00, 231.00] |     0.35 |    -0.98 | 342 |         2\nyear              | 2008.03 |   0.82 |    2.00 | [2007.00, 2009.00] |    -0.05 |    -1.50 | 344 |         0\nbody_mass_g       | 4201.75 | 801.95 | 1206.25 | [2700.00, 6300.00] |     0.47 |    -0.72 | 342 |         2\n\n\n\nCategories:\n\ntidymodels\nstatlearning\ntemplate\nstring"
  },
  {
    "objectID": "posts/twitter04/twitter04.html",
    "href": "posts/twitter04/twitter04.html",
    "title": "twitter04",
    "section": "",
    "text": "Exercise\nLaden Sie \\(n=10^k\\) Tweets von Twitter herunter (mit \\(k=2\\)) via der Twitter API; Suchterm soll sein “@karl_lauterbach”. Bereiten Sie die Textdaten mit grundlegenden Methoden des Textminings auf (Tokenisieren, Stopwörter entfernen, Zahlen entfernen, …). Berichten Sie dann die 10 häufigsten Wörter als Schätzer für die Dinge, die an Karl Lauterbach getweetet werden.\n         \n\n\nSolution\n\nlibrary(rtweet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks rtweet::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytext)\nlibrary(lsa)  # Stopwörter\n\nLoading required package: SnowballC\n\nlibrary(SnowballC)  # Stemming\n\n\nsource(\"/Users/sebastiansaueruser/credentials/hate-speech-analysis-v01-twitter.R\")\n\n\nauth &lt;- rtweet_app(bearer_token = Bearer_Token)\n\n\nkarl1 &lt;- search_tweets(\"@karl_lauterbach\", n = 1e2, include_rts = FALSE)\n#write_rds(karl1, file = \"karl1.rds\", compress = \"gz\")\n\n\nkarl2 &lt;- \n  karl1 %&gt;% \n  select(full_text)\n\n\nkarl3 &lt;- \n  karl2 %&gt;% \n  unnest_tokens(output = word, input = full_text)\n\n\nkarl4 &lt;- \nkarl3 %&gt;% \n  anti_join(tibble(word = lsa::stopwords_de)) \n\nJoining with `by = join_by(word)`\n\n\n\nkarl5 &lt;- \n  karl4 %&gt;% \n  mutate(word = str_replace_na(word, \"^[:digit:]+$\")) %&gt;% \n  mutate(word = str_replace_na(word, \"hptts?://\\\\w+\")) %&gt;% \n  mutate(word = str_replace_na(word, \" +\")) %&gt;% \n  drop_na()\n\n\nkarl6 &lt;-\n  karl5 %&gt;% \n  mutate(word = wordStem(word))\n\n\nkarl6 %&gt;% \n  count(word, sort = TRUE) %&gt;% \n  slice_head(n=10)\n\n# A tibble: 10 × 2\n   word                       n\n   &lt;chr&gt;                  &lt;int&gt;\n 1 karl_lauterbach          100\n 2 rt                        60\n 3 ultrakaerl                19\n 4 corona                    16\n 5 wirwollenmaskenpflicht    16\n 6 länder                    12\n 7 gesundheitsminist         11\n 8 polarstern64              11\n 9 schon                     11\n10 shomburg                  11\n\n\n\nCategories:\n\ntextmining\ntwitter"
  },
  {
    "objectID": "posts/n-vars-diagram/n-vars-diagram.html",
    "href": "posts/n-vars-diagram/n-vars-diagram.html",
    "title": "n-vars-diagram",
    "section": "",
    "text": "Aufgabe\nWie viele Variablen sind in folgendem Diagramm dargestellt?\nDie Daten beziehen sich au den Datensatz mtcars; hier finden Sie Informationen zu dem Datensatz. Er ist in R “fest eingebaut”, also direkt verfügbar.\n         \n\n\nLösung\n\n\n\n\n\nEs sind 5 Variablen abgebildet:\n\nhp\nmpg\nam\ncyl\nvs\n\n\nCategories:\n\nvis\n‘2023’\nnum"
  },
  {
    "objectID": "posts/ttest-als-regr/ttest-als-regr.html",
    "href": "posts/ttest-als-regr/ttest-als-regr.html",
    "title": "ttest-als-regression",
    "section": "",
    "text": "Der t-Test kann als Spezialfall der Regressionsanalyse gedeutet werden.\nHierbei ist es wichtig, sich das Skalenniveau der Variablen, die ein t-Test verarbeitet, vor Augen zu führen.\nHinweisse:\n\nDie folgende Abbildung gibt Tipps.\nInformationen, die zur Lösung einer Aufgabe nicht nötig sind, sollte man ignorieren.\n\n\n\n\n\n\n\n\n\nBenennen Sie die Skalenniveaus der UV eines t-Tests! Geben Sie nur ein Wort ein. Verwenden Sie nur Kleinbuchstaben (z.B. regression).\nBenennen Sie die Skalenniveaus der AV eines t-Tests! Geben Sie nur ein Wort ein. Verwenden Sie nur Kleinbuchstaben (z.B. regression).\nNennen Sie eine beispielhafte Forschungsfrage für einen t-Test.\nSkizzieren Sie ein Diagramm einer Regression, die analytisch identisch (oder sehr ähnlich) zu einem t-Test ist!"
  },
  {
    "objectID": "posts/ttest-als-regr/ttest-als-regr.html#answerlist",
    "href": "posts/ttest-als-regr/ttest-als-regr.html#answerlist",
    "title": "ttest-als-regression",
    "section": "",
    "text": "Benennen Sie die Skalenniveaus der UV eines t-Tests! Geben Sie nur ein Wort ein. Verwenden Sie nur Kleinbuchstaben (z.B. regression).\nBenennen Sie die Skalenniveaus der AV eines t-Tests! Geben Sie nur ein Wort ein. Verwenden Sie nur Kleinbuchstaben (z.B. regression).\nNennen Sie eine beispielhafte Forschungsfrage für einen t-Test.\nSkizzieren Sie ein Diagramm einer Regression, die analytisch identisch (oder sehr ähnlich) zu einem t-Test ist!"
  },
  {
    "objectID": "posts/ttest-als-regr/ttest-als-regr.html#answerlist-1",
    "href": "posts/ttest-als-regr/ttest-als-regr.html#answerlist-1",
    "title": "ttest-als-regression",
    "section": "Answerlist",
    "text": "Answerlist\n\nUV: binär\nAV: metrisch\nUnterscheiden sich die mittleren Einparkzeiten von Frauen und Männern?\nAus dem Datensatz mtcars:\n\n\ndata(mtcars)\nmtcars %&gt;% \n  ggplot() +\n  aes(x = am, y = mpg) +\n  geom_point(alpha = .5) +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCategories:\n\nregression\nttest\nvariable-levels"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html",
    "href": "posts/vis-penguins/vis-penguins.html",
    "title": "vis-penguins",
    "section": "",
    "text": "In dieser Fallstudie (YACSDA: Yet another Case Study on Data Analysis) untersuchen wir den Datensatz penguins.\nSie können den Datensatz so beziehen:\nOder so:\nEin Codebook finden Sie hier.\nDie Forschungsfrage lautet:\nWas ist der Einfluss der Spezies und der Schnabellänge auf das Körpergewicht?\n\nAbhängige Variable (metrisch), y: Körpergewicht\nUnabhängige Variable 1 (nominal), x1: Spezies\nUnabhängige Variable 2 (metrisch), x2: Schnabellänge\n\nVisualisieren Sie dazu folgende Aspekte der Forschungsfrage!"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#umbenennen",
    "href": "posts/vis-penguins/vis-penguins.html#umbenennen",
    "title": "vis-penguins",
    "section": "Umbenennen",
    "text": "Umbenennen"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-y-auf-zwei-verschiedene-arten.",
    "href": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-y-auf-zwei-verschiedene-arten.",
    "title": "vis-penguins",
    "section": "Visualisieren Sie die Verteilung von y auf zwei verschiedene Arten.",
    "text": "Visualisieren Sie die Verteilung von y auf zwei verschiedene Arten.\nDas R-Paket ggpubr erstellt schöne Diagramme (basierend auf ggplot) auf einfache Art. Nehmen wir ein Dichtediagramm; die Variable y soll auf der X-Achse stehen:\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nBeachten Sie, dass die Variable in Anführungsstriche gesetzt werden muss: x = \"y\".\nOder ein Histogramm:\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu.",
    "href": "posts/vis-penguins/vis-penguins.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu.",
    "title": "vis-penguins",
    "section": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.",
    "text": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\nUm Diagramme mit Statistiken anzureichen, bietet sich das Paket ggstatsplot an:\n\n\n\n\n\nBeachten Sie, dass die Variable nicht in Anführungsstriche gesetzt werden darf: x = y."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-x1-und-x2.",
    "href": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-x1-und-x2.",
    "title": "vis-penguins",
    "section": "Visualisieren Sie die Verteilung von x1 und x2.",
    "text": "Visualisieren Sie die Verteilung von x1 und x2.\n\nx1\n\n\n\n\n\n\n\nx2"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-y-bedingt-auf-x1",
    "href": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-die-verteilung-von-y-bedingt-auf-x1",
    "title": "vis-penguins",
    "section": "Visualisieren Sie die Verteilung von y bedingt auf x1",
    "text": "Visualisieren Sie die Verteilung von y bedingt auf x1\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\nOder so:\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu",
    "href": "posts/vis-penguins/vis-penguins.html#fügen-sie-relevante-kennzahlen-zur-letzten-visualisierung-hinzu",
    "title": "vis-penguins",
    "section": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu",
    "text": "Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-den-zusammenhang-von-y-und-x2",
    "href": "posts/vis-penguins/vis-penguins.html#visualisieren-sie-den-zusammenhang-von-y-und-x2",
    "title": "vis-penguins",
    "section": "Visualisieren Sie den Zusammenhang von y und x2",
    "text": "Visualisieren Sie den Zusammenhang von y und x2\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#verbessern-sie-das-letzte-diagramm-so-dass-es-übersichtlicher-wird",
    "href": "posts/vis-penguins/vis-penguins.html#verbessern-sie-das-letzte-diagramm-so-dass-es-übersichtlicher-wird",
    "title": "vis-penguins",
    "section": "Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird",
    "text": "Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird\nEs gibt mehrere Wege, das Diagramm übersichtlicher zu machen. Logarithmieren ist ein Weg.\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nSynonym könnten wir schreiben:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#fügen-sie-dem-letzten-diagramm-relevante-kennzahlen-hinzu",
    "href": "posts/vis-penguins/vis-penguins.html#fügen-sie-dem-letzten-diagramm-relevante-kennzahlen-hinzu",
    "title": "vis-penguins",
    "section": "Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu",
    "text": "Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#fügen-sie-dem-diagramm-zum-zusammenhang-von-y-und-x2-eine-regressionsgerade-hinzu",
    "href": "posts/vis-penguins/vis-penguins.html#fügen-sie-dem-diagramm-zum-zusammenhang-von-y-und-x2-eine-regressionsgerade-hinzu",
    "title": "vis-penguins",
    "section": "Fügen Sie dem Diagramm zum Zusammenhang von y und x2 eine Regressionsgerade hinzu",
    "text": "Fügen Sie dem Diagramm zum Zusammenhang von y und x2 eine Regressionsgerade hinzu\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#ersetzen-sie-die-regressionsgerade-durch-eine-loess-gerade",
    "href": "posts/vis-penguins/vis-penguins.html#ersetzen-sie-die-regressionsgerade-durch-eine-loess-gerade",
    "title": "vis-penguins",
    "section": "Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade",
    "text": "Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#gruppieren-sie-das-letzte-diagramm-nach-x1",
    "href": "posts/vis-penguins/vis-penguins.html#gruppieren-sie-das-letzte-diagramm-nach-x1",
    "title": "vis-penguins",
    "section": "Gruppieren Sie das letzte Diagramm nach x1",
    "text": "Gruppieren Sie das letzte Diagramm nach x1\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#dichotomisieren-sie-y-und-zählen-sie-die-häufigkeiten",
    "href": "posts/vis-penguins/vis-penguins.html#dichotomisieren-sie-y-und-zählen-sie-die-häufigkeiten",
    "title": "vis-penguins",
    "section": "Dichotomisieren Sie y und zählen Sie die Häufigkeiten",
    "text": "Dichotomisieren Sie y und zählen Sie die Häufigkeiten\nNehmen wir einen Mediansplit, um zu dichotomisieren.\n\n\n\n\n\nGleich viele! Das sollte nicht verwundern."
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#gruppieren-sie-das-letzte-diagramm-nach-den-stufen-von-x1",
    "href": "posts/vis-penguins/vis-penguins.html#gruppieren-sie-das-letzte-diagramm-nach-den-stufen-von-x1",
    "title": "vis-penguins",
    "section": "Gruppieren Sie das letzte Diagramm nach den Stufen von x1",
    "text": "Gruppieren Sie das letzte Diagramm nach den Stufen von x1\n\n\n# A tibble: 3 × 3\n  y_dicho x1            n\n  &lt;lgl&gt;   &lt;fct&gt;     &lt;int&gt;\n1 NA      Adelie      152\n2 NA      Chinstrap    68\n3 NA      Gentoo      124"
  },
  {
    "objectID": "posts/vis-penguins/vis-penguins.html#variieren-sie-das-letzte-diagramm-so-dass-anteile-relative-häufigkeiten-statt-absoluter-häufigkeiten-gezeigt-werden",
    "href": "posts/vis-penguins/vis-penguins.html#variieren-sie-das-letzte-diagramm-so-dass-anteile-relative-häufigkeiten-statt-absoluter-häufigkeiten-gezeigt-werden",
    "title": "vis-penguins",
    "section": "Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden",
    "text": "Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden\n\n\n# A tibble: 3 × 4\n  y_dicho x1            n  prop\n  &lt;lgl&gt;   &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 NA      Adelie      152  0.44\n2 NA      Chinstrap    68  0.2 \n3 NA      Gentoo      124  0.36\n\n\nCheck:\n\n\n# A tibble: 1 × 1\n  `sum(prop)`\n        &lt;dbl&gt;\n1           1\n\n\nGut! Die Anteile summieren sich zu ca. 1 (100 Prozent).\n\n\n\n\n\nMan beachten, dass sich die Anteile auf das “Gesamt-N” beziehen.\n\nCategories:\n\nvis\nyacsda\nggquick\npenguins\nstring"
  },
  {
    "objectID": "posts/log-y-regr1/log-y-regr1.html",
    "href": "posts/log-y-regr1/log-y-regr1.html",
    "title": "log-y-regression1",
    "section": "",
    "text": "Exercise\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nIn dieser Aufgabe modellieren wir den (kausalen) Effekt von Schulbildung auf das Einkommen.\nImportieren Sie zunächst den Datensatz und verschaffen Sie sich einen Überblick.\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/Ecdat/Treatment.csv\"\n\nd &lt;- data_read(d_path)\n\nDokumentation und Quellenangaben zum Datensatz finden sich hier.\n\nglimpse(d)\n\nRows: 2,675\nColumns: 11\n$ rownames &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ treat    &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ age      &lt;int&gt; 37, 30, 27, 33, 22, 23, 32, 22, 19, 21, 18, 27, 17, 19, 27, 2…\n$ educ     &lt;int&gt; 11, 12, 11, 8, 9, 12, 11, 16, 9, 13, 8, 10, 7, 10, 13, 10, 12…\n$ ethn     &lt;chr&gt; \"black\", \"black\", \"black\", \"black\", \"black\", \"black\", \"black\"…\n$ married  &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,…\n$ re74     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ re75     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ re78     &lt;dbl&gt; 9930.05, 24909.50, 7506.15, 289.79, 4056.49, 0.00, 8472.16, 2…\n$ u74      &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ u75      &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n\n\nModellieren Sie den Effekt der Bildungsdauer auf das Einkommen! Gehen Sie von einem exponenziellen Zusammenhang der beiden Variablen aus. Um welchen Faktor steigt das Einkommen pro Jahr Bildung (laut Modell)?\nHinweise:\n\nVerwenden Sie lm zur Modellierung.\nOperationalisieren Sie das Einkommen mit der Variable re74.\nFügen Sie keine weiteren Variablen dem Modell hinzu.\nGehen Sie von einem kausalen Effekt des Prädiktors aus.\n\n         \n\n\nSolution\n\nd2 &lt;-\n  d %&gt;% \n  filter(re74 &gt; 0) %&gt;% \n  mutate(re74_log = log(re74))\n\n\nm &lt;- lm(re74_log ~ educ, data = d2)\n\nHier sind die parameters des Modells.\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\nCoefficient\nSE\n95% CI\nt(2327)\np\n\n\n\n\n(Intercept)\n8.83\n0.06\n(8.70, 8.95)\n142.91\n&lt; .001\n\n\neduc\n0.07\n4.94e-03\n(0.07, 0.08)\n15.16\n&lt; .001\n\n\n\n\nFür jedes Jahr Bildung steigt das Einkommen also ca. um den Faktor 1.07.\nEtwas genauer:\n\\(\\hat{\\beta_1} = 0.07\\) bedeutet, dass ein Jahr Bildung zu einen erwarteten Unterschied im Einkommen in Höhe von 0.07 in Log-Einkommen führt. Anders gesagt wird das Einkommen um exp(0.07) erhöht. Dabei gilt \\(e^{0.07} \\approx 1.07\\):\n\nexp(0.07)\n\n[1] 1.072508\n\n\nDie Lösung lautet also: “Pro Jahr Bildung steigt das Einkommen - laut Modell um den Faktor ca. 1.07”.\nMan darf dabei nicht vergessen, dass wir wir uns hier auf die Schnelle ein Modell ausgedacht haben. Ob es in Wirklichkeit so ist, wie unser Modell meint, ist eine andere Sache!\n\nCategories:\n\nregression\nlm\nqm2\nstats-nutshell"
  },
  {
    "objectID": "posts/Mediterran-Alk/Mediterran-Alk.html",
    "href": "posts/Mediterran-Alk/Mediterran-Alk.html",
    "title": "Mediterran-Alk",
    "section": "",
    "text": "Exercise\nAlkohol ist ein weit verbreites Genussmittel in vielen Gesellschaften. Insgesamt sind die negativen (kausalen) Konsequenzen für die Gesundheit unstrittig. So findet man etwa in dieser Studie:\n\nThis meta-analysis found that alcohol most strongly increased the risks for cancers of the oral cavity, pharynx, esophagus, and larynx. Statistically significant increases in risk also existed for cancers of the stomach, colon, rectum, liver, female breast, and ovaries.\n\nAllerdings gibt es auch Stimmen, die Alkohol mit gesundheitlich wünschenswerten Effekten in Verbindung bringen. Dabei wird in einigen Fällen die “mediterrane Ernährung” als Erkärungsnarrativ ins Spiel gebracht. So kann man etwa hier lesen:\n\nAdhering to a Mediterranean diet (…) were associated with a lower risk of all-cause mortality (…).\n\nSolche Befunde wurden von der Breiten- oder Boulevardpresse dankbar aufgenommen, wie man z.B. hier nachlesen kann:\n\nSmall Amounts of Alcohol in Mediterranean Diet Could Boost Brain Health, Claims Study\n\nMan beachte, dass “boost your health” eine kausale Aussage ist, die über einen reinen Zusammenhang hinausgeht. Nach dieser Lesart heißt es: Trink etwas Alkohol (A), das macht dich gesünder (G).\nIhre Aufgabe: Zeigen Sie ein alternatives Kausalmodell auf, das erklärt, warum ein Zusammenhang (wie eine Korrelation) zwischen A und G zu beobachten ist, aber ohne dass es einen (kausalen) Effekt zwischen beiden Größen gäbe!\n         \n\n\nSolution\nEine Erklärung lautet - frei erfunden! -, dass die Lebenszufriedenheit (L) jeweils einen (positiven, kausalen) Effekt auf Alkoholkonsum (A) und auf die Gesundheit (G) ausübt.\n\n\n\n\n\nÜbrigens: Eine Art von Diagramm, das Kausalbeziehungen zwischen Variablen aufzeigt, ist ein sog. Directed Acyclic Graph, oder kurz ein DAG. Hier ist so ein DAG gezeichnet.\n\nCategories:\n~"
  },
  {
    "objectID": "posts/mariokart-sd3/mariokart-sd3.html",
    "href": "posts/mariokart-sd3/mariokart-sd3.html",
    "title": "mariokart-sd3",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie die SD des Verkaufspreis (total_pr) für Spiele, die sowohl neu sind als auch über Lenkräder (wheels) verfügen.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nmariokart &lt;- data_read(d_url)\n\n\nsolution &lt;-\nmariokart  %&gt;% \n  filter(cond == \"new\" & wheels &gt; 0) %&gt;% \n  summarise(pr_sd = sd(total_pr))\n\nsolution\n\n     pr_sd\n1 7.339186\n\n\nLösung: 7.3.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nvariability\nnum"
  },
  {
    "objectID": "posts/adjustieren2/adjustieren2.html",
    "href": "posts/adjustieren2/adjustieren2.html",
    "title": "adjustieren2",
    "section": "",
    "text": "Betrachten Sie folgendes Modell, das den Zusammenhang des Preises (price) und dem Gewicht (carat) von Diamanten untersucht (Datensatz diamonds).\n\nlibrary(tidyverse)\ndiamonds &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n\nRows: 53940 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): cut, color, clarity\ndbl (8): rownames, carat, depth, table, price, x, y, z\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAber zuerst zentrieren wir den metrischen Prädiktor carat, um den Achsenabschnitt besser interpretieren zu können.\n\ndiamonds &lt;-\n  diamonds %&gt;% \n  mutate(carat_z = carat - mean(carat, na.rm = TRUE))\n\nDann berechnen wir ein (bayesianisches) Regressionsmodell, wobei wir auf die Standardwerte der Prior zurückgreifen.\n\nlibrary(rstanarm)\nlibrary(easystats)\nlm1 &lt;- stan_glm(price ~ carat_z, data = diamonds,\n                chains = 1,  # nur ein Mal Stichproben ziehen, spart Zeit (auf Kosten der Genauigkeit)\n                refresh = 0)\nparameters(lm1)\n\nParameter   |  Median |             95% CI |   pd |  Rhat |     ESS |                       Prior\n-------------------------------------------------------------------------------------------------\n(Intercept) | 3933.53 | [3919.66, 3944.37] | 100% | 1.008 |  346.00 | Normal (3932.80 +- 9973.60)\ncarat_z     | 7756.60 | [7728.28, 7786.16] | 100% | 0.999 | 1453.00 |   Normal (0.00 +- 21040.85)\n\n\nZur Verdeutlichung ein Diagramm zum Modell:\n\ndiamonds %&gt;% \n  ggplot() +\n  aes(x = carat_z, y = price) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nWas kostet in Diamant mittlerer Größe laut Modell lm1? Runden Sie auf eine Dezimale. Geben Sie nur eine Zahl ein.\nGeben Sie eine Regressionsformel an, die lm1 ergänzt, so dass die Schliffart (cut) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben. Geben Sie nur die Regressionsformel an. Lassen Sie zwischen Termen jeweils ein Leerzeichen Abstand.\n\nHinweis: Es gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\ndiamonds %&gt;% \n  distinct(cut)\n\n# A tibble: 5 × 1\n  cut      \n  &lt;chr&gt;    \n1 Ideal    \n2 Premium  \n3 Good     \n4 Very Good\n5 Fair"
  },
  {
    "objectID": "posts/adjustieren2/adjustieren2.html#answerlist",
    "href": "posts/adjustieren2/adjustieren2.html#answerlist",
    "title": "adjustieren2",
    "section": "",
    "text": "Was kostet in Diamant mittlerer Größe laut Modell lm1? Runden Sie auf eine Dezimale. Geben Sie nur eine Zahl ein.\nGeben Sie eine Regressionsformel an, die lm1 ergänzt, so dass die Schliffart (cut) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben. Geben Sie nur die Regressionsformel an. Lassen Sie zwischen Termen jeweils ein Leerzeichen Abstand.\n\nHinweis: Es gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\ndiamonds %&gt;% \n  distinct(cut)\n\n# A tibble: 5 × 1\n  cut      \n  &lt;chr&gt;    \n1 Ideal    \n2 Premium  \n3 Good     \n4 Very Good\n5 Fair"
  },
  {
    "objectID": "posts/kausal24/kausal24.html",
    "href": "posts/kausal24/kausal24.html",
    "title": "kausal24",
    "section": "",
    "text": "Gegeben sei der DAG g (s. u.). Der DAG verfügt über mehrere Variablen, die als Knoten im Graph dargestellt sind und mit \\(x_1, x_2, \\ldots x_n\\) bezeichnet sind.\nWelche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?\nUV: x7.\nAV: x8.\nHinweise:\n\nMengen sind mittels geschweifter Klammern gekennzeichnet, z.B. {x8, x9} meint die Menge mit den zwei Elementen x8 und x9.\nDie leere Menge { } bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.\nAlle Variablen werden als gemessen vorausgesetzt.\nEs ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie “keine Lösung”.\n\n\n\n\n\n\n\n\n\n{ x1 , x2 , x3 , x4 , x5 , x6 }\n{ x2, x4 }\n{ x5, x6 }\n{ x1, x6 }\n{ x4 }"
  },
  {
    "objectID": "posts/kausal24/kausal24.html#answerlist",
    "href": "posts/kausal24/kausal24.html#answerlist",
    "title": "kausal24",
    "section": "",
    "text": "{ x1 , x2 , x3 , x4 , x5 , x6 }\n{ x2, x4 }\n{ x5, x6 }\n{ x1, x6 }\n{ x4 }"
  },
  {
    "objectID": "posts/kausal24/kausal24.html#answerlist-1",
    "href": "posts/kausal24/kausal24.html#answerlist-1",
    "title": "kausal24",
    "section": "Answerlist",
    "text": "Answerlist\n\nRichtig\nFalsch\nFalsch\nFalsch\nFalsch\n\n\nCategories:\n\ndag\ncausal"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html",
    "title": "tidymodels-penguins07",
    "section": "",
    "text": "Berechnen Sie ein Entscheidungsbaum-Modell mit tidymodels und zwar anhand des penguins Datensatzes.\nModellgleichung: body_mass_g ~ bill_length_mm.\nBerichten Sie die RMSE!\nHinweise:\n\nTuning Sie \\(Cp\\) mit 20 verschiedenen den Werten.\nLöschen Sie alle Zeilen mit fehlenden Werten in den Prädiktoren.\nBeachten Sie die üblichen Hinweise.\nNatürlich gilt: Ceteris paribus. Halten Sie also die Modelle im Übrigen vergleichbar bzw. identisch."
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#setup",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#setup",
    "title": "tidymodels-penguins07",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nWir dürfen keine fehlenden Werte in der Y-Variable haben (im Train-Set), sonst meckert Tidymodels:\n\nd2 &lt;- \n  d %&gt;% \n  drop_na(body_mass_g)"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#daten-aufteilen",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#daten-aufteilen",
    "title": "tidymodels-penguins07",
    "section": "Daten aufteilen:",
    "text": "Daten aufteilen:\n\nset.seed(42)\nd_split &lt;- initial_split(d2)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#cv-1",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#cv-1",
    "title": "tidymodels-penguins07",
    "section": "CV",
    "text": "CV\n\nset.seed(42)\nfolds &lt;- vfold_cv(d_train, v = 10)"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#workflow",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#workflow",
    "title": "tidymodels-penguins07",
    "section": "Workflow",
    "text": "Workflow\n\nrec1 &lt;-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %&gt;% \n  step_naomit(all_numeric_predictors())\n\nmod_tree &lt;- \ndecision_tree(\n  mode = \"regression\",\n  cost_complexity = tune()\n)\n\nwflow &lt;-\n  workflow() %&gt;%\n  add_recipe(rec1) %&gt;%\n  add_model(mod_tree)"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#fitten",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#fitten",
    "title": "tidymodels-penguins07",
    "section": "Fitten",
    "text": "Fitten\n\ntic()\nwflow_fit &lt;-\n  tune_grid(\n    wflow,\n    resamples = folds,\n    control = control_grid(save_workflow = TRUE),\n    grid = 20,\n    metrics = metric_set(rmse)\n    )\ntoc()\n\n12.189 sec elapsed"
  },
  {
    "objectID": "posts/tidymodels-penguins07/tidymodels-penguins07.html#modellgüte",
    "href": "posts/tidymodels-penguins07/tidymodels-penguins07.html#modellgüte",
    "title": "tidymodels-penguins07",
    "section": "Modellgüte",
    "text": "Modellgüte\n\nbestfit1 &lt;- fit_best(x = wflow_fit)\nlastfit1 &lt;- last_fit(bestfit1, d_split)\ncollect_metrics(lastfit1)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard     638.    Preprocessor1_Model1\n2 rsq     standard       0.315 Preprocessor1_Model1\n\n\n\nCategories:\n\ntidymodels\nstatlearning\ntrees\nschoice"
  },
  {
    "objectID": "posts/Klausur-raten/Klausur-raten.html",
    "href": "posts/Klausur-raten/Klausur-raten.html",
    "title": "Klausur-raten",
    "section": "",
    "text": "Aufgabe\nEine Studentin muss (oder will ?) eine Statistik-Klausur schreiben. Die Klausur besteht ausschließlich aus 27 Richtig-Falsch-Aufgaben, Aufgaben also, die mit entweder Ja oder Nein zu beantworten sind (per Ankreuzen). Nach (mehr oder weniger) reiflicher Überlegung entschließt sie sich, die Klausur nur durch Münzwurf zu beantworten. Also nix lernen, nix wissen, einfach nur raten. Bei jeder Aufgabe.\nDie Münze, die die Studentin benutzt, hat eine Wahrscheinlichkeit für einen “Treffer” (richtige Antwort angekreuzt) von \\(p = 0.25\\).\nWie groß ist die Wahrscheinlichkeit für genau \\(k=13\\) Treffer in der Klausur?\nBeachten Sie die Bearbeitungshinweise.\n         \n\n\nLösung\n\nsol &lt;- dbinom(x = k_treffer,  # Anzahl Treffer\n              size = anz_aufgaben,  # Anzahl Aufgaben in der Klausur\n              prob = p_treffer)  # Wahrscheinlichkeit für einen Treffer\n\nAntwort: Der gesuchte Werte beträgt: 0.01.\n\nAufgaben-ID: Klausur-raten, Toleranzbreite: 0.025\n\nCategories:\n\nprobability\ndyn\nbayes\nnum"
  },
  {
    "objectID": "posts/mariokart-mean4/mariokart-mean4.html",
    "href": "posts/mariokart-mean4/mariokart-mean4.html",
    "title": "mariokart-mean4",
    "section": "",
    "text": "Aufgabe\nImportieren Sie den Datensatz mariokart in R. Berechnen Sie den mittleren Verkaufspreis (total_pr) für Spiele, die neu sind oder (auch) über Lenkräder (wheels) verfügen.\nHinweise:\n\nRunden Sie auf 1 Dezimalstelle.\n\n         \n\n\nLösung\nPakete starten:\n\nlibrary(tidyverse)\nlibrary(easystats)\n\nDaten importieren:\n\nd_url &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\"\nd &lt;- data_read(d_url)\n\n\nsolution &lt;-\nd  %&gt;% \n  filter(cond == \"new\" | wheels &gt; 0) %&gt;% \n  summarise(pr_mean = mean(total_pr))\n\nsolution\n\n   pr_mean\n1 52.73218\n\n\nLösung: 52.73.\n\nCategories:\n\ndatawrangling\ndplyr\neda\nnum"
  },
  {
    "objectID": "posts/twitter02/twitter02.html",
    "href": "posts/twitter02/twitter02.html",
    "title": "twitter02",
    "section": "",
    "text": "Exercise\nLaden Sie die neuesten Tweets an karl_lauterbach herunter - und zwar so viele wie auf einmal möglich.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rtweet)\n\n\nAttaching package: 'rtweet'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\nEinloggen bei Twitter; zuerst die Credentials bereithalten:\n\nsource(\"/Users/sebastiansaueruser/credentials/hate-speech-analysis-v01-twitter.R\")\n\n\nauth &lt;- rtweet_app(bearer_token = Bearer_Token)\n\nAus der Hilfe zu search_tweets:\nDescription\nReturns Twitter statuses matching a user provided search query. ONLY RETURNS DATA FROM THE PAST 6-9 DAYS.\nTweets an Karl Lauterbach suchen:\n\nkarl_tweets &lt;- search_tweets(q = \"@karl_lauterbach\", n = 150000, retryonratelimit = TRUE)\n\nWir könnten n auch auf Inf setzen, aber, da wir auf das Refreshen des Rate Limits warten müssen, könnte sehr lange dauern. Daher nehmen wir hier nur einen kürzeren Wert.\n\ndim(karl_tweets)\n\n[1] 18000    43\n\nhead(karl_tweets)\n\n# A tibble: 6 × 43\n  created_at               id id_str      full_…¹ trunc…² displ…³ entities     metad…⁴\n  &lt;dttm&gt;                &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   &lt;lgl&gt;     &lt;dbl&gt; &lt;list&gt;       &lt;list&gt; \n1 2022-10-23 13:30:18 1.58e18 1584145185… \"Bei ⁦@… FALSE       122 &lt;named list&gt; &lt;df&gt;   \n2 2022-10-22 18:34:37 1.58e18 1583859379… \"Es is… FALSE       263 &lt;named list&gt; &lt;df&gt;   \n3 2022-10-22 17:56:39 1.58e18 1583849826… \"Die S… FALSE       215 &lt;named list&gt; &lt;df&gt;   \n4 2022-10-24 08:10:35 1.58e18 1584427113… \"Zu we… FALSE       219 &lt;named list&gt; &lt;df&gt;   \n5 2022-10-24 08:10:35 1.58e18 1584427113… \"RT @K… FALSE       140 &lt;named list&gt; &lt;df&gt;   \n6 2022-10-24 08:10:25 1.58e18 1584427072… \"RT @U… FALSE       139 &lt;named list&gt; &lt;df&gt;   \n# … with 35 more variables: source &lt;chr&gt;, in_reply_to_status_id &lt;dbl&gt;,\n#   in_reply_to_status_id_str &lt;chr&gt;, in_reply_to_user_id &lt;dbl&gt;,\n#   in_reply_to_user_id_str &lt;chr&gt;, in_reply_to_screen_name &lt;chr&gt;, geo &lt;list&gt;,\n#   coordinates &lt;list&gt;, place &lt;list&gt;, contributors &lt;lgl&gt;, is_quote_status &lt;lgl&gt;,\n#   retweet_count &lt;int&gt;, favorite_count &lt;int&gt;, favorited &lt;lgl&gt;, retweeted &lt;lgl&gt;,\n#   possibly_sensitive &lt;lgl&gt;, lang &lt;chr&gt;, quoted_status_id &lt;dbl&gt;,\n#   quoted_status_id_str &lt;chr&gt;, quoted_status &lt;list&gt;, retweeted_status &lt;list&gt;, …\n# ℹ Use `colnames()` to see all variable names\n\nCategories:\n\ntextmining\ntwitter"
  },
  {
    "objectID": "posts/ReThink4e1/ReThink4e1.html",
    "href": "posts/ReThink4e1/ReThink4e1.html",
    "title": "ReThink4e1",
    "section": "",
    "text": "Welche der folgenden Zeilen zeigt den Likelihood?\n\n\n\n\\(\\mu \\sim \\mathcal{N}(0, 10)\\)\n\\(\\sigma \\sim \\mathcal{U}(0, 1)\\)\n\\(y_i = \\beta_0 + \\beta_1\\cdot x\\)\n\\(y_i \\sim \\mathcal{N}(\\mu, \\sigma)\\)\n\nQuelle: McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Aufl.). Taylor and Francis, CRC Press."
  },
  {
    "objectID": "posts/ReThink4e1/ReThink4e1.html#answerlist",
    "href": "posts/ReThink4e1/ReThink4e1.html#answerlist",
    "title": "ReThink4e1",
    "section": "",
    "text": "\\(\\mu \\sim \\mathcal{N}(0, 10)\\)\n\\(\\sigma \\sim \\mathcal{U}(0, 1)\\)\n\\(y_i = \\beta_0 + \\beta_1\\cdot x\\)\n\\(y_i \\sim \\mathcal{N}(\\mu, \\sigma)\\)\n\nQuelle: McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan (2. Aufl.). Taylor and Francis, CRC Press."
  },
  {
    "objectID": "posts/ReThink4e1/ReThink4e1.html#answerlist-1",
    "href": "posts/ReThink4e1/ReThink4e1.html#answerlist-1",
    "title": "ReThink4e1",
    "section": "Answerlist",
    "text": "Answerlist\n\nFalsch. Priori-Verteilung.\nFalsch. Priori-Verteilung.\nFalsch. Regressionsformel.\nWahr. Likelihood.\n\nMan könnte den Likelihood auch so schreiben:\n$L = y_i| , N(, ) $,\nwas noch deutlicher macht, dass die Likelihood die Wahrscheinlichkeit der Daten (y) ausdrückt, gegeben der Modellparameter (\\(\\mu, \\sigma)\\).\n\nCategories:\n\nprobability\nbayes\nschoice"
  },
  {
    "objectID": "posts/purrr-map03/purrr-map03.html",
    "href": "posts/purrr-map03/purrr-map03.html",
    "title": "purrr-map03",
    "section": "",
    "text": "Exercise\nImportieren Sie das Grundatzprogramm der Partei AfD (in der aktuellsten Version). Tokenisieren Sie nach Sätzen. Dann entfernen Sie alle Zahlen. Dann zählen Sie die Anzahl der Wörter pro Satz und berichten gängige deskriptive Statistiken dazu.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nText aus PDF-Dateien kann man mit dem Paket pdftools einlesen:\n\nlibrary(pdftools)\n\nUsing poppler version 22.02.0\n\nd_path &lt;- \"~/Literatur/_Div/Politik/afd-grundsatzprogramm-2022.pdf\"\n\nd &lt;- tibble(text = pdf_text(d_path))\n\nDann erstellen wir eine Tidy-Version und tokenisieren nach Sätzen:\n\nlibrary(tidytext)\nd2 &lt;-\n  d %&gt;% \n  unnest_sentences(output = word, input = text)\n\nhead(d2)\n\n# A tibble: 6 × 1\n  word                                                                          \n  &lt;chr&gt;                                                                         \n1 programm für deutschland.                                                     \n2 das grundsatzprogramm der alternative für deutschland.                        \n3 2   programm für deutschland | inhalt         präambel                       …\n4 familien stärken        43             und parteiferne rechnungshöfe         …\n5 3   programm für deutschland | inhalt         7 | kultur, sprache und identit…\n6 förder- und                         10.10.3 deutsche literatur im inland digi…\n\n\nDann entfernen wir die Zahlen:\n\nd3 &lt;- \n  d2 %&gt;% \n  mutate(word = str_remove_all(word, pattern = \"[:digit:]+\"))\n\nPrüfen wir, ob es geklappt hat:\n\nd2$word[10]\n\n[1] \"weniger subventionen    88      13.7 fischerei, forst und jagd: im einklang mit der natur     88      13.8 flächenkonkurrenz:           nicht zu lasten der land- und forstwirtschaft            88\"\n\nd3$word[10]\n\n[1] \"weniger subventionen          . fischerei, forst und jagd: im einklang mit der natur           . flächenkonkurrenz:           nicht zu lasten der land- und forstwirtschaft            \"\n\n\nOk.\nDann zählen wir die Wörter pro Satz:\n\nd4 &lt;- \n  d3 %&gt;% \n  summarise(word_count_per_sentence = str_count(word, \"\\\\w+\"))\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\nhead(d4)\n\n# A tibble: 6 × 1\n  word_count_per_sentence\n                    &lt;int&gt;\n1                       3\n2                       6\n3                     196\n4                      40\n5                     254\n6                      15\n\n\nVisualisierung:\n\nd4 %&gt;% \n  ggplot(aes(x = word_count_per_sentence)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\ndescribe_distribution(d4)\n\nVariable                |  Mean |    SD | IQR |          Range | Skewness | Kurtosis |    n | n_Missing\n-------------------------------------------------------------------------------------------------------\nword_count_per_sentence | 21.86 | 17.24 |  19 | [0.00, 254.00] |     3.84 |    37.52 | 1208 |         0\n\n\n\nCategories:\n\nR\nmap\ntidyverse"
  },
  {
    "objectID": "posts/tidymodels-vorlage2/tidymodels-vorlage2.html",
    "href": "posts/tidymodels-vorlage2/tidymodels-vorlage2.html",
    "title": "tidymodels-vorlage2",
    "section": "",
    "text": "Aufgabe\nSchreiben Sie eine Vorlage für eine prädiktive Analyse mit Tidymodels!\n\nHinweise:\n\nBerechnen Sie ein Modell\nTunen Sie mind. einen Parameter des Modells\nVerwenden Sie Kreuzvalidierung\nVerwenden Sie Standardwerte, wo nicht anders angegeben.\nFixieren Sie Zufallszahlen auf den Startwert 42.\n\n         \n\n\nLösung\n\n# Setup:\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Zeitmessung\nlibrary(&lt;other_package_you_might_need_for_modelling&gt;)  # tidymodels uses existing packages for modelling so you need to make them available\n\n\n# Data:\nd_path &lt;- \"Enter data path here\"\nd &lt;- read_csv(d_path)\n\nset.seed(42)\nd_split &lt;- initial_split(d)\nd_train &lt;- training(d_split)\nd_test &lt;- testing(d_split)\n\n\n# model:\nmod1 &lt;-\n  &lt;enter_parsnip_model_name_here&gt;(mode = \"&lt;choose_regression_or_classification&gt;\",\n           cost_complexity = tune())\n\n\n# cv:\nset.seed(42)\nrsmpl &lt;- vfold_cv(d_train)\n\n\n# recipe:\nrec1 &lt;- recipe(&lt;enter_output_variable&gt; ~  ., data = d_train)\n\n\n# workflow:\nwf1 &lt;-\n  workflow() %&gt;% \n  add_model(mod1) %&gt;% \n  add_recipe(rec1)\n\n\n# tuning:\ntic()\nwf1_fit &lt;-\n  wf1 %&gt;% \n  tune_grid(\n    resamples = rsmpl)\ntoc()\n\n# best candidate:\nshow_best(wf1_fit)\n\n\n# finalize wf:\nwf1_final &lt;-\n  wf1 %&gt;% \n  finalize_workflow(select_best(wf1_fit))\n\n\nwf1_fit_final &lt;-\n  wf1_final %&gt;% \n  last_fit(d_split)\n\n\n# Modellgüte im Test-Set:\ncollect_metrics(wf1_fit_final)\n\n\nCategories:\n\ntidymodels\nstatlearning\ntemplate\nstring"
  },
  {
    "objectID": "posts/summarise02/summarise02.html",
    "href": "posts/summarise02/summarise02.html",
    "title": "summarise02",
    "section": "",
    "text": "Aufgabe\nIm Datensatz mariokart:\n\nGruppieren Sie danach, ob ein Foto bei der Auktion dabei war (stock_photo).\nFassen Sie die Spalte total_pr zusammen und zwar zum maximalwert - pro Gruppe!\nBerechnen Sie den Mittelwert dieser beiden Zahlen!\n\nGeben Sie diese Zahl als Antwort zurück!\n         \n\n\nLösung\nPakete starten:\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(tidyverse)  # startet das Paket tidyverse\n\nDaten importieren:\n\nmariokart &lt;- data_read(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nZusammenfassen:\n\nmariokart_gruppiert &lt;- group_by(mariokart, stock_photo)  # Gruppieren\nmariokart_klein &lt;- summarise(mariokart_gruppiert, max_preis = max(total_pr))  # zusammenfassen\nmariokart_klein\n\n# A tibble: 2 × 2\n  stock_photo max_preis\n  &lt;chr&gt;           &lt;dbl&gt;\n1 no               327.\n2 yes               75 \n\n\n\nsummarise(mariokart_klein, max_preis_mw = mean(max_preis))\n\n# A tibble: 1 × 1\n  max_preis_mw\n         &lt;dbl&gt;\n1         201.\n\n\nmin analog.\nDie Lösung lautet: 201\n\nCategories:\n\ndatawrangling\neda\ntidyverse\ndplyr\nnum"
  },
  {
    "objectID": "posts/penguins-stan-01/penguins-stan-01.html",
    "href": "posts/penguins-stan-01/penguins-stan-01.html",
    "title": "penguins-stan-01",
    "section": "",
    "text": "Aufgabe\nWir untersuchen Einflussfaktoren bzw. Prädiktoren auf das Körpergewicht von Pinguinen. In dieser Aufgabe untersuchen wir in dem Zusammenhang den Zusammenhang von Schnabellänge (als UV) und Körpergewicht (als AV).\nWie groß ist der statistische Einfluss der UV auf die AV?\n\nBerechnen Sie den Punktschätzer des Effekts!\nWie viele Parameter hat das Modell?\nGeben Sie die Breite eines 90%-HDI an (zum Effekt)!\nWie groß ist die Wahrscheinlichkeit, dass der Effekt vorhanden ist (also größer als Null ist), die “Effektwahrscheinlichkeit”?\nWie groß ist das 95%-HDI, wenn Sie nur die Spezies Adelie untersuchen?\nGeben Sie die Prioris an für m1 für die Regressionskoeffizienten!\n\nHinweise:\n\nNutzen Sie den Datensatz zu den Palmer Penguins.\nVerwenden Sie Methoden der Bayes-Statistik und die Software Stan.\nFixieren Sie die Zufallszahlen auf den Startwert 42!\nSie können den Datensatz z.B. hier beziehen oder über das R-Paket palmerpenguins.\nGeben Sie keine Prozentzahlen, sondern stets Anteile an.\nBeachten Sie die übrigen Hinweise.\n\n         \n\n\nLösung\nZentrieren ist eigentlich immer nützlich, aber hier streng genommen nicht unbedingt nötig. Der Hauptgrund ist, dass Stan für uns den Prior für den Intercept festlegt, und zwar auf Basis der Daten, wir uns also nicht um die komische Frage zu kümmern brauchen, welchen Prior wir für den unzentrierten Achsenabschnitt vergeben wollten: Wie schwer sind Pinguins der Schnabellänge Null? Mit zentrierten Prädiktoren ist die Frage nach dem Prior viel einfacher zu beantworten: Wie schwer ist ein Pinguin mit mittelgroßem Schnabel?\nSetup:\n\nlibrary(tidyverse)\nlibrary(easystats)\nlibrary(rstanarm)\n\ndata(\"penguins\", package = \"palmerpenguins\")\n\nEs wird in dieser Aufgabe vorausgesetzt, dass Sie den Datensatz selbständig importieren können. Tipp: Kurzes Googeln hilft ggf., den Datensatz zu finden.\nAlternativ könnten Sie den Datensatz als CSV-Datei importieren:\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\npenguins &lt;- data_read(d_path)  # oder z.B. mit read_csv \n\nEin Blick in die Daten zur Kontrolle, ob das Importieren richtig funktioniert hat:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nVertrauen ist gut, aber - was Golems betrifft - ist Kontrolle eindeutig besser ;-)\n\nPunktschätzer\n\n\nm1 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins, #  Daten\n               seed = 42,  # Reproduzierbarkeit\n               refresh = 0)  # nicht so viel Output\n\n\nparameters(m1, ci_method = \"hdi\", ci = .9)\n\nParameter      | Median |            90% CI |     pd |  Rhat |     ESS |                       Prior\n----------------------------------------------------------------------------------------------------\n(Intercept)    | 361.85 | [-108.79, 834.20] | 89.55% | 0.999 | 3920.00 | Normal (4201.75 +- 2004.89)\nbill_length_mm |  87.45 | [  77.17,  98.51] |   100% | 0.999 | 3931.00 |     Normal (0.00 +- 367.22)\n\n\n\nUncertainty intervals (highest-density) and p-values (two-tailed)\n  computed using a MCMC distribution approximation.\n\n\n\nAnzahl Parameter\n\nDas Modell hat 3 Paramter:\n\n\\(\\beta_0\\) (oder \\(\\alpha\\))\n\\(\\beta_01\\)\n\\(\\sigma\\)\n\n\nBreite des Intervalls\n\nDazu liest man die Intervallgrenzen (90% CI) in der richtigen Zeile ab (Tabelle parameters):\n\n 97.70  - 76.24\n\n[1] 21.46\n\n\nEinheit: mm\n\nEffektwahrscheinlichkeit\n\n\nm1_post &lt;-\n  m1 %&gt;% \n  as_tibble()\n\nm1_post %&gt;% \n  count(bill_length_mm &gt; 0)\n\n# A tibble: 1 × 2\n  `bill_length_mm &gt; 0`     n\n  &lt;lgl&gt;                &lt;int&gt;\n1 TRUE                  4000\n\n\nAlso: 100% oder 1 (4000 von 4000 Stichproben finden dieses Ergebnis in unserem Modell).\nMan kann diesen Wert aus der Tabelle oben (Ausgabe von parameters()) einfach in der Spalte pd ablesen. pd steht für probability of direction, s. Details hier.\nOder so, ist auch einfach:\n\npd_m1 &lt;- p_direction(m1) # aus Paket easystats\npd_m1\n\nProbability of Direction\n\nParameter      |     pd\n-----------------------\n(Intercept)    | 89.55%\nbill_length_mm |   100%\n\n\nUnd plotten ist meist hilfreich: plot(pd_m1).\nMan kann sich auch ein “Dashboard” mit allen Ergebnissen des Modells ausgeben lassen:\n\nmodel_dashboard(m1)\n\n\nNur Adelie:\n\nWelche Spezies gibt es im Datensatz?\n\npenguins %&gt;% \n  count(species)\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\nFiltern:\n\npenguins_adelie &lt;-\n  penguins %&gt;% \n  filter(species == \"Adelie\")\n\nModell berechnen:\n\nm2 &lt;- stan_glm(body_mass_g ~  bill_length_mm,  # Regressionsgleichung\n               data = penguins_adelie, #  Daten\n               seed = 42,  # Repro.\n               refresh = 0)  # nicht so viel Output\n\nDas Modell ist - bis auf die Daten - identisch zu m1.\n\nparameters(m2)\n\nParameter      | Median |            95% CI |     pd |  Rhat |     ESS |                       Prior\n----------------------------------------------------------------------------------------------------\n(Intercept)    |  18.20 | [-881.48, 930.13] | 51.75% | 1.000 | 3988.00 | Normal (3700.66 +- 1146.42)\nbill_length_mm |  94.71 | [  71.21, 118.31] |   100% | 1.000 | 3962.00 |     Normal (0.00 +- 430.43)\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\n\nhdi(m2, parameters = \"bill_length_mm\")\n\nHighest Density Interval\n\nParameter      |         95% HDI\n--------------------------------\nbill_length_mm | [70.88, 117.70]\n\n\nS. auch Tabelle oben.\n\n118.09 - 71.86\n\n[1] 46.23\n\n\n\nPrioris\n\n\ndescribe_prior(m1, component = \"auxiliary\")\n\n       Parameter Prior_Distribution Prior_Location Prior_Scale\n1    (Intercept)             normal       4201.754   2004.8863\n2 bill_length_mm             normal          0.000    367.2233\n\n\nSteht auch in der Tabelle, die von parameters ausgegeben wird.\n\nCategories:\n\nbayes\nregression\nstring"
  },
  {
    "objectID": "posts/purrr-map04/purrr-map04.html",
    "href": "posts/purrr-map04/purrr-map04.html",
    "title": "purrr-map04",
    "section": "",
    "text": "Exercise\nImportieren Sie das Grundatzprogramm der Partei AfD (in der aktuellsten Version). Tokenisieren Sie nach Seiten. Dann verschachteln Sie die Spalte, in denen der Text der Seite steht, zu einer Listenspalte. Schließlich zählen Sie die Anzahl der Wörter pro Seite und berichten gängige deskriptive Statistiken dazu.\n         \n\n\nSolution\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nText aus PDF-Dateien kann man mit dem Paket pdftools einlesen:\n\nlibrary(pdftools)\n\nUsing poppler version 22.02.0\n\nd_path &lt;- \"~/Literatur/_Div/Politik/afd-grundsatzprogramm-2022.pdf\"\n\nd &lt;- tibble(text = pdf_text(d_path))\n\nZu Seiten tokenisieren brauchen wir nicht; das Datenmaterial ist bereits nach Seiten organisiert.\nJetzt “verschachteln” (to nest) wir die Spalte mit dem Text:\n\nd2 &lt;-\n  d %&gt;% \n  nest(data = text)\n\nhead(d2)\n\n# A tibble: 1 × 1\n  data             \n  &lt;list&gt;           \n1 &lt;tibble [96 × 1]&gt;\n\n\nDann zählen wir die Wörter pro Seite:\n\nd3 &lt;-\n  d2 %&gt;% \n  mutate(word_count_per_page = map(data, ~ str_count(.x$text, \"\\\\w+\")))\n\nhead(d3)\n\n# A tibble: 1 × 2\n  data              word_count_per_page\n  &lt;list&gt;            &lt;list&gt;             \n1 &lt;tibble [96 × 1]&gt; &lt;int [96]&gt;         \n\n\nWie sieht eine Zelle aus data aus?\n\nd3$data[[1]]\n\n# A tibble: 96 × 1\n   text                                                                         \n   &lt;chr&gt;                                                                        \n 1 \"PROGRAMM FÜR\\nDEUTSCHLAND.\\nDas Grundsatzprogramm der Alternative für Deuts…\n 2 \"2   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    Präambel\\t\\t\\t\\t\\t\\t    …\n 3 \"3   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    7 | Kultur, Sprache und …\n 4 \"4   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    11 | Finanzen und Steuer…\n 5 \"Präambel.\\n\"                                                                \n 6 \"6   Programm für Deutschland | Präambel\\n\\n\\n\\n\\n    MUT ZU DEUTSCHLAND.   …\n 7 \"KAPITEL 1\\n\\n\\n\\n\\nDemokratie und\\nGrundwerte\\n\"                            \n 8 \"8   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n    DEMOK…\n 9 \"9   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n    1.1 V…\n10 \"10   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n     ble…\n# ℹ 86 more rows\n\n\nWie sieht eine Zelle aus word_count_per_page aus?\n\nd3$data[[1]]\n\n# A tibble: 96 × 1\n   text                                                                         \n   &lt;chr&gt;                                                                        \n 1 \"PROGRAMM FÜR\\nDEUTSCHLAND.\\nDas Grundsatzprogramm der Alternative für Deuts…\n 2 \"2   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    Präambel\\t\\t\\t\\t\\t\\t    …\n 3 \"3   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    7 | Kultur, Sprache und …\n 4 \"4   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    11 | Finanzen und Steuer…\n 5 \"Präambel.\\n\"                                                                \n 6 \"6   Programm für Deutschland | Präambel\\n\\n\\n\\n\\n    MUT ZU DEUTSCHLAND.   …\n 7 \"KAPITEL 1\\n\\n\\n\\n\\nDemokratie und\\nGrundwerte\\n\"                            \n 8 \"8   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n    DEMOK…\n 9 \"9   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n    1.1 V…\n10 \"10   Programm für Deutschland | Demokratie und Grundwerte\\n\\n\\n\\n\\n     ble…\n# ℹ 86 more rows\n\n\nAh! Darin steckt nur eine einzelne Zahl!\n\nd3$data[[1]] %&gt;% str()\n\ntibble [96 × 1] (S3: tbl_df/tbl/data.frame)\n $ text: chr [1:96] \"PROGRAMM FÜR\\nDEUTSCHLAND.\\nDas Grundsatzprogramm der Alternative für Deutschland.\\n\" \"2   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    Präambel\\t\\t\\t\\t\\t\\t                                        \"| __truncated__ \"3   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    7 | Kultur, Sprache und Identität\\t\\t\\t\\t                   \"| __truncated__ \"4   Programm für Deutschland | Inhalt\\n\\n\\n\\n\\n    11 | Finanzen und Steuern\\t\\t\\t\\t\\t                         \"| __truncated__ ...\n\n\nDas heißt, wir können vereinfachen, entschacheln:\n\nd4 &lt;-\n  d3 %&gt;% \n  unnest(word_count_per_page)\n\nhead(d4)\n\n# A tibble: 6 × 2\n  data              word_count_per_page\n  &lt;list&gt;                          &lt;int&gt;\n1 &lt;tibble [96 × 1]&gt;                   9\n2 &lt;tibble [96 × 1]&gt;                 410\n3 &lt;tibble [96 × 1]&gt;                 516\n4 &lt;tibble [96 × 1]&gt;                 297\n5 &lt;tibble [96 × 1]&gt;                   1\n6 &lt;tibble [96 × 1]&gt;                 414\n\n\nVisualisierung:\n\nd4 %&gt;% \n  ggplot(aes(x = word_count_per_page)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\ndescribe_distribution(d4$word_count_per_page)\n\n  Mean |     SD |    IQR |          Range | Skewness | Kurtosis |  n | n_Missing\n--------------------------------------------------------------------------------\n285.84 | 172.27 | 322.75 | [1.00, 516.00] |    -0.64 |    -1.24 | 96 |         0\n\n\n\nCategories:\n\nR\nmap\ntidyverse"
  },
  {
    "objectID": "posts/Stichprobenziehen1/Stichprobenziehen1.html",
    "href": "posts/Stichprobenziehen1/Stichprobenziehen1.html",
    "title": "Stichprobenziehen1",
    "section": "",
    "text": "Exercise\nIn dieser Übung untersuchen wir den Effekt der Stichprobengröße auf die Genauigkeit der Schätzung. Und zwar auf praktische Art und Weise.\nAls praktisches Beispiel soll uns dabei die Körpergröße dienen. Wir erfragen die Körpergröße der Studis und betrachten den Mittelwert einer Stichrpobe in Abhängigkeit der Größe der Stichprobe.\n\nGeben Sie anonym Ihre Körpergröße hier ein.\nSie können die Daten hier beziehen.\nBerechnen Sie den Mittelwert der Körpergröße für eine zufällige Stichprobe der Größen \\(n=5\\) und \\(n=50\\)\nDann berechnen Sie die den “echten” Mittelwert der Studis; damit ist der Mittelwert aller Werte der Tabelle gemeint.\nDiskutieren Sie die Ergebnisse!\nWird die Schätzung genauer bei größerer Stichprobe?\nWird die Schätzung “robuster” (weniger schwankend) bei größerer Stichprobe?\n\n         \n\n\nSolution\nIndividuell\n\nCategories:\n\nlm\ninference\nqm2"
  },
  {
    "objectID": "posts/filter-na4/filter-na4.html",
    "href": "posts/filter-na4/filter-na4.html",
    "title": "filter-na4",
    "section": "",
    "text": "Liefern Sie einen visuellen Überblick über fehlende Werte im Datensatz penguins!"
  },
  {
    "objectID": "posts/filter-na4/filter-na4.html#setup",
    "href": "posts/filter-na4/filter-na4.html#setup",
    "title": "filter-na4",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nd_path &lt;- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd &lt;- read_csv(d_path)\n\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnrow(d)\n\n[1] 344"
  },
  {
    "objectID": "posts/filter-na4/filter-na4.html#weg-1",
    "href": "posts/filter-na4/filter-na4.html#weg-1",
    "title": "filter-na4",
    "section": "Weg 1",
    "text": "Weg 1\n\nlibrary(visdat)\nvis_dat(d)"
  },
  {
    "objectID": "posts/filter-na4/filter-na4.html#weg-2",
    "href": "posts/filter-na4/filter-na4.html#weg-2",
    "title": "filter-na4",
    "section": "Weg 2",
    "text": "Weg 2\n\nd_na_only &lt;- \n  d %&gt;% \n  rowwise() %&gt;% \n  mutate(na_n = sum(is.na(cur_data()))) %&gt;% \n  ungroup()\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `na_n = sum(is.na(cur_data()))`.\nℹ In row 1.\nCaused by warning:\n! `cur_data()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\nd_na_only %&gt;% \n  ggplot(aes(x = na_n)) +\n  geom_bar()\n\n\n\n\n\nCategories:\n\n2023\neda\nna\nstring"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Ans Werk, Daten!",
    "section": "",
    "text": "Datenwerk ist eine Sammlung von Aufgaben mit Bezug zur Datenanalyse.\nAutor: Sebastian Sauer (soweit nicht anders ausgewiesen)\nDer Quellcode dieser Webseite findet sich hier.\nDie Lizenz ist permissiv, s. Hinweise hier."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Many shiny pieces",
    "section": "",
    "text": "chatgpt-sentiment-simple\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\ntransformer\n\n\nchatgpt\n\n\nsentiment\n\n\n\n\n\n\n\n\n\nNov 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nScikit-Learn-LLM Zero Shot Learners\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\ntransformer\n\n\nchatgpt\n\n\nsentiment\n\n\nscikit\n\n\n\n\n\n\n\n\n\nNov 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nchatgpt-sentiment-loop\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\ntransformer\n\n\nchatgpt\n\n\nsentiment\n\n\n\n\n\n\n\n\n\nNov 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nchatgpt-sentiment-simple\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\ntransformer\n\n\nchatgpt\n\n\nsentiment\n\n\n\n\n\n\n\n\n\nNov 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval10-wordvec-rf\n\n\n\n\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncount-emojis\n\n\n\n\n\n\ntextmining\n\n\ntidymodels\n\n\ncount\n\n\ngermeval\n\n\nemojis\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval04\n\n\n\n\n\n\n2023\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nsentiment\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval03\n\n\n\n\n\n\n2023\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nsentiment\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval02\n\n\n\n\n\n\ntextmining\n\n\ntidymodels\n\n\ngermeval\n\n\nsentiment\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval05\n\n\n\n\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nwordvec\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nemojis1\n\n\n\n\n\n\nemoji\n\n\ntextmining\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval08-schimpf\n\n\n\n\n\n\n2023\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncount-words01\n\n\n\n\n\n\ntextmining\n\n\ntidymodels\n\n\ncount\n\n\ngermeval\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nPupil-size\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nregression\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval09-tfidf\n\n\n\n\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval01-textfeatures\n\n\n\n\n\n\n2023\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval06\n\n\n\n\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nwordvec\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmovie-sentiment1\n\n\n\n\n\n\ntextmining\n\n\nimdb\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval-textfeatures01\n\n\n\n\n\n\ntidymodels\n\n\ntextmining\n\n\nprediction\n\n\nsentimentanalysis\n\n\ngermeval\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncount-emoji-emo\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\nemoji\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval-senti01\n\n\n\n\n\n\ntidymodels\n\n\ntextmining\n\n\nprediction\n\n\nsentimentanalysis\n\n\ngermeval\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval08-extract-spacy\n\n\n\n\n\n\nwordembedding\n\n\ntextmining\n\n\npython\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nReThink4e1\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-08-name-clash\n\n\n\n\n\n\nR\n\n\nerror\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-07\n\n\n\n\n\n\nR\n\n\nerror\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-remove-na\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nna-per-col\n\n\n\n\n\n\nR\n\n\nwrangling\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngermeval07\n\n\n\n\n\n\n2023\n\n\ntextmining\n\n\ndatawrangling\n\n\ngermeval\n\n\nprediction\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-error1\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nerror\n\n\nNA\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-vorlage3\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-remove-na2\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 15, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkekse02\n\n\n\n\n\n\nprobability\n\n\nbayes-grid\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npostvert-vis-zwielicht\n\n\n\n\n\n\n2023\n\n\nvis\n\n\nbayes\n\n\npost\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m5\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nbayes-grid\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbath42\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m2\n\n\n\n\n\n\nprobability\n\n\nbayes-grid\n\n\nbayes\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m3\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m4\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nbayes-grid\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntotale-Wskt1\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngroesse01\n\n\n\n\n\n\n2023\n\n\nbayes\n\n\nbayesbox\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nGem-Wskt2\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\ncloze\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz10\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz17\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\noptions-print\n\n\n\n\n\n\n2023\n\n\nR\n\n\ntidyverse\n\n\nmarkdown\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nalphafehler-inflation3\n\n\n\n\n\n\nprobability\n\n\nR\n\n\ninference\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz19\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nalphafehler-inflation4\n\n\n\n\n\n\nprobability\n\n\nR\n\n\ninference\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-08-name-clash\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKaefer2\n\n\n\n\n\n\nR\n\n\nbayes\n\n\nbayesbox\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-tree1\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDAG-Graph\n\n\n\n\n\n\nfopro\n\n\nresearchdesign\n\n\ncausal\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsentiws2\n\n\n\n\n\n\ntextmining\n\n\ntokenizer\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq03\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq04\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nabh-ereignisse2\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel06\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz18\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nalphafehler-inflation2\n\n\n\n\n\n\nprobability\n\n\nR\n\n\ninference\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz20\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\ninference\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz16\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nGem-Wskt3\n\n\n\n\n\n\nprobability\n\n\ndyn\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz11\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq05\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq02\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKlausuren-bestehen\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmodellguete-testset\n\n\n\n\n\n\nregression\n\n\nmodelling\n\n\nperformance\n\n\nrmse\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3m1\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nprobability\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregex02\n\n\n\n\n\n\ntextmining\n\n\nregex\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwithin-design-analysis1\n\n\n\n\n\n\nregression\n\n\nwithin-design\n\n\nresearchdesign\n\n\nfopro\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nadjustieren1a\n\n\n\n\n\n\nregression\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBed-Wskt2\n\n\n\n\n\n\nprobability\n\n\nconditional\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncount-lexicon\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\nregex\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz02\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz05\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-ames-05\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregex03\n\n\n\n\n\n\nregex\n\n\ntextmining\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq10\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nbayes\n\n\nbayes-grid\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nadjustieren2a\n\n\n\n\n\n\nregression\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz04\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz03\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nausreisser1\n\n\n\n\n\n\neda\n\n\ndatawrangling\n\n\ntidyverse\n\n\nausreisser\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWeinhaendler\n\n\n\n\n\n\nprobability\n\n\nbayes-box\n\n\nbayes\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBed-Wskt3\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncorona-blutgruppe\n\n\n\n\n\n\nprobability\n\n\ndependent\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUrne2\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nNerd-gelockert\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m1\n\n\n\n\n\n\nprobability\n\n\nbayes-grid\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsicherheit2\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m6\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nbayes-grid\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-abhaengig_var3a\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBayes-Theorem1\n\n\n\n\n\n\nbayes\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbayes2\n\n\n\n\n\n\nR\n\n\nbayes\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRethink2m7\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nbayes-grid\n\n\nrethink-chap2\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nk-coins-k-hits\n\n\n\n\n\n\nprobability\n\n\ndyn\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nabh-ereignisse\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngroesse02\n\n\n\n\n\n\n2023\n\n\nbayes\n\n\nbayes-box\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nAdditionssatz1\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-tree2\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nspeed\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKaefer1\n\n\n\n\n\n\nR\n\n\nbayes\n\n\nbayesbox\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq09\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-tree5\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nspeed\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq07\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz14\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz13\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nVar-vs-Stufe\n\n\n\n\n\n\nfopro\n\n\nresearchdesign\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq01\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nexam-22\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq06\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-tree4\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nspeed\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-tree3\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nspeed\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\niq08\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel05\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz12\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz15\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKrebs1\n\n\n\n\n\n\nbayes\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz08\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBed-Wskt1\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz06\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz01\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBus1\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregex01\n\n\n\n\n\n\ntextmining\n\n\nregex\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3m5\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nprobability\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBsp-Binomial\n\n\n\n\n\n\nprobability\n\n\nbinomial\n\n\nexample\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz07\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwskt-quiz09\n\n\n\n\n\n\nquiz\n\n\nprobability\n\n\nbayes\n\n\ndistribution\n\n\nquiz1-qm2-ws23\n\n\nschoice\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3m4\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nprobability\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUrne1\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nadjustieren2_var1\n\n\n\n\n\n\nlm\n\n\nregression\n\n\nbayes\n\n\nadjust\n\n\nstring\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKlausur-raten\n\n\n\n\n\n\nprobability\n\n\ndyn\n\n\nbayes\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsicherheit\n\n\n\n\n\n\nR\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrepro1-sessioninfo\n\n\n\n\n\n\nR\n\n\nrepro\n\n\nstring\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-abhaengig_var3\n\n\n\n\n\n\ndyn\n\n\nprobability\n\n\nnum\n\n\n\n\n\n\n\n\n\nOct 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvis-gapminder\n\n\n\n\n\n\nvis\n\n\nyacsda\n\n\nggquick\n\n\ngapminder\n\n\nstring\n\n\n\n\n\n\n\n\n\nSep 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvis-penguins\n\n\n\n\n\n\nvis\n\n\nyacsda\n\n\nggquick\n\n\npenguins\n\n\nstring\n\n\n\n\n\n\n\n\n\nSep 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvis-mtcars\n\n\n\n\n\n\nvis\n\n\nyacsda\n\n\nggquick\n\n\nmtcars\n\n\nstring\n\n\n\n\n\n\n\n\n\nSep 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-stan-01\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nstring\n\n\n\n\n\n\n\n\n\nJul 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal28\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\nschoice\n\n\n\n\n\n\n\n\n\nJun 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal29\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\nschoice\n\n\n\n\n\n\n\n\n\nJun 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nppv-dyn1\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nregression\n\n\nnum\n\n\n\n\n\n\n\n\n\nJun 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nppv-mtcars1\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nregression\n\n\nnum\n\n\n\n\n\n\n\n\n\nJun 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ndurch3-durch5\n\n\n\n\n\n\nr\n\n\nchallenge\n\n\nstring\n\n\n\n\n\n\n\n\n\nJun 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nstep-dummy\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nJun 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\names-kaggle1\n\n\n\n\n\n\nregression\n\n\names\n\n\nkaggle\n\n\nstring\n\n\n\n\n\n\n\n\n\nJun 1, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntargets-multiple-data-files\n\n\n\n\n\n\nprojectmgt\n\n\ntargets\n\n\nrepro\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregex-insert-char\n\n\n\n\n\n\ntextmining\n\n\nregex\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 22, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ncount-emoji\n\n\n\n\n\n\ntextmining\n\n\nnlp\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 22, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npca\n\n\n\n\n\n\neda\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-lasso2\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nlasso\n\n\nlm\n\n\nsimple\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBootstrap1\n\n\n\n\n\n\nstatlearning\n\n\nds1\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels1\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\ndyn\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbike04\n\n\n\n\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbike03\n\n\n\n\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTest-MSE2\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-lasso3\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nlasso\n\n\nlm\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrf-finalize\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbike02\n\n\n\n\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-vorlage\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntitanic_casestudy\n\n\n\n\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nCluster02\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nFlex-vs-nichtflex-Methode3\n\n\n\n\n\n\nstatlearning\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbootstrap\n\n\n\n\n\n\nstatlearning\n\n\ninference\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwfsets_penguins02\n\n\n\n\n\n\nR\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnyc_casestudy\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nFlex-vs-nichtflex-Methode2\n\n\n\n\n\n\nstatlearning\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nFlex-vs-nichtflex-Methode\n\n\n\n\n\n\nstatlearning\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsmape\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nShrinkage1\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nlm-mario2\n\n\n\n\n\n\nR\n\n\nlm\n\n\npredict\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-ames-03\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-ames-04\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-ames-02\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbreiman\n\n\n\n\n\n\nds1\n\n\nprediction\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nlm-mario3\n\n\n\n\n\n\nR\n\n\nlm\n\n\npredict\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nds-quiz\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb06\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels_workflowset01\n\n\n\n\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb01\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb08\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ndiamonds-tidymodels01\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins02\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins05\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBoosting1\n\n\n\n\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsupervisedlearning\n\n\n\n\n\n\nstatlearning\n\n\nds1\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-poly01\n\n\n\n\n\n\nR\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb07\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregr-tree01\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nn-se\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins04\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins03\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels2\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nerror\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrf-usemodels\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nds-quiz2\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npredictioncontest1\n\n\n\n\n\n\nR\n\n\nds1\n\n\nsose22\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nPCA1\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nOLS-Minimierung\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nbike01\n\n\n\n\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels3\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nlm\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTest-MSE1\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwfsets_penguins01\n\n\n\n\n\n\nR\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmse\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nCluster01\n\n\n\n\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nCV1\n\n\n\n\n\n\nstatlearning\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrf-finalize2\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-lasso\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nlasso\n\n\nlm\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nlm-mario1\n\n\n\n\n\n\nR\n\n\nlm\n\n\npredict\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngini-plot\n\n\n\n\n\n\n2023\n\n\nvis\n\n\nstatlearning\n\n\ntree\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrf-finalize3\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-ames-01\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidytext\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins06\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins01\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nknn-ames01\n\n\n\n\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBoosting2\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSzenario-charakterisieren1\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregr-tree03\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb02\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\ntrees\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb05\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregr-tree02\n\n\n\n\n\n\nstatlearning\n\n\ntrees\n\n\ntidymodels\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTengku-Hanis01\n\n\n\n\n\n\ntidymodels\n\n\nprediction\n\n\nyacsda\n\n\nstatlearning\n\n\ntrees\n\n\nspeed\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-penguins07\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntrees\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-vorlage2\n\n\n\n\n\n\ntidymodels\n\n\nstatlearning\n\n\ntemplate\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb04\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntmdb03\n\n\n\n\n\n\nds1\n\n\ntidymodels\n\n\nstatlearning\n\n\ntmdb\n\n\nrandom-forest\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidymodels-poly02\n\n\n\n\n\n\nR\n\n\nstatlearning\n\n\ntidymodels\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter-na1\n\n\n\n\n\n\n2023\n\n\neda\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter-na5\n\n\n\n\n\n\n2023\n\n\neda\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter-na2\n\n\n\n\n\n\n2023\n\n\neda\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter-na3\n\n\n\n\n\n\n2023\n\n\neda\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter-na4\n\n\n\n\n\n\n2023\n\n\neda\n\n\nna\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa06\n\n\n\n\n\n\ndata\n\n\neda\n\n\nlagemaße\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-korr2\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nassociation\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-regr01\n\n\n\n\n\n\nlm\n\n\nmtcars\n\n\ncorrelation\n\n\nregression\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkorr-als-regr\n\n\n\n\n\n\ncorrelation\n\n\nlm\n\n\nregression\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregression1a\n\n\n\n\n\n\nregression\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-korr4\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nassociation\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-korr3\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nassociation\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nlm1\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nstats-nutshell\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkorr02\n\n\n\n\n\n\ndyn\n\n\neda\n\n\nassociation\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRegression5\n\n\n\n\n\n\ndyn\n\n\nregression\n\n\nlm\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRegression3\n\n\n\n\n\n\ndyn\n\n\nregression\n\n\nlm\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nLinearitaet1a\n\n\n\n\n\n\nlm\n\n\nregression\n\n\nlinear\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRegression4\n\n\n\n\n\n\ndyn\n\n\nregression\n\n\nlm\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ninterpret-koeff-lm\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnichtlineare-regr1\n\n\n\n\n\n\nlm\n\n\nvis\n\n\nqm2\n\n\nregression\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregression1b\n\n\n\n\n\n\nregression\n\n\nR\n\n\nlm\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-korr1\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nassociation\n\n\nnum\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa03\n\n\n\n\n\n\ndata\n\n\neda\n\n\nassociation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nregression1\n\n\n\n\n\n\nregression\n\n\ndyn\n\n\nlm\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRegression6\n\n\n\n\n\n\ndyn\n\n\nregression\n\n\nexam-22\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nAussagen-einfache-Regr\n\n\n\n\n\n\nregression\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkorr01\n\n\n\n\n\n\ndyn\n\n\neda\n\n\nassociation\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-regr02\n\n\n\n\n\n\nlm\n\n\nbayes\n\n\nrope\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nanim01\n\n\n\n\n\n\n2023\n\n\nvis\n\n\nanimation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nanim03\n\n\n\n\n\n\n2023\n\n\nvis\n\n\nanimation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nanim02\n\n\n\n\n\n\n2023\n\n\nvis\n\n\nanimation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa04\n\n\n\n\n\n\ndata\n\n\neda\n\n\nlagemaßee\n\n\nvis\n\n\nanimation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa05\n\n\n\n\n\n\ndata\n\n\neda\n\n\nlagemaßee\n\n\nvis\n\n\nanimation\n\n\nstring\n\n\n\n\n\n\n\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKennwert-robust\n\n\n\n\n\n\neda\n\n\nlagemaße\n\n\nvariability\n\n\nschoice\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvis-mariokart-variab\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\nvis\n\n\nvariability\n\n\nstring\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsd-vergleich\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\nvis\n\n\nvariability\n\n\nschoice\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa01\n\n\n\n\n\n\ndata\n\n\neda\n\n\nlagemaßee\n\n\nvariability\n\n\nstring\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nStreuung-Histogramm\n\n\n\n\n\n\neda\n\n\nstreuungsmaß\n\n\nvariability\n\n\ndyn\n\n\nschoice\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-sd1\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise06\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKennwert-robust2\n\n\n\n\n\n\neda\n\n\nstreuungsmaß\n\n\nvariability\n\n\nschoice\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-desk01\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\nvis\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-sd2\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise04\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-sd3\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise05\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nvariability\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmw-berechnen\n\n\n\n\n\n\neda\n\n\ndatawrangling\n\n\ndyn\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmw-berechnen\n\n\n\n\n\n\neda\n\n\ndatawrangling\n\n\ndyn\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-max2\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-mean1\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle10\n\n\n\n\n\n\neda\n\n\nlagemaßee\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise01\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-max1\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSchiefe1\n\n\n\n\n\n\nschoice\n\n\neda\n\n\ndistributions\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSchiefe-erkennen\n\n\n\n\n\n\neda\n\n\ndistributions\n\n\nschoice\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnasa02\n\n\n\n\n\n\ndata\n\n\neda\n\n\nlagemaßee\n\n\nstring\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise03\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-mean2\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-mean4\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmariokart-mean3\n\n\n\n\n\n\ndatawrangling\n\n\ndplyr\n\n\neda\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsummarise02\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nnum\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidydata1\n\n\n\n\n\n\ndatawrangling\n\n\ntidy\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle9\n\n\n\n\n\n\neda\n\n\n2023\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle7\n\n\n\n\n\n\neda\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nfilter01\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle1\n\n\n\n\n\n\neda\n\n\ndatawrangling\n\n\ntidyverse\n\n\ndplyr\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\naffairs-dplyr\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nMWberechnen\n\n\n\n\n\n\neda\n\n\ndatawrangling\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmutate01\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ntidyverse\n\n\ndplyr\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ndplyr-uebersetzen\n\n\n\n\n\n\ndatawrangling\n\n\ntidyverse\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle4\n\n\n\n\n\n\neda\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle3\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwrangle5\n\n\n\n\n\n\neda\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nhaeufigkeit01\n\n\n\n\n\n\ndatawrangling\n\n\neda\n\n\ncount\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nLogikpruefung2\n\n\n\n\n\n\nR\n\n\n2023\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-01\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nthere-is-no-package\n\n\n\n\n\n\nR\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWertberechnen2\n\n\n\n\n\n\nR\n\n\ndyn\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-07\n\n\n\n\n\n\nR\n\n\n2023\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWertzuweisen_mc\n\n\n\n\n\n\nR\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-06a\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nargumente\n\n\n\n\n\n\nR\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nLogikpruefung1\n\n\n\n\n\n\nR\n\n\n2023\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nimport-mtcars\n\n\n\n\n\n\nR\n\n\ndata\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWertzuweisen\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWertpruefen\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-02\n\n\n\n\n\n\nR\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-04\n\n\n\n\n\n\nR\n\n\n2023\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nTyp-Fehler-R-03\n\n\n\n\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nPfad\n\n\n\n\n\n\nR\n\n\npath\n\n\ndatawrangling\n\n\nqm1\n\n\nqm2\n\n\nstring\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWertberechnen\n\n\n\n\n\n\nR\n\n\ndyn\n\n\nnum\n\n\n\n\n\n\n\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nboxhist\n\n\n\n\n\n\nvis\n\n\neda\n\n\nen\n\n\ncloze\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmax-corr1\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nnum\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDiamonds-Histogramm-Vergleich2\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nboxplots-de1a\n\n\n\n\n\n\nvis\n\n\neda\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmovies-vis2\n\n\n\n\n\n\nvis\n\n\neda\n\n\nstring\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRidges-vergleichen\n\n\n\n\n\n\nvis\n\n\ndyn\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDiamonds-Histogramm-Vergleich\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmax-corr2\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nnum\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nHistogramm-in-Boxplot\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmin-corr1\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nnum\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwozu-balkendiagramm\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmovies-vis1\n\n\n\n\n\n\nvis\n\n\neda\n\n\nstring\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot-Aussagen\n\n\n\n\n\n\nvis\n\n\neda\n\n\ndyn\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwozu-streudiagramm\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nStreudiagramm\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ndiamonds-histogram\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nn-vars-diagram\n\n\n\n\n\n\nvis\n\n\n2023\n\n\nnum\n\n\n\n\n\n\n\n\n\nFeb 26, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvariablity01\n\n\n\n\n\n\nvariablity\n\n\nbasics\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDef-Statistik01\n\n\n\n\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nKausale-Verben\n\n\n\n\n\n\ncausal\n\n\nresearch-question\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ntidy1\n\n\n\n\n\n\ntidy\n\n\ndatawrangling\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSkalenniveau1a\n\n\n\n\n\n\ndyn\n\n\nvariable-levels\n\n\nvariable-levels\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nZiele-Statistik\n\n\n\n\n\n\nbasics\n\n\n2023\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvariablity02\n\n\n\n\n\n\nvariablity\n\n\nbasics\n\n\nschoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nSkalenniveau1b\n\n\n\n\n\n\ndyn\n\n\nvariable-levels\n\n\nvariable-levels\n\n\nmchoice\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal02\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal03\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel01\n\n\n\n\n\n\nprobability\n\n\ndice\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-post2\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\npost\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-abhaengig_var2\n\n\n\n\n\n\ndyn\n\n\nprobability\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-post3\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\npost\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-stan-04\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-stan-03\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-stan-02\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npenguins-stan-05\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal01\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\npigs2\n\n\n\n\n\n\nbayes\n\n\n\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nrope2\n\n\n\n\n\n\nrope\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nPPV1a-mtcars\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-post\n\n\n\n\n\n\nbayes\n\n\npost\n\n\nestimation\n\n\nexam-22\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nkausal05\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal04\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal-bedrooms1\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal-einfach\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal21\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal26\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal10\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal27\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal20\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal06\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal08\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal09\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal07\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nrandomdag1\n\n\n\n\n\n\ncausal\n\n\ndag\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal_corona_glatze\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal25\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal22\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nMediterran-Alk\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal23\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal24\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkausal24\n\n\n\n\n\n\ndag\n\n\ncausal\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nttest-skalenniveau\n\n\n\n\n\n\nttest\n\n\nregression\n\n\nvariable-levels\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nRegression2\n\n\n\n\n\n\nregression\n\n\ndyn\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nRegr-Bayes-interpret\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nNullhyp-Beispiel\n\n\n\n\n\n\n\n\n\n\n\n\ninference\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nInteraktionseffekt1\n\n\n\n\n\n\ninteraction\n\n\nregression\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nRegr-Bayes-interpret03\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nrope-regression\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\nrope\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nRegr-Bayes-interpret02\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nposterior_interval\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\npost\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-rope1\n\n\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nstan_glm_prioriwerte\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nrope4\n\n\n\n\n\n\nrope\n\n\nbayes\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nrope3\n\n\n\n\n\n\nrope\n\n\nbayes\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ndiamonds-nullhyp-mws\n\n\n\n\n\n\nbayes\n\n\nregression\n\n\n\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nzwert-berechnen\n\n\n\n\n\n\nz-value\n\n\nR\n\n\nmath\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nanova-skalenniveau\n\n\n\n\n\n\nvariable-levels\n\n\nanova\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nGriech-Buchstaben-Inferenz\n\n\n\n\n\n\nqm2\n\n\ninference\n\n\nparameters\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nrope1\n\n\n\n\n\n\nrope\n\n\nbayes\n\n\n\n\n\n\n\n\n\nDec 13, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nstan_glm_parameterzahl\n\n\n\n\n\n\n\n\n\n\n\nDec 13, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nBayes-Ziel1\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nLikelihood2\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\nlikelihood\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nBayesmod-bestimmen01\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\nprior\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPost-befragen1\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\npost\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPostvert-Regr-01\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\npost\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nBed-Post-Wskt1\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\npost\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPriorwahl1\n\n\n\n\n\n\nfat-tails\n\n\ndistributions\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nBayesmod-bestimmen02\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\nprior\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nLikelihood-identifizieren\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\nlikelihood\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPriorwahl2\n\n\n\n\n\n\nregression\n\n\nbayes\n\n\ndistribution\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nfattails02\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nnormal-distribution\n\n\n\n\n\n\n\n\n\nNov 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nfattails01\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\nfat-tails\n\n\nnormal-distribution\n\n\n\n\n\n\n\n\n\nNov 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3e1-7\n\n\n\n\n\n\nbayes\n\n\nprobability\n\n\npost\n\n\n\n\n\n\n\n\n\nNov 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-05\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-02\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-03\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-04\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-17\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-10\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-11\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-16\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-18\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-01\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-06\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-08\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-09\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-07\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-13\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-14\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-15\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nVerteilungen-Quiz-12\n\n\n\n\n\n\ndistributions\n\n\nVerteilungen-Quiz\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter07\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\nprogramming\n\n\n\n\n\n\n\n\n\nNov 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nAnteil-Apple\n\n\n\n\n\n\nbayes\n\n\nbayes-box\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nIQ-Studentis\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nWarum-Bayes\n\n\n\n\n\n\nqm2\n\n\nbayes\n\n\nprobability\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nSim-Prior\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPriori-Streuung\n\n\n\n\n\n\nprobability\n\n\nsimulation\n\n\ndistribution\n\n\nbayes\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nReThink4e3\n\n\n\n\n\n\nbayes\n\n\nprobability\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nReThink4e2\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nfat-tails-Artikel\n\n\n\n\n\n\nprobability\n\n\ndistribution\n\n\nfat-tails\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nstan_glm01\n\n\n\n\n\n\nprobability\n\n\nbayes\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3m2\n\n\n\n\n\n\nbayes\n\n\npost\n\n\nprobability\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nKung-height\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nprobability\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nReThink3m3\n\n\n\n\n\n\nbayes\n\n\nppv\n\n\nprobability\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nZwielichter-Dozent-Bayes\n\n\n\n\n\n\nbayes\n\n\nprobability\n\n\nppv\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nsubjektiv-Bayes\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter01\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter06\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\nprogramming\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nLose-Nieten-Binomial-Grid\n\n\n\n\n\n\nprobability\n\n\nbinomial\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel04\n\n\n\n\n\n\nprobability\n\n\ndice\n\n\nsimulation\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel03\n\n\n\n\n\n\nprobability\n\n\ndice\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nwuerfel02\n\n\n\n\n\n\nprobability\n\n\ndice\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter03\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter04\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter05\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ntwitter02\n\n\n\n\n\n\ntextmining\n\n\ntwitter\n\n\n\n\n\n\n\n\n\nOct 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\neuro-bayes\n\n\n\n\n\n\nprobability\n\n\nbayes-grid\n\n\n\n\n\n\n\n\n\nOct 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nkekse01\n\n\n\n\n\n\nprobability\n\n\nbayes-grid\n\n\n\n\n\n\n\n\n\nOct 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map01\n\n\n\n\n\n\nR\n\n\nmap\n\n\ntidyverse\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map06\n\n\n\n\n\n\nprogramming\n\n\nloop\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-abhaengig\n\n\n\n\n\n\nprobability\n\n\ndependent\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nvoll-normal\n\n\n\n\n\n\nprobability\n\n\nmeta\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nGem-Wskt1\n\n\n\n\n\n\nprobability\n\n\n2022\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map05\n\n\n\n\n\n\nprogramming\n\n\nloop\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map02\n\n\n\n\n\n\nR\n\n\nmap\n\n\ntidyverse\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map03\n\n\n\n\n\n\nR\n\n\nmap\n\n\ntidyverse\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npurrr-map04\n\n\n\n\n\n\nR\n\n\nmap\n\n\ntidyverse\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nungewiss-arten-regression\n\n\n\n\n\n\nqm2\n\n\ninference\n\n\nlm\n\n\n\n\n\n\n\n\n\nOct 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nInferenz-fuer-alle\n\n\n\n\n\n\nqm2\n\n\ninference\n\n\nuncertainty\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-simple1\n\n\n\n\n\n\nregression\n\n\nen\n\n\nbayes\n\n\nfrequentist\n\n\nqm1\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nlog-y-regression3\n\n\n\n\n\n\nstats-nutshell\n\n\nqm2\n\n\nregression\n\n\nlog\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nlog-y-regression2\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nqm2\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nadjustieren1\n\n\n\n\n\n\nqm2\n\n\nlm\n\n\nbayes\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\ninterpret-koeff\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nbayes\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nvorhersageintervall1\n\n\n\n\n\n\nlm\n\n\ninference\n\n\nqm2\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nlm-Standardfehler\n\n\n\n\n\n\ninference\n\n\nlm\n\n\nqm2\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\npunktschaetzer-reicht-nicht\n\n\n\n\n\n\nregression\n\n\nen\n\n\nbayes\n\n\nfrequentist\n\n\nqm1\n\n\nstats-nutshell\n\n\nqm2\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-simple2\n\n\n\n\n\n\nregression\n\n\nen\n\n\nbayes\n\n\nfrequentist\n\n\nqm1\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nmtcars-simple3\n\n\n\n\n\n\nregression\n\n\nen\n\n\nbayes\n\n\nfrequentist\n\n\nqm1\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nttest-als-regression\n\n\n\n\n\n\nregression\n\n\nttest\n\n\nvariable-levels\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nlog-y-regression1\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nqm2\n\n\nstats-nutshell\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nadjustieren2\n\n\n\n\n\n\nregression\n\n\nlm\n\n\nqm2\n\n\nbayes\n\n\nadjust\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nStichprobenziehen1\n\n\n\n\n\n\nlm\n\n\ninference\n\n\nqm2\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nGriech-Buchstaben-Inferenz\n\n\n\n\n\n\nqm2\n\n\nqm2-thema01\n\n\n\n\n\n\n\n\n\nJul 10, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/germeval04/germeval04.html",
    "href": "posts/germeval04/germeval04.html",
    "title": "germeval04",
    "section": "",
    "text": "Erstellen Sie ein prädiktives Modell für Textdaten. Nutzen Sie Sentiments und TextFeatures im Rahmen von Feature-Engineering.\nNutzen Sie die GermEval-2018-Daten.\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\nDie Daten sind auch über das R-Paket PradaData zu beziehen.\n\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\ndata(\"germeval_test\", package = \"pradadata\")\n\nDie AV lautet c1. Die (einzige) UV lautet: text.\nHinweise:\n\nOrientieren Sie sich im Übrigen an den allgemeinen Hinweisen des Datenwerks.\nNutzen Sie Tidymodels.\nNutzen Sie das sentiws Lexikon."
  },
  {
    "objectID": "posts/germeval04/germeval04.html#finalisieren",
    "href": "posts/germeval04/germeval04.html#finalisieren",
    "title": "germeval04",
    "section": "Finalisieren",
    "text": "Finalisieren\n\nfit1_best &lt;- select_best(wf1_fit)\n\n\nwf1_final &lt;- finalize_workflow(wf1, fit1_best)\nwf1_final_fit &lt;- fit(wf1_final, data = d_train)\n\nVorhersagen:\n\npreds &lt;- predict(wf1_final_fit, germeval_test)"
  },
  {
    "objectID": "posts/germeval04/germeval04.html#test-set-güte",
    "href": "posts/germeval04/germeval04.html#test-set-güte",
    "title": "germeval04",
    "section": "Test-Set-Güte",
    "text": "Test-Set-Güte\nUnd die Vorhersagen zum Test-Set hinzufügen, damit man TRUTH und ESTIMATE vergleichen kann:\n\nd_test &lt;-\n  germeval_test |&gt; \n  bind_cols(preds) |&gt; \n  mutate(c1 = as.factor(c1))\n\n\nmy_metrics &lt;- metric_set(accuracy, f_meas)\nmy_metrics(d_test,\n           truth = c1,\n           estimate = .pred_class)\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.639\n2 f_meas   binary         0.286"
  },
  {
    "objectID": "posts/germeval04/germeval04.html#fazit",
    "href": "posts/germeval04/germeval04.html#fazit",
    "title": "germeval04",
    "section": "Fazit",
    "text": "Fazit\nEine Reihe der Text-Features passen nicht gut auf nicht-englische Texte.\n\nCategories:\n\n2023\ntextmining\ndatawrangling\ngermeval\nprediction\ntidymodels\nsentiment\nstring"
  },
  {
    "objectID": "posts/chatgpt-sentiment-loop/index.html",
    "href": "posts/chatgpt-sentiment-loop/index.html",
    "title": "chatgpt-sentiment-loop",
    "section": "",
    "text": "Aufgabe\nFragen Sie ChatGPT via API zum Sentiment der ersten zwei Texte aus dem Germeval-2018-Datensatz (Train).\nHinweise:\n\nBeachten Sie die Standardhinweise des Datenwerks.\nNutzen Sie Python, nicht R.\nDas Verwenden der OpenAI-API kostet Geld. 💸 Informieren Sie sich vorab. Um auf die API zugreifen zu können, müssen Sie sich ein Konto angelegt haben und über ein Guthaben verfügen.\n\n         \n\n\nLösung\n\nOpenAI hat eine neue API (Stand: 2023-11-23). Der Code der alten API bricht. 💔 \\(\\square\\)\n\nModule importieren:\n\nfrom openai import OpenAI\nimport pandas as pd\nimport time \n\nDaten importieren:\n\ncsv_file_path_train = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_train.csv'\n\ngermeval_train = pd.read_csv(csv_file_path_train)\n\nDie ersten paar Texte herausziehen:\n\nn_tweets = 2\ntweets_first_few = germeval_train[\"text\"].head(n_tweets).tolist()\ntweets_first_few\n\n['@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?', '@Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nicht ausschließt, kritisieren wir.']\n\n\nPrompt definieren:\n\nprompt_stem  = \"Als KI mit Exertise in natürlicher Sprache und Emotionserkennung ist es Ihre Aufgabe, das Sentiment des folgenden Textes zu erkennen. Bitte antworten Sie nur mit einem Wort, entweder 'positiv', 'neutral' oder 'negativ'. Dieses Wort soll die Insgesamt-Einschätzung des Sentiments des Textes zusammenfassen. Nach dem Doppelpunkt folt der Text, dessen Sentiment Sie einschätzen sollen: \\n\"\n\nMit “List Comprehension” können wir die Tweets jeweils mit dem Prompt verknüpfen:\n\nprompts = [prompt_stem + tweet for tweet in tweets_first_few]\nprompts[0]\n\n\"Als KI mit Exertise in natürlicher Sprache und Emotionserkennung ist es Ihre Aufgabe, das Sentiment des folgenden Textes zu erkennen. Bitte antworten Sie nur mit einem Wort, entweder 'positiv', 'neutral' oder 'negativ'. Dieses Wort soll die Insgesamt-Einschätzung des Sentiments des Textes zusammenfassen. Nach dem Doppelpunkt folt der Text, dessen Sentiment Sie einschätzen sollen: \\n@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\"\n\n\nCheck: Wie viele Elemente hat die Liste prompts?\n\nlen(prompts)\n\n2\n\n\nAnmelden bei OpenAI:\n\nclient = OpenAI()\n\n\n\n\n\n\n\nNote\n\n\n\nDieses Anmeldeverfahren setzt voraus, dass in .Renviron die Variable OPENAI_API_KEY hinterlegt ist. \\(\\square\\)\n\n\nAnfrage an die API, in eine Funktion gepackt:\n\ndef get_completion(prompt, client_instance, model=\"gpt-3.5-turbo\"):\n  messages = [{\"role\": \"user\", \"content\": prompt}]\n  response = client_instance.chat.completions.create(\n    model=model,\n    messages=messages,\n    max_tokens=50,\n    temperature=0,\n  )\n  return response.choices[0].message.content\n\nUnd jetzt als Schleife:\nErgebnisliste anlegen, am Anfang noch leer:\n\nresults = []\n\n\nstart_time = time.time()\n\nfor prompt in prompts:\n  result = get_completion(prompt, client) \n  results.append(result)\n\nend_time = time.time()\nend_time - start_time\n\n2.2064030170440674\n\n\nVoilà:\n\nprint(results)\n\n['positiv', 'neutral']"
  },
  {
    "objectID": "posts/chatgpt-sentiment-loop/chatgpt-sentiment-loop.html",
    "href": "posts/chatgpt-sentiment-loop/chatgpt-sentiment-loop.html",
    "title": "chatgpt-sentiment-loop",
    "section": "",
    "text": "Aufgabe\nFragen Sie ChatGPT via API zum Sentiment der ersten zwei Texte aus dem Germeval-2018-Datensatz (Train).\nHinweise:\n\nBeachten Sie die Standardhinweise des Datenwerks.\nNutzen Sie Python, nicht R.\nDas Verwenden der OpenAI-API kostet Geld. 💸 Informieren Sie sich vorab. Um auf die API zugreifen zu können, müssen Sie sich ein Konto angelegt haben und über ein Guthaben verfügen.\n\n         \n\n\nLösung\n\nOpenAI hat eine neue API (Stand: 2023-11-23), V1.3.5. Der Code der alten API bricht. 💔 \\(\\square\\)\n\nDie richtige venv nutzen:\n\nlibrary(reticulate)\n#virtualenv_create(\"chatgpt\")\nuse_virtualenv(\"chatgpt\")\n\nCheck zu Python:\n\nreticulate::py_config()\n\npython:         /Users/sebastiansaueruser/.virtualenvs/chatgpt/bin/python\nlibpython:      /Users/sebastiansaueruser/.pyenv/versions/3.11.1/lib/libpython3.11.dylib\npythonhome:     /Users/sebastiansaueruser/.virtualenvs/chatgpt:/Users/sebastiansaueruser/.virtualenvs/chatgpt\nversion:        3.11.1 (main, Oct  4 2023, 18:12:06) [Clang 15.0.0 (clang-1500.0.40.1)]\nnumpy:          /Users/sebastiansaueruser/.virtualenvs/chatgpt/lib/python3.11/site-packages/numpy\nnumpy_version:  1.26.2\n\nNOTE: Python version was forced by use_python() function\n\n\nGgf. noch Module installieren:\n\n#reticulate::py_install(\"pandas\")\n\nModule importieren:\n\nfrom openai import OpenAI\nimport pandas as pd\nimport time \n\nVersionen der importierten Module:\n\npd.__version__\n\n'2.1.3'\n\n\n\n```{zsh}\npip list | grep openai\n```\n\nopenai            1.3.5\n\n\nWir brauchen &gt;= 1.35.\nDaten importieren:\n\ncsv_file_path_train = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_train.csv'\n\ngermeval_train = pd.read_csv(csv_file_path_train)\n\nDie ersten paar Texte herausziehen:\n\nn_tweets = 2\ntweets_first_few = germeval_train[\"text\"].head(n_tweets).tolist()\ntweets_first_few\n\n['@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?', '@Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nicht ausschließt, kritisieren wir.']\n\n\nPrompt definieren:\n\nprompt_stem  = \"Als KI mit Exertise in natürlicher Sprache und Emotionserkennung ist es Ihre Aufgabe, das Sentiment des folgenden Textes zu erkennen. Bitte antworten Sie nur mit einem Wort, entweder 'positiv', 'neutral' oder 'negativ'. Dieses Wort soll die Insgesamt-Einschätzung des Sentiments des Textes zusammenfassen. Nach dem Doppelpunkt folt der Text, dessen Sentiment Sie einschätzen sollen: \\n\"\n\nMit “List Comprehension” können wir die Tweets jeweils mit dem Prompt verknüpfen:\n\nprompts = [prompt_stem + tweet for tweet in tweets_first_few]\nprompts[0]\n\n\"Als KI mit Exertise in natürlicher Sprache und Emotionserkennung ist es Ihre Aufgabe, das Sentiment des folgenden Textes zu erkennen. Bitte antworten Sie nur mit einem Wort, entweder 'positiv', 'neutral' oder 'negativ'. Dieses Wort soll die Insgesamt-Einschätzung des Sentiments des Textes zusammenfassen. Nach dem Doppelpunkt folt der Text, dessen Sentiment Sie einschätzen sollen: \\n@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?\"\n\n\nCheck: Wie viele Elemente hat die Liste prompts?\n\nlen(prompts)\n\n2\n\n\nAnmelden bei OpenAI:\n\nclient = OpenAI()\n\n\n\n\n\n\n\nNote\n\n\n\nDieses Anmeldeverfahren setzt voraus, dass in .Renviron die Variable OPENAI_API_KEY hinterlegt ist. \\(\\square\\)\n\n\nAnfrage an die API, in eine Funktion gepackt:\n\ndef get_completion(prompt, client_instance, model=\"gpt-3.5-turbo\"):\n  messages = [{\"role\": \"user\", \"content\": prompt}]\n  response = client_instance.chat.completions.create(\n    model=model,\n    messages=messages,\n    max_tokens=50,\n    temperature=0,\n  )\n  return response.choices[0].message.content\n\nUnd jetzt als Schleife:\nErgebnisliste anlegen, am Anfang noch leer:\n\nresults = []\n\n\nstart_time = time.time()\n\nfor prompt in prompts:\n  result = get_completion(prompt, client) \n  results.append(result)\n\nend_time = time.time()\nend_time - start_time\n\n15.599419116973877\n\n\nVoilà:\n\nprint(results)\n\n['positiv', 'neutral']"
  },
  {
    "objectID": "posts/scikit-llm-zeroshot/scikit-llm-zeroshot.html",
    "href": "posts/scikit-llm-zeroshot/scikit-llm-zeroshot.html",
    "title": "Scikit-Learn-LLM Zero Shot Learners",
    "section": "",
    "text": "Aufgabe\nFragen Sie ChatGPT via Scikit-Learn-LLM zum Sentiment der ersten 7 Texte (=Tweets) aus dem Germeval-2018-Datensatz (Test). Nutzen Sie die gleiche Zahl an Tweets aus dem Train-Datensatz zum Finetuning Ihres Modells. Nutzen Sie den Endpoint ZeroShotGPTClassifier.\nHinweise:\n\nBeachten Sie die Standardhinweise des Datenwerks.\nNutzen Sie Python, nicht R.\nDas Verwenden der OpenAI-API kostet Geld. 💸 Informieren Sie sich vorab. Um auf die API zugreifen zu können, müssen Sie sich ein Konto angelegt haben und über ein Guthaben verfügen. Werfen Sie hin und wieder einen Blick auf Ihr OpenAI-Guthaben-Konto.\n\n\n\n\n\n\n\nCaution\n\n\n\nAktuell sind scikit-llm und openai in den aktuellsten Versionen inkompatibel.\n\nERROR: pip’s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts. scikit-llm 0.4.2 requires openai&lt;1.0,&gt;=0.27.9, but you have openai 1.3.5 which is incompatible.\n\nDie einfachste Lösung ist, beide Pakete in verschiedenen venvs zu lagern. \\(\\square\\)\n\n\n\n\n\nsci-llm\n\n\n         \n\n\nLösung\nWir legen ggf. eine neue venv an:\n\nlibrary(reticulate)\n\n\n#virtualenv_create(\"scikit-llm\")\n\nUnd nutzen diese:\n\nuse_virtualenv(\"scikit-llm\")\n\nCheck:\n\npy_config()\n\npython:         /Users/sebastiansaueruser/.virtualenvs/scikit-llm/bin/python\nlibpython:      /Users/sebastiansaueruser/.pyenv/versions/3.11.1/lib/libpython3.11.dylib\npythonhome:     /Users/sebastiansaueruser/.virtualenvs/scikit-llm:/Users/sebastiansaueruser/.virtualenvs/scikit-llm\nversion:        3.11.1 (main, Oct  4 2023, 18:12:06) [Clang 15.0.0 (clang-1500.0.40.1)]\nnumpy:          /Users/sebastiansaueruser/.virtualenvs/scikit-llm/lib/python3.11/site-packages/numpy\nnumpy_version:  1.26.2\n\nNOTE: Python version was forced by use_python() function\n\n\n\npy_list_packages()\n\n                         package      version\n1                        aiohttp        3.9.0\n2                      aiosignal        1.3.1\n3                annotated-types        0.6.0\n4                          anyio        3.7.1\n5                          attrs       23.1.0\n6                     cachetools        5.3.2\n7                        certifi   2023.11.17\n8             charset-normalizer        3.3.2\n9                         distro        1.8.0\n10                    frozenlist        1.4.0\n11               google-api-core       2.14.0\n12                   google-auth       2.23.4\n13       google-cloud-aiplatform       1.36.4\n14         google-cloud-bigquery       3.13.0\n15             google-cloud-core        2.3.3\n16 google-cloud-resource-manager       1.10.4\n17          google-cloud-storage       2.13.0\n18                 google-crc32c        1.5.0\n19        google-resumable-media        2.6.0\n20      googleapis-common-protos       1.61.0\n21            grpc-google-iam-v1       0.12.7\n22                        grpcio       1.59.3\n23                 grpcio-status       1.59.3\n24                           h11       0.14.0\n25                      httpcore        1.0.2\n26                         httpx       0.25.1\n27                          idna          3.4\n28                        joblib        1.3.2\n29                     multidict        6.0.4\n30                         numpy       1.26.2\n31                        openai        1.3.5\n32                     packaging         23.2\n33                        pandas        2.1.3\n34                    proto-plus       1.22.3\n35                      protobuf       4.25.1\n36                        pyasn1        0.5.1\n37                pyasn1-modules        0.3.0\n38                      pydantic        2.5.2\n39                 pydantic_core       2.14.5\n40               python-dateutil        2.8.2\n41                          pytz 2023.3.post1\n42                      requests       2.31.0\n43                           rsa          4.9\n44                  scikit-learn        1.3.2\n45                    scikit-llm        0.4.2\n46                         scipy       1.11.4\n47                       shapely        2.0.2\n48                           six       1.16.0\n49                       sniffio        1.3.0\n50                 threadpoolctl        3.2.0\n51                          tqdm       4.66.1\n52             typing_extensions        4.8.0\n53                        tzdata       2023.3\n54                       urllib3        2.1.0\n55                          yarl        1.9.3\n                             requirement\n1                         aiohttp==3.9.0\n2                       aiosignal==1.3.1\n3                 annotated-types==0.6.0\n4                           anyio==3.7.1\n5                          attrs==23.1.0\n6                      cachetools==5.3.2\n7                    certifi==2023.11.17\n8              charset-normalizer==3.3.2\n9                          distro==1.8.0\n10                     frozenlist==1.4.0\n11               google-api-core==2.14.0\n12                   google-auth==2.23.4\n13       google-cloud-aiplatform==1.36.4\n14         google-cloud-bigquery==3.13.0\n15              google-cloud-core==2.3.3\n16 google-cloud-resource-manager==1.10.4\n17          google-cloud-storage==2.13.0\n18                  google-crc32c==1.5.0\n19         google-resumable-media==2.6.0\n20      googleapis-common-protos==1.61.0\n21            grpc-google-iam-v1==0.12.7\n22                        grpcio==1.59.3\n23                 grpcio-status==1.59.3\n24                           h11==0.14.0\n25                       httpcore==1.0.2\n26                         httpx==0.25.1\n27                             idna==3.4\n28                         joblib==1.3.2\n29                      multidict==6.0.4\n30                         numpy==1.26.2\n31                         openai==1.3.5\n32                       packaging==23.2\n33                         pandas==2.1.3\n34                    proto-plus==1.22.3\n35                      protobuf==4.25.1\n36                         pyasn1==0.5.1\n37                 pyasn1-modules==0.3.0\n38                       pydantic==2.5.2\n39                 pydantic_core==2.14.5\n40                python-dateutil==2.8.2\n41                    pytz==2023.3.post1\n42                      requests==2.31.0\n43                              rsa==4.9\n44                   scikit-learn==1.3.2\n45                     scikit-llm==0.4.2\n46                         scipy==1.11.4\n47                        shapely==2.0.2\n48                           six==1.16.0\n49                        sniffio==1.3.0\n50                  threadpoolctl==3.2.0\n51                          tqdm==4.66.1\n52              typing_extensions==4.8.0\n53                        tzdata==2023.3\n54                        urllib3==2.1.0\n55                           yarl==1.9.3\n\n\nGgf. müssen Sie zunächst die nötigen Module installieren, z.B. so: reticulate::py_install(\"scikit-llm\").\n\n#py_install(\"scikit-llm\")\n\nModule importieren:\n\nfrom skllm import ZeroShotGPTClassifier   \nfrom skllm.config import SKLLMConfig  # Anmeldung\nimport pandas as pd\nimport time \nimport os\n\nTrain-Daten importieren:\n\ncsv_file_path_train = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_train.csv'\ngermeval_train = pd.read_csv(csv_file_path_train)\n\nTest-Daten importieren:\n\ncsv_file_path_test = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_test.csv'\ngermeval_test = pd.read_csv(csv_file_path_test)\n\nDie ersten paar Texte aus dem Train-Datensatz herausziehen:\n\nn_tweets = 7\nX_train = germeval_train[\"text\"].head(n_tweets).tolist()\nX_train\n\n['@corinnamilborn Liebe Corinna, wir würden dich gerne als Moderatorin für uns gewinnen! Wärst du begeisterbar?', '@Martin28a Sie haben ja auch Recht. Unser Tweet war etwas missverständlich. Dass das BVerfG Sachleistungen nicht ausschließt, kritisieren wir.', '@ahrens_theo fröhlicher gruß aus der schönsten stadt der welt theo ⚓️', '@dushanwegner Amis hätten alles und jeden gewählt...nur Hillary wollten sie nicht und eine Fortsetzung von Obama-Politik erst recht nicht..!', '@spdde kein verläßlicher Verhandlungspartner. Nachkarteln nach den Sondierzngsgesprächen - schickt diese Stümper #SPD in die Versenkung.', '@Dirki_M Ja, aber wo widersprechen die Zahlen denn denen, die im von uns verlinkten Artikel stehen? In unserem Tweet geht es rein um subs. Geschützte. 2017 ist der gesamte Familiennachzug im Vergleich zu 2016 - die Zahlen, die Hr. Brandner bemüht - übrigens leicht rückläufig gewesen.', '@milenahanm 33 bis 45 habe ich noch gar nicht gelebt und es geht mir am Arsch vorbei was in dieser Zeit geschehen ist. Ich lebe im heute und jetzt und nicht in der Vergangenheit.']\n\n\nUnd hier sind die Labels dazu:\n\ny_train = germeval_train[\"c1\"].head(n_tweets).tolist()\ny_train\n\n['OTHER', 'OTHER', 'OTHER', 'OTHER', 'OFFENSE', 'OTHER', 'OFFENSE']\n\n\nUnd analog für den Test-Datensatz:\n\nX_test = germeval_test[\"text\"].head(n_tweets).tolist()\n\nAnmelden bei OpenAI:\n\nOPENAI_SECRET_KEY = os.environ.get(\"OPENAI_API_KEY\")\nOPENAI_ORG_ID = os.environ.get(\"OPENAI_ORG_ID\")\n\nSKLLMConfig.set_openai_key(OPENAI_SECRET_KEY)\nSKLLMConfig.set_openai_org(OPENAI_ORG_ID)\n\nModel definieren:\n\nclf = ZeroShotGPTClassifier(openai_model=\"gpt-3.5-turbo\")\n\nModel fitten:\n\nclf.fit(X = X_train, y = y_train)  \n\nZeroShotGPTClassifier()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.ZeroShotGPTClassifierZeroShotGPTClassifier()\n\n\nVorhersagen:\n\ny_pred = clf.predict(X = X_test)  \n\n  0%|          | 0/7 [00:00&lt;?, ?it/s]\n 14%|█▍        | 1/7 [00:38&lt;03:48, 38.03s/it]\n 29%|██▊       | 2/7 [00:48&lt;01:48, 21.62s/it]\n 43%|████▎     | 3/7 [01:16&lt;01:38, 24.65s/it]\n 57%|█████▋    | 4/7 [01:18&lt;00:47, 15.81s/it]\n 71%|███████▏  | 5/7 [01:28&lt;00:27, 13.69s/it]\n 86%|████████▌ | 6/7 [01:31&lt;00:09,  9.87s/it]\n100%|██████████| 7/7 [01:33&lt;00:00, 13.32s/it]\nVoilà:\n\nfor tweet, sentiment in zip(X_test, y_pred):\n    print(f\"Review: {tweet}\\nPredicted Sentiment: {sentiment}\\n\\n\")\n\nReview: Meine Mutter hat mir erzählt, dass mein Vater einen Wahlkreiskandidaten nicht gewählt hat, weil der gegen die Homo-Ehe ist ☺\nPredicted Sentiment: OFFENSE\n\n\nReview: @Tom174_ @davidbest95 Meine Reaktion; |LBR| Nicht jeder Moslem ist ein Terrorist. Aber jeder Moslem glaubt an Überlieferungen, die Gewalt und Terror begünstigen.\nPredicted Sentiment: OFFENSE\n\n\nReview: #Merkel rollt dem Emir von #Katar, der islamistischen Terror unterstützt, den roten Teppich aus.Wir brauchen einen sofortigen #Waffenstopp!\nPredicted Sentiment: OFFENSE\n\n\nReview: „Merle ist kein junges unschuldiges Mädchen“ Kch....... 😱 #tatort\nPredicted Sentiment: OFFENSE\n\n\nReview: @umweltundaktiv Asylantenflut bringt eben nur negatives für Deutschland. Drum Asylanenstop und Rückführung der Mehrzahl.\nPredicted Sentiment: OFFENSE\n\n\nReview: @_StultaMundi Die Bibel enthält ebenfalls Gesetze des Zivil- und Strafrechts.\nPredicted Sentiment: OTHER\n\n\nReview: @Thueringen_ @Miquwarchar @Pontifex_de Man munkelt, Franziskus ist großer \"Kiss\"- und \"Black Sabbath\"-Fan! #RockOn\nPredicted Sentiment: OTHER"
  }
]