{
  "hash": "86ded6e5084d1606ac01511b7b9d6142",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-vorlage\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- tidymodels\n- statlearning\n- template\n- string\ndate: '2023-05-17'\nslug: tidymodels-vorlage\ntitle: tidymodels-vorlage\n\n---\n\n\n\n\n# Aufgabe\n\n<!-- Schreiben Sie eine Vorlage für eine prädiktive Analyse mit Tidymodels! -->\n\nSchreiben Sie eine prototypische Analyse für ein Vorhersagemodell, das sich als Vorlage für Analysen dieser Art eignet!\n\nHinweise:\n\n- Berechnen Sie ein Modell\n- Tunen Sie mind. einen Parameter des Modells\n- Verwenden Sie Kreuzvalidierung\n- Verwenden Sie Standardwerte, wo nicht anders angegeben.\n- Fixieren Sie Zufallszahlen auf den Startwert 42.\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2023-05-08\n\n\n# Setup:\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Zeitmessung\nlibrary(baguette)  # Bagged-Trees\n\n\n# Data:\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd <- read_csv(d_path)\n\nset.seed(42)\nd_split <- initial_split(d)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n\n\n# model:\nmod_bag <-\n  bag_tree(mode = \"regression\",\n           cost_complexity = tune())\n\n\n# cv:\nset.seed(42)\nrsmpl <- vfold_cv(d_train)\n\n\n# recipe:\nrec1_plain <- recipe(body_mass_g ~  ., data = d_train)\n\n\n# workflow:\nwf1 <-\n  workflow() %>% \n  add_model(mod_bag) %>% \n  add_recipe(rec1_plain)\n\n\n# tuning:\ntic()\nwf1_fit <-\n  wf1 %>% \n  tune_grid(\n    resamples = rsmpl)\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n53.406 sec elapsed\n```\n\n\n:::\n\n```{.r .cell-code}\n# best candidate:\nshow_best(wf1_fit)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| cost_complexity|.metric |.estimator |     mean|  n|  std_err|.config          |\n|---------------:|:-------|:----------|--------:|--:|--------:|:----------------|\n|       0.0064392|rmse    |standard   | 302.1977| 10| 16.11540|pre0_mod09_post0 |\n|       0.0000010|rmse    |standard   | 303.9024| 10| 19.22696|pre0_mod05_post0 |\n|       0.0000000|rmse    |standard   | 305.0243| 10| 15.34343|pre0_mod03_post0 |\n|       0.0000429|rmse    |standard   | 305.2490| 10| 19.95539|pre0_mod07_post0 |\n|       0.0000043|rmse    |standard   | 308.3078| 10| 16.17880|pre0_mod06_post0 |\n\n</div>\n:::\n\n```{.r .cell-code}\n# finalize wf:\nwf1_final <-\n  wf1 %>% \n  finalize_workflow(select_best(wf1_fit))\n\n\nwf1_fit_final <-\n  wf1_final %>% \n  last_fit(d_split)\n\n\n# Modellgüte im Test-Set:\ncollect_metrics(wf1_fit_final)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|.metric |.estimator |   .estimate|.config         |\n|:-------|:----------|-----------:|:---------------|\n|rmse    |standard   | 329.9022032|pre0_mod0_post0 |\n|rsq     |standard   |   0.8458163|pre0_mod0_post0 |\n\n</div>\n:::\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- tidymodels\n- statlearning\n- template\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}