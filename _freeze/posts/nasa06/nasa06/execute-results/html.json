{
  "hash": "eedcf16f389b57eb9b78c1942d6b527a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: string\nexsolution: NA\nexname: nasa06\nexpoints: 1\ncategories:\n- data\n- eda\n- lagema√üe\n- string\ndate: '2023-05-09'\nslug: nasa06\ntitle: nasa06\n\n---\n\n\n\n\n\n\n\n# Aufgabe\n\n\nViele Quellen berichten Klimadaten unserer Erde, z.B. auch [National Aeronautics and Space Administration - Goddard Institute for Space Studies](https://data.giss.nasa.gov/gistemp/).\n\nVon dieser Quelle beziehen wir [diesen Datensatz](https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv).\n\n\nDie Datensatz sind auf der Webseite wie folgt beschrieben:\n\n\n*Tables of Global and Hemispheric Monthly Means and Zonal Annual Means*\n\nCombined Land-Surface Air and Sea-Surface Water Temperature Anomalies (Land-Ocean Temperature Index, L-OTI)\n\nThe following are plain-text files in tabular format of temperature anomalies, i.e. *deviations from the corresponding 1951-1980 means*.\n\n\n>   Global-mean monthly, seasonal, and annual means, 1880-present, updated through most recent month: TXT, CSV\n\nStarten Sie zun√§chst das R-Paket `tidyverse` falls noch nicht geschehen.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nImportieren Sie dann die Daten:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_path <- \"https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv\"\nd <- read_csv(data_path, skip = 1)\n```\n:::\n\n\nWir lassen die 1. Zeile des Datensatzes aus (Argument `skip`), da dort *Metadaten* stehen,\nalso keine Daten, sondern Informationen (Daten) zu den eigentlichen Daten.\n\n\n**Aufgaben**\n\n\n- Fassen Sie immer 10 Jahre (eine Dekade) an Jahren zusammen.\n- Pr√§sentieren Sie g√§ngige Statistiken pro Dekade f√ºr alle Monate.\n\n\n\nHinweise:\n\n- Sie m√ºssen zuerst die Dekade als neue Spalte berechnen.\n- Treffen Sie Annahmen, wo n√∂tig.\n- Beachten Sie die [Hinweise](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# L√∂sung\n\n\nTabelle in die Lang-Form bringen:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_long <- \n  d %>% \n  select(Year, Jan:Dec) %>% \n  mutate(across(Jan:Dec, as.numeric)) %>% \n  pivot_longer(cols = Jan:Dec, values_to = \"temp\", names_to = \"month\") \n```\n:::\n\n\nEin Blick in die Tabelle: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(d_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 √ó 3\n   Year month  temp\n  <dbl> <chr> <dbl>\n1  1880 Jan   -0.18\n2  1880 Feb   -0.24\n3  1880 Mar   -0.09\n4  1880 Apr   -0.16\n5  1880 May   -0.1 \n6  1880 Jun   -0.22\n```\n\n\n:::\n:::\n\n\n\nDekade berechnen:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_long2 <-\n  d_long %>% \n  mutate(decade = round(Year/10) * 10)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntail(d_long2)  # letzten paar Zeilen der Tabelle \"d_long2\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 √ó 4\n   Year month  temp decade\n  <dbl> <chr> <dbl>  <dbl>\n1  2023 Jul    1.18   2020\n2  2023 Aug    1.19   2020\n3  2023 Sep    1.47   2020\n4  2023 Oct   NA      2020\n5  2023 Nov   NA      2020\n6  2023 Dec   NA      2020\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_summarized <-\nd_long2 %>% \n  group_by(decade, month) %>% \n  summarise(temp_mean = mean(temp, na.rm = TRUE),\n            temp_sd = sd(temp, na.rm = TRUE))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 √ó 4\n# Groups:   decade [1]\n  decade month temp_mean temp_sd\n   <dbl> <chr>     <dbl>   <dbl>\n1   1880 Apr      -0.215   0.174\n2   1880 Aug      -0.162   0.117\n3   1880 Dec      -0.192   0.118\n4   1880 Feb      -0.173   0.188\n5   1880 Jan      -0.202   0.240\n6   1880 Jul      -0.182   0.133\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](chunk-img/unnamed-chunk-9-1.png){fig-align='center' fig-pos='H' width=100%}\n:::\n:::\n\n\nMonate zu einem Jahreswert zusammen:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd_summarized2 <- \n  d_summarized %>% \n  group_by(decade) %>% \n  summarise(temp_mean = mean(temp_mean),\n            temp_sd = sd(temp_sd))\n\nd_summarized2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 √ó 3\n   decade temp_mean temp_sd\n    <dbl>     <dbl>   <dbl>\n 1   1880  -0.197    0.0575\n 2   1890  -0.277    0.0537\n 3   1900  -0.232    0.0214\n 4   1910  -0.363    0.0452\n 5   1920  -0.275    0.0579\n 6   1930  -0.188    0.0478\n 7   1940   0.0354   0.0288\n 8   1950  -0.0659   0.0350\n 9   1960  -0.0340   0.0310\n10   1970  -0.00824  0.0402\n11   1980   0.145    0.0305\n12   1990   0.307    0.0236\n13   2000   0.507    0.0243\n14   2010   0.653    0.0403\n15   2020   0.939    0.0433\n```\n\n\n:::\n:::\n\n\n\nAlternativ k√∂nnen Sie zum Visualisieren der Daten z.B. das Paket `ggpubr` nutzen:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggpubr)\nggscatter(d_summarized2, x = \"decade\", y = \"temp_mean\", add = \"reg.line\")\n```\n\n::: {.cell-output-display}\n![](chunk-img/unnamed-chunk-11-1.png){fig-align='center' fig-pos='H' width=100%}\n:::\n:::\n\n\nOder auch mit den Facetten pro Monat:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggscatter(d_summarized, x = \"decade\", y = \"temp_mean\", add = \"reg.line\",\n          facet.by = \"month\")\n```\n\n::: {.cell-output-display}\n![](chunk-img/unnamed-chunk-12-1.png){fig-align='center' fig-pos='H' width=100%}\n:::\n:::\n\n\n\nDie weltweilte Temperatur steigt.\nBleibt u.a. die Frage, ob eine lineare Funktion angemessen ist,\noder ob die Steigung nicht vielleicht prozentual steigt (das w√§re eine exponenzielle Steigerung)?\n\n\n\nFalls Sie Teile der R-Syntax nicht kennen: Machen Sie sich nichts daraus.  üòÑ\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- data\n- eda\n- lagema√üe\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}