{
  "hash": "e28a5c2a8c554ab88ff2a662f60bcf93",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: durch3-durch5\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- R\n- challenge\n- string\ndate: '2023-06-27'\nslug: durch3-durch5\ntitle: durch3-durch5\n\n---\n\n\n\n\n\n# Aufgabe\n\nGegeben sei ein Vektor `x`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 1:50\n```\n:::\n\n\nSchreiben Sie R-Code, der \"durch3\" ausgibt, wenn `x` durch 3 teilbar ist und (auch) \"durch5\" ausgibt, wenn `x` durch5 teilbar ist.\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  tibble(\n    x = 1:50,\n    txt = \"\"\n  ) %>% \n  mutate(txt = case_when(\n    (x %% 3) == 0 ~ str_c(txt, \"_durch_3\"),\n    TRUE ~ txt)\n  ) %>% \n  mutate(txt = case_when(\n    (x %% 5) == 0 ~ str_c(txt, \"_durch_5\"),\n    TRUE ~ txt\n  ))\n```\n:::\n\n\nSo sieht die Tabelle aus:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n       x txt       \n   <int> <chr>     \n 1     1 \"\"        \n 2     2 \"\"        \n 3     3 \"_durch_3\"\n 4     4 \"\"        \n 5     5 \"_durch_5\"\n 6     6 \"_durch_3\"\n 7     7 \"\"        \n 8     8 \"\"        \n 9     9 \"_durch_3\"\n10    10 \"_durch_5\"\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\nSo kann man sich dann den Text ausgeben lassen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd$txt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"\"                 \"\"                 \"_durch_3\"         \"\"                \n [5] \"_durch_5\"         \"_durch_3\"         \"\"                 \"\"                \n [9] \"_durch_3\"         \"_durch_5\"         \"\"                 \"_durch_3\"        \n[13] \"\"                 \"\"                 \"_durch_3_durch_5\" \"\"                \n[17] \"\"                 \"_durch_3\"         \"\"                 \"_durch_5\"        \n[21] \"_durch_3\"         \"\"                 \"\"                 \"_durch_3\"        \n[25] \"_durch_5\"         \"\"                 \"_durch_3\"         \"\"                \n[29] \"\"                 \"_durch_3_durch_5\" \"\"                 \"\"                \n[33] \"_durch_3\"         \"\"                 \"_durch_5\"         \"_durch_3\"        \n[37] \"\"                 \"\"                 \"_durch_3\"         \"_durch_5\"        \n[41] \"\"                 \"_durch_3\"         \"\"                 \"\"                \n[45] \"_durch_3_durch_5\" \"\"                 \"\"                 \"_durch_3\"        \n[49] \"\"                 \"_durch_5\"        \n```\n\n\n:::\n:::\n\n\nOder so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd$txt %>% discard(\\(x) x == \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"_durch_3\"         \"_durch_5\"         \"_durch_3\"         \"_durch_3\"        \n [5] \"_durch_5\"         \"_durch_3\"         \"_durch_3_durch_5\" \"_durch_3\"        \n [9] \"_durch_5\"         \"_durch_3\"         \"_durch_3\"         \"_durch_5\"        \n[13] \"_durch_3\"         \"_durch_3_durch_5\" \"_durch_3\"         \"_durch_5\"        \n[17] \"_durch_3\"         \"_durch_3\"         \"_durch_5\"         \"_durch_3\"        \n[21] \"_durch_3_durch_5\" \"_durch_3\"         \"_durch_5\"        \n```\n\n\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- r\n- challenge\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}