{
  "hash": "06f87090a3d61161def126343902295c",
  "result": {
    "markdown": "---\nexname: lm-mario1\nextype: num\nexsolution: 54.787\nexshuffle: no\nexpoints: 1\ncategories:\n- R\n- lm\n- predict\n- num\ndate: '2023-05-17'\nslug: lm-mario1\ntitle: lm-mario1\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\nSagen Sie den Verkaufspreis vorher für ein Spiel mit 2 Lenkrädern!\n\nHinweise:\n\n- Entfernen Sie Spiele mit einem Verkaufspreis von *über 100 Euro* aus dem Datensatz.\n\n\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n## Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmariokart <- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/openintro/mariokart.csv\")\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(easystats)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n# Attaching packages: easystats 0.6.0\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.7.1    ✔ effectsize  0.8.3 \n✔ insight     0.19.1   ✔ modelbased  0.8.6 \n✔ performance 0.10.3   ✔ parameters  0.21.0\n✔ report      0.5.7    ✔ see         0.7.5 \n```\n:::\n:::\n\n\n\n## Bild der Daten\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpubr)  # einmalig vorab installieren, nicht vergessen\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggpubr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:datawizard':\n\n    mean_sd, median_mad\n```\n:::\n\n```{.r .cell-code}\nggscatter(mariokart, x = \"wheels\", y = \"total_pr\")\n```\n\n::: {.cell-output-display}\n![](lm-mario1_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nOder mit `DataExplorer` visualisieren:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DataExplorer)\n\nplot_scatterplot(mariokart, by = \"total_pr\")  # \"by\" ist Y-Achse\n```\n\n::: {.cell-output-display}\n![](lm-mario1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](lm-mario1_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n\n## Extremwerte entfernen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmariokart2 <- \n  mariokart %>% \n  filter(total_pr < 100)  # alle Spiele teuerer als 100€ entfernen\n\nggscatter(mariokart2, x = \"wheels\", y = \"total_pr\")\n```\n\n::: {.cell-output-display}\n![](lm-mario1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Regressionsgerade eintragen in das Diagramm\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(mariokart2, \n          x = \"wheels\", \n          y = \"total_pr\",\n          add = \"reg.line\")  # Dieser Schalter malt die Regr.gerade in das Diagramm\n```\n\n::: {.cell-output-display}\n![](lm-mario1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Regressionsgerade berechnen\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mariokart <- lm(total_pr ~ wheels, data = mariokart2)\nlm_mariokart\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = total_pr ~ wheels, data = mariokart2)\n\nCoefficients:\n(Intercept)       wheels  \n     37.502        8.643  \n```\n:::\n:::\n\n\n\n\"lm\" wie *l*lineares *M*odell, also eine Gerade.\n\n\n## Vorhersagen\n\nVorhersagen funktionieren mit dem Befehl `predict`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nneues_spiel <-\n  data.frame(\n    wheels = 2\n  )\n\nneues_spiel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  wheels\n1      2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(lm_mariokart, neues_spiel)  # predicte mir den Verkaufspreis\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       1 \n54.78743 \n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- R\n- lm\n- predict\n- num\n\n",
    "supporting": [
      "lm-mario1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}