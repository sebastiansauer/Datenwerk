{
  "hash": "73a2d640bd4c4dcb2adf9237596eb70f",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: vis-mtcars\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- vis\n- yacsda\n- ggquick\n- mtcars\n- string\ndate: '2023-09-12'\nslug: vis-mtcars\ntitle: vis-mtcars\n\n---\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\nIn dieser Fallstudie (YACSDA: Yet another Case Study on Data Analysis) untersuchen wir den Datensatz *mtcars*.\n\nSie können den Datensatz so beziehen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"mtcars\")\nd <- mtcars \n```\n:::\n\n\n\n\n\n\nEin Codebook finden Sie [hier](https://vincentarelbundock.github.io/Rdatasets/doc/palmerpenguins/penguins.html).\n\n\nDie Forschungsfrage lautet:\n\nWas ist der Einfluss der Schaltung und der PS-Zahl auf den Spritverbrauch?\n\n- Abhängige Variable (metrisch), y: Spritverbrauch (mpg)\n- Unabhängige Variable 1 (nominal), x1: Schaltung (am)\n- Unabhängige Variable 2 (metrisch), x2: PS-Zahl (hp)\n\n\nVisualisieren Sie dazu folgende Aspekte der Forschungsfrage!\n\n# Aufgaben\n\n1. Visualisieren Sie die Verteilung von y auf zwei verschiedene Arten.\n2. Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n2. Visualisieren Sie die Verteilung von x1 und x2.\n3. Visualisieren Sie die Verteilung von y bedingt auf x1.\n4. Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n5. Visualisieren Sie den Zusammenhang von y und x2.\n6. Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird.\n6. Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu.\n7. Fügen Sie dem Diagramm zum Zusammenhang von y und x2 eine Regressionsgerade hinzu.\n8. Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade.\n9. Gruppieren Sie das letzte Diagramm nach x1.\n10. Dichotomisieren Sie y und zählen Sie die Häufigkeiten. *Achtung*: Dichotomisieren wird von einigen Statistikern mit Exkommunikation bestraft. Proceed at your own risk.\n11. Gruppieren Sie das letzte Diagramm nach den Stufen von x1.\n12. Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden.\n\n\n\n\n\n\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n# Pakete starten\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(easystats)\nlibrary(ggpubr)\nlibrary(ggstatsplot)\n```\n:::\n\n\n\n\n# Los geht's \n\n\n\n## Umbenennen\n\nZur einfacheren Verarbeitung nenne ich die Variablen um:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d |> \n  rename(y = mpg, x1 = am, x2 = hp)\n```\n:::\n\n\n\n\n\n## Visualisieren Sie die Verteilung von `y` auf zwei verschiedene Arten.\n\nDas R-Paket `ggpubr` erstellt schöne Diagramme (basierend auf `ggplot`) auf einfache Art.\nNehmen wir ein Dichtediagramm; die Variable `y` soll auf der X-Achse stehen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdensity(d, x = \"y\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-4-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nBeachten Sie, dass die Variable in Anführungsstriche gesetzt werden muss: `x = \"y\"`.\n\nOder ein Histogramm:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-5-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n\nUm Diagramme mit Statistiken anzureichen, bietet sich das Paket `ggstatsplot` an:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(d, x = y)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-6-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nBeachten Sie, dass die Variable *nicht* in Anführungsstriche gesetzt werden darf: `x = y`.\n\n\n## Visualisieren Sie die Verteilung von `x1` und `x2`.\n\n### `x1`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_counted <- \n  d |> \n  count(x1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(data = d_counted, y = \"n\", x = \"x1\", label = TRUE)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-8-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n### `x2`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(d, x = x2)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-9-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Visualisieren Sie die Verteilung von `y` bedingt auf `x1`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\", fill = \"x1\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-10-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\nOder so:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\", facet.by = \"x1\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-11-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_gghistostats(d, x = y, grouping.var = x1)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-12-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Visualisieren Sie den Zusammenhang von `y` und `x2`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d, x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-13-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird\n\nEs gibt mehrere Wege, das Diagramm übersichtlicher zu machen.\nLogarithmieren ist ein Weg.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  mutate(x2 = log(x2)) |> \n  ggscatter(x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-14-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\nSynonym könnten wir schreiben:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_logged <- \n  d |> \n  mutate(x2 = log(x2))\n  \n\nggscatter(d_logged, x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-15-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(d_logged, x = x2, y = y)\n```\n:::\n\n\n\n\n\n## Fügen Sie dem Diagramm zum Zusammenhang von `y` und `x2` eine Regressionsgerade hinzu\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"reg.line\", \n             add.params = list(color = \"blue\"))\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-16-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"loess\", \n             add.params = list(color = \"blue\"))\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-17-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Gruppieren Sie das letzte Diagramm nach `x1`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"loess\", \n             add.params = list(color = \"blue\"),\n          facet.by = \"x1\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-18-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n##  Dichotomisieren Sie `y` und zählen Sie die Häufigkeiten\n\n\nNehmen wir einen Mediansplit, um zu dichotomisieren.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d |> \n  mutate(y_dicho = ifelse(y > median(y), \"high\", \"low\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  count(y_dicho) |> \n  ggbarplot(x = \"y_dicho\", y = \"n\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-20-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\nGleich viele! Das sollte nicht verwundern.\n\n\n## Gruppieren Sie das letzte Diagramm nach den Stufen von `x1`\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count <- \nd |> \n  count(y_dicho, x1) \n\nd_count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  y_dicho x1  n\n1    high  0  4\n2    high  1 11\n3     low  0 15\n4     low  1  2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(d_count, x = \"y_dicho\", y = \"n\", facet.by = \"x1\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-22-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n## Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count <-\n  d_count |> \n  mutate(prop = n / sum(n)) |> \n  mutate(prop = round(prop, 2))\n\nd_count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  y_dicho x1  n prop\n1    high  0  4 0.12\n2    high  1 11 0.34\n3     low  0 15 0.47\n4     low  1  2 0.06\n```\n\n\n:::\n:::\n\n\n\nCheck:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count |> \n  summarise(sum(prop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sum(prop)\n1      0.99\n```\n\n\n:::\n:::\n\n\n\nGut! Die Anteile summieren sich zu ca. 1 (100 Prozent).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(d_count, x = \"y_dicho\", y = \"prop\", facet.by = \"x1\", label = TRUE)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-25-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\nMan beachten, dass sich die Anteile auf das \"Gesamt-N\" beziehen.\n\n\n\n\n\n---\n\nCategories: \n\n- vis\n- yacsda\n- ggquick\n- mtcars\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}