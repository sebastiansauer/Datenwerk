{
  "hash": "b9a9f8a61670ba26f144a1674568ee1a",
  "result": {
    "markdown": "---\nextype: cloze\nexsolution: r sol[1]|r sol[2]|r sol[3]\nexclozetype: num|num|num\nexname: Distances\nextol: 0.01\ndate: '2022-12-15'\nslug: mtcars-rope1\ntitle: mtcars-rope1\n\n---\n\n\n\n\n\n\n\n\n# Exercise\n\n\n\nIm Datensatz `mtcars`: Ist der (mittlere) Unterschied im Spritverbrauch zwischen den beiden Stufen von `vs` vernachlässigbar klein?\n\nDefinieren Sie “vernachlässigbar klein” mit “höchstens eine Meile”.\n\na) Geben Sie die Breite des 95% PI an (im Bezug zur gesuchten Größe).\nb) Geben Sie das 95% HDI an (im Bezug zur gesuchten Größe).\nc) Im Hinblick auf die Rope-Methode: Ist der Unterschied vernachlässigbar klein? (ja/nein/unentschieden)\n\n\nHinweise:\n\n- Verwenden Sie ansonsten die Standardwerte (Defaults) der typischen (im Unterricht verwendeten) R-Funktionen.\n- Runden Sie auf 2 Dezimalstellen.\n- Verwenden Sie Methoden der Bayes-Statistik.\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\nSetup:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mtcars)\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(bayesplot)  # Histogramm-Plots für Post-Vert.\nlibrary(bayestestR)  # rope\n```\n:::\n\n\n\n\n\nModell berechnen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- stan_glm(mpg ~ vs, data = mtcars,\n               refresh = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)          vs \n  16.620952    7.921868 \n```\n:::\n:::\n\n\n\nzu a) \n\n95%-PI:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npost_m1_vs <- posterior_interval(m1, prob = .95,\n                   pars = \"vs\")\npost_m1_vs[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.623953\n```\n:::\n\n```{.r .cell-code}\npost_m1_vs[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11.14271\n```\n:::\n:::\n\n\n\nBreite des Intervalls:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreite <- post_m1_vs[2] - post_m1_vs[1]\nbreite <- breite %>% round(2)\nbreite\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6.52\n```\n:::\n:::\n\n\nDie Antwort für a) lautet also 6.52.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_areas(m1)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-6-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nzu b)\n\nWir nutzen den Befehl `hdi()` aus `{bayestestR}`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdi(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHighest Density Interval\n\nParameter   |        95% HDI\n----------------------------\n(Intercept) | [14.35, 18.67]\nvs          | [ 4.68, 11.19]\n```\n:::\n:::\n\n\nMit dem Schalter `ci = .89` bekäme man bspw. ein 89%-Intervall (s. Hilfe für den Befehl).\n\n\"hdi\" und \"hdpi\" und \"hpdi\" sind synonym.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mtcars) +\n  aes(x = vs, y = mpg) +\n  geom_point()+\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-8-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nzu c)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrope(m1,range = c(-1,1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Proportion of samples inside the ROPE [-1.00, 1.00]:\n\nParameter   | inside ROPE\n-------------------------\n(Intercept) |      0.00 %\nvs          |      0.00 %\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(rope(m1, range = c(-1,1)))\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-10-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\nWir verwerfen also die H0-Rope.\n\n\n  \n  \n\n  \n\n\n\n\n\n\n\n---\n\nCategories: \n\n- bayes\n- lm\n\n\n",
    "supporting": [
      "mtcars-rope1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}