{
  "hash": "a14637daf9986670879bb34ed8e2cb63",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: modellgute-testset\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- regression\n- modelling\n- performance\n- rmse\n- string\ndate: '2023-11-08'\nslug: modellguete-testset\ntitle: modellguete-testset\n\n---\n\n\n\n\n\n# Aufgabe\n\nBerechnen Sie die Modellgüte (RMSE) im Test-Sample.\n\nGehen Sie von folgenden Annahmen aus.\n\n- [Dieses Test-Sample](https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_control.csv)\n- AV: `count`\n- [Dieses Train-Sample](https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_train.csv)\n- Gehen Sie als Vorhersage vom Mittelwert der AV im *Train-Sample* aus (für alle Beobachtungen im Test-Sample).\n\n\n*Hinweise*:\n\n- [Hier](https://github.com/sebastiansauer/yacsda-bikerental/blob/main/data/bike-share-data-dict.md) finden Sie ein Data-Dictionary.\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train <- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_train.csv\")\nd_test <- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_control.csv\")\n```\n:::\n\n\n\n\n## Mittelwert der AV im Train-Sample berechnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_count_train_sample <- \n  d_train |> \n  summarise(count_avg = mean(count))\n\nmean_count_train_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  count_avg\n1  703.7913\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test <-\n  d_test |> \n  mutate(pred = 704)\n```\n:::\n\n\n\nAnstelle von `704` könnten Sie auch Ihre eigenen Vorhersagen Ihrer Modelle einsetzen, etwa:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test <-\n  d_test |> \n  mutate(pred = meine_vorhersagen)\n```\n:::\n\n\n\n## Modellgüte im Test-Sample berechnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test |> \n  rmse(truth = count,\n       estimate = pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        646.\n```\n\n\n:::\n:::\n\n\n\n\nFür R-Quadrat geht das analog:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test |> \n  rsq(truth = count,\n       estimate = pred)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A correlation computation is required, but `estimate` is constant and\nhas 0 standard deviation, resulting in a divide by 0 error. `NA` will be\nreturned.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard          NA\n```\n\n\n:::\n:::\n\n\nLeider ist das R-Quadrat in diesem Fall (per Definition) Null:\nDer Mittelwert als Vorhersagewert ist was \"R-Quadrat gleich Null\" meint.\n\n(Darüber hinaus wird das R-Quadrat hier auf Basis der Korrelation berechnet, und wir haben einen konstanten Wert bei `pred`).\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- regression\n- modelling\n- performance\n- rmse\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}