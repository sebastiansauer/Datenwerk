{
  "hash": "1c42550ee0e85b3f55c27692ab95a6ed",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: modellgute-testset\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- regression\n- performance\n- rmse\n- string\ndate: '2023-11-08'\nslug: modellguete-testset\ntitle: modellguete-testset\n\n---\n\n\n\n\n# Aufgabe\n\nBerechnen Sie die Modellgüte (RMSE) im Test-Sample.\n\nGehen Sie von folgenden Annahmen aus.\n\n- [Dieses Test-Sample](https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_control.csv)\n- AV: `count`\n- [Dieses Train-Sample](https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_train.csv)\n- Gehen Sie als Vorhersage vom Mittelwert der AV im *Train-Sample* aus (für alle Beobachtungen im Test-Sample).\n\n\n*Hinweise*:\n\n- [Hier](https://github.com/sebastiansauer/yacsda-bikerental/blob/main/data/bike-share-data-dict.md) finden Sie ein Data-Dictionary.\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train <- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_train.csv\")\nd_test <- read.csv(\"https://raw.githubusercontent.com/sebastiansauer/yacsda-bikerental/main/data/bikeshare_control.csv\")\n```\n:::\n\n\n\n\n## Mittelwert der AV im Train-Sample berechnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_count_train_sample <- \n  d_train |> \n  summarise(count_avg = mean(count))\n\nmean_count_train_sample\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| count_avg|\n|---------:|\n|  703.7913|\n\n</div>\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test <-\n  d_test |> \n  mutate(pred = 704)\n```\n:::\n\n\n\nAnstelle von `704` könnten Sie auch Ihre eigenen Vorhersagen Ihrer Modelle einsetzen, etwa:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test <-\n  d_test |> \n  mutate(pred = meine_vorhersagen)\n```\n:::\n\n\n\n## Modellgüte im Test-Sample berechnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test |> \n  rmse(truth = count,\n       estimate = pred)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|.metric |.estimator | .estimate|\n|:-------|:----------|---------:|\n|rmse    |standard   |  646.4874|\n\n</div>\n:::\n:::\n\n\n\n\nFür R-Quadrat geht das analog:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test |> \n  rsq(truth = count,\n       estimate = pred)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|.metric |.estimator | .estimate|\n|:-------|:----------|---------:|\n|rsq     |standard   |        NA|\n\n</div>\n:::\n:::\n\n\nLeider ist das R-Quadrat in diesem Fall (per Definition) Null:\nDer Mittelwert als Vorhersagewert ist was \"R-Quadrat gleich Null\" meint.\n\n(Darüber hinaus wird das R-Quadrat hier auf Basis der Korrelation berechnet, und wir haben einen konstanten Wert bei `pred`).\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- regression\n- modelling\n- performance\n- rmse\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}