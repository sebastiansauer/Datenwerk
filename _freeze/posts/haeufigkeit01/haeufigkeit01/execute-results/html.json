{
  "hash": "66c8eb9ad6f2b47e7adf1cff2680ac29",
  "result": {
    "markdown": "---\nextype: string\nexsolution: NA\nexname: haeufigkeit01\nexpoints: 1\ncategories:\n- datawrangling\n- eda\n- count\n- string\ndate: '2023-03-27'\nslug: haeufigkeit01\ntitle: haeufigkeit01\n\n---\n\n\n\n\n\n\n# Aufgabe\n\nWerten Sie die Häufigkeiten (der Stufen) folgender Variablen  aus wie unten beschrieben.\n\nDatensatz: `mtcars`.\n\n\nVariablen:\n\n- `am`\n- `cyl`\n- `vs` \n\n\n1. Erstellen Sie für jede der genannten Variablen eine univariate Häufigkeitsanalyse (also nur eine Variable).\n2. Erstellen Sie dann für die ersten beiden genannten Variablen eine gemeinsame Häufigkeitsanalyse (bivariat).\n3. Erstellen Sie dann für alle genannten Variablen eine gemeinsame Häufigkeitsanalyse.\n4. Wie viele Gruppen (also Häufigkeitswerte) ergeben sich (theoretisch) in der letzten Auswertung?\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\ndata(\"mtcars\")\n```\n:::\n\n\n\n1. univariate Häufigkeitsanalyse\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmtcars %>% \n  group_by(am) %>% \n  summarise(zeilen_n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n     am zeilen_n\n  <dbl>    <int>\n1     0       19\n2     1       13\n```\n:::\n:::\n\n\nDer Befehle `n()` gibt die Anzahl der Zeilen (Reihen) zurück.\nDa in einem Dataframe alle Zeilen gleich lang sind,\nbrauchen wir keine Spalte anzugeben.\n\n\nAlternativ könnte man auch schreiben:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmtcars %>% \n  count(am)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  am  n\n1  0 19\n2  1 13\n```\n:::\n:::\n\n\nDas ist haargenau der gleiche Effekt wie die vorherige Syntax.\n\nÜblich ist auch, eine Kontingenztabelle so darzustellen:\n\n\n\n\n\n\n2. gemeinsame Häufigkeitsanalyse (bivariat)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmtcars %>% \n  count(am, cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  am cyl  n\n1  0   4  3\n2  0   6  4\n3  0   8 12\n4  1   4  8\n5  1   6  3\n6  1   8  2\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(mtcars$am, mtcars$cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   \n     4  6  8\n  0  3  4 12\n  1  8  3  2\n```\n:::\n:::\n\n\n\nWir sehen, dass wir $2\\cdot3=6$ Gruppen haben,\nin denen sich die $n=32$ Beobachtungen aufteilen.\n\n3. Häufigkeitsanalyse mit 3 Variablen\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmtcars %>% \n  count(am, cyl, vs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  am cyl vs  n\n1  0   4  1  3\n2  0   6  1  4\n3  0   8  0 12\n4  1   4  0  1\n5  1   4  1  7\n6  1   6  0  3\n7  1   8  0  2\n```\n:::\n:::\n\n\n\n\n\n\nDas sind drei Variablen mit $2 \\cdot 3 \\cdot 2 = 12$ Gruppen.\n\nDa einige der 12 Gruppen in den Daten nicht vorkommen,\nsind sie in der Auszählung der Häufigkeiten nicht aufgenommen;\nin den Daten gibt es nur 7 der 12 Gruppen.\n\n\n\n\n---\n\nCategories: \n\n- datawrangling\n- eda\n- count\n- string\n\n",
    "supporting": [
      "haeufigkeit01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}