{
  "hash": "7e533a6147efb111e88005572f243e8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: cloze\nexclozetype: num|string\nexsolution: 3932.5|r regression_formel\nexname: adjustieren2\nexpoints: 0.5\ncategories:\n- regression\n- lm\n- qm2\n- bayes\n- adjust\n- qm2-pruefung2023\ndate: '2022-09-04'\nslug: adjustieren2\ntitle: adjustieren2\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\n\nBetrachten Sie folgendes Modell, das den Zusammenhang des Preises (`price`) \nund dem Gewicht (`carat`) von Diamanten untersucht (Datensatz `diamonds`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndiamonds <- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n```\n:::\n\n\n\n\n\nAber zuerst zentrieren wir den metrischen Prädiktor `carat`, \num den Achsenabschnitt besser interpretieren zu können. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds <-\n  diamonds %>% \n  mutate(carat_z = carat - mean(carat, na.rm = TRUE))\n```\n:::\n\n\n\nDann berechnen wir ein (bayesianisches) Regressionsmodell, \nwobei wir auf die Standardwerte der Prior zurückgreifen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rstanarm)\nlibrary(easystats)\nlm1 <- stan_glm(price ~ carat_z, data = diamonds,\n                chains = 1,  # nur ein Mal Stichproben ziehen, spart Zeit (auf Kosten der Genauigkeit)\n                refresh = 0)\nparameters(lm1)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter   |   Median|   CI|   CI_low|  CI_high| pd|     Rhat|       ESS|Prior_Distribution | Prior_Location| Prior_Scale|\n|:-----------|--------:|----:|--------:|--------:|--:|--------:|---------:|:------------------|--------------:|-----------:|\n|(Intercept) | 3932.771| 0.95| 3918.390| 3946.382|  1| 1.004343|  298.9047|normal             |         3932.8|    9973.599|\n|carat_z     | 7756.901| 0.95| 7730.718| 7784.369|  1| 1.001497| 1004.2651|normal             |            0.0|   21040.850|\n\n</div>\n:::\n:::\n\n\n\n\n\n\nZur Verdeutlichung ein Diagramm zum Modell:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% \n  ggplot() +\n  aes(x = carat_z, y = price) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-4-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nAnswerlist\n----------\na) Was kostet in Diamant mittlerer Größe laut Modell `lm1`? Runden Sie auf eine Dezimale. Geben Sie nur eine Zahl ein.\nb) Geben Sie eine Regressionsformel an, die `lm1` ergänzt, so dass die Schliffart (`cut`) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben. Geben Sie nur die Regressionsformel an. Lassen Sie zwischen Termen jeweils ein Leerzeichen Abstand.\n\n\n\n\n\n*Hinweis*: Es gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% \n  distinct(cut)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|cut       |\n|:---------|\n|Ideal     |\n|Premium   |\n|Good      |\n|Very Good |\n|Fair      |\n\n</div>\n:::\n:::\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\na) Unser Modell `lm1` schätzt den Preis eines Diamanten mittlerer Größe auf etwa `3932.5` (was immer auch die Einheiten sind, Dollar vermutlich).\n\nb) `price ~ carat_z + cut` \n\nDieses zweite Modell könnten wir so berechnen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm2 <- stan_glm(price ~ carat_z + cut, data = diamonds,\n                chains = 1,\n                refresh = 0)\nparameters(lm2)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter    |   Median|   CI|   CI_low|  CI_high| pd|      Rhat|       ESS|Prior_Distribution | Prior_Location| Prior_Scale|\n|:------------|--------:|----:|--------:|--------:|--:|---------:|---------:|:------------------|--------------:|-----------:|\n|(Intercept)  | 2404.880| 0.95| 2331.523| 2475.833|  1| 0.9990517|  439.7179|normal             |         3932.8|    9973.599|\n|carat_z      | 7870.615| 0.95| 7843.919| 7897.895|  1| 0.9992243| 1313.5603|normal             |            0.0|   21040.850|\n|cutGood      | 1121.159| 0.95| 1034.281| 1206.799|  1| 0.9990210|  467.0165|normal             |            0.0|   34685.376|\n|cutIdeal     | 1802.064| 0.95| 1726.486| 1876.251|  1| 0.9992748|  455.6933|normal             |            0.0|   20362.277|\n|cutPremium   | 1440.067| 0.95| 1362.045| 1520.907|  1| 0.9991880|  443.2387|normal             |            0.0|   22862.493|\n|cutVery Good | 1512.021| 0.95| 1431.233| 1589.127|  1| 0.9993142|  443.3639|normal             |            0.0|   23922.148|\n\n</div>\n:::\n:::\n\n\n\n\nEin \"normales\" (frequentistisches) `lm` käme zu ähnlichen Ergebnissen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(price ~ carat_z + cut, data = diamonds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = price ~ carat_z + cut, data = diamonds)\n\nCoefficients:\n (Intercept)       carat_z       cutGood      cutIdeal    cutPremium  \n        2405          7871          1120          1801          1439  \ncutVery Good  \n        1510  \n```\n\n\n:::\n:::\n\n\n\n\n\n\nMan könnte hier noch einen Interaktionseffekt ergänzen, wenn man Grund zur Annahme hat,\ndass es einen gibt.\n\n\n\n\n\n---\n\nCategories: \n\n- regression\n- lm\n- qm2\n- bayes\n- adjust\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}