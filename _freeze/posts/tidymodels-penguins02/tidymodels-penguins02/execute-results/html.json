{
  "hash": "997c3c32b275c687445bfc7fad20dba0",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-penguins02\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\ndate: '2023-05-17'\nslug: tidymodels-penguins02\ntitle: tidymodels-penguins02\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nBerechnen Sie ein kNN-Modell mit tidymodels und zwar anhand des `penguins` Datensatzes.\n\nModellgleichung: `body_mass_g ~ bill_length_mm, data = d_train`.\n\n\n\nGesucht ist R-Quadrat als Maß für die Modellgüte im *TEST-Sample*.\n\n\n\n*Hinweise*:\n\n\n- Fixieren Sie die Zufallszahlen auf den Startwert 42.\n- Nutzen Sie eine v=5,r=1 CV.\n- Tunen Sie nicht.\n- Entfernen Sie fehlende Werte in den Variablen.\n- Verzichten Sie auf weitere Schritte der Vorverarbeitung.\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\nSetup:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-1_bcab9f346246d148eed06fc013837bad'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Rechenzeit messen, optional\n# data(penguins, package = \"palmerpenguins\")\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/penguins.csv\"\nd <- read_csv(d_path)\n```\n:::\n\n\n\nDatensatz auf NAs prüfen:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-2_8c18d6a6d9973d5d0e215b48e4655f61'}\n\n```{.r .cell-code}\nd2 <-\n  d %>% \n  drop_na() \n```\n:::\n\n\n\n\nDatensatz aufteilen:\n\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-3_aa9287e9e153caa66fc3b3e476aa67bb'}\n\n```{.r .cell-code}\nset.seed(42)\nd_split <- initial_split(d2)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n```\n:::\n\n\n\nWorkflow:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-4_ebefe9f36de2a72cf7c2e7cb41fd2217'}\n\n```{.r .cell-code}\nrec1 <-\n  recipe(body_mass_g ~ bill_length_mm, data = d_train) %>% \n  step_naomit(all_numeric())\n\nknn_model <-\n  nearest_neighbor(\n    mode = \"regression\"\n  ) \n\nwflow <-\n  workflow() %>%\n  add_recipe(rec1) %>%\n  add_model(knn_model)\n\nwflow\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n1 Recipe Step\n\n• step_naomit()\n\n── Model ───────────────────────────────────────────────────────────────────────\nK-Nearest Neighbor Model Specification (regression)\n\nComputational engine: kknn \n```\n\n\n:::\n:::\n\n\n\nBacken:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-5_5f9e1693870c2dbf3d7e85a794d59778'}\n\n```{.r .cell-code}\nd_baked <- prep(rec1) %>% bake(new_data = NULL)\nd_baked %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  bill_length_mm body_mass_g\n           <dbl>       <dbl>\n1           34.5        2900\n2           52.2        3450\n3           45.4        4800\n4           42.1        4000\n5           50          5350\n6           41.5        4000\n```\n\n\n:::\n:::\n\n\n\nAuf NA prüfen:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-6_36143d6ba85462f29e46425256eff99f'}\n\n```{.r .cell-code}\nsum(is.na(d_baked))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\nCV:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-7_477aae9197d377b99b6f00f7e1f1894d'}\n\n```{.r .cell-code}\nset.seed(42)\nfolds <- vfold_cv(d_train, v = 5)\nfolds\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#  5-fold cross-validation \n# A tibble: 5 × 2\n  splits           id   \n  <list>           <chr>\n1 <split [199/50]> Fold1\n2 <split [199/50]> Fold2\n3 <split [199/50]> Fold3\n4 <split [199/50]> Fold4\n5 <split [200/49]> Fold5\n```\n\n\n:::\n:::\n\n\n\n\nResampling:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-8_f005259ccea4698532689dc4c06e0c9b'}\n\n```{.r .cell-code}\nd_resamples <-\n  fit_resamples(\n    wflow,\n    resamples = folds\n  )\n\nd_resamples\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics         .notes          \n  <list>           <chr> <list>           <list>          \n1 <split [199/50]> Fold1 <tibble [2 × 4]> <tibble [0 × 3]>\n2 <split [199/50]> Fold2 <tibble [2 × 4]> <tibble [0 × 3]>\n3 <split [199/50]> Fold3 <tibble [2 × 4]> <tibble [0 × 3]>\n4 <split [199/50]> Fold4 <tibble [2 × 4]> <tibble [0 × 3]>\n5 <split [200/49]> Fold5 <tibble [2 × 4]> <tibble [0 × 3]>\n```\n\n\n:::\n:::\n\n\n\n\n\nLast Fit:\n\n\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-9_f428db19c88b6e589e20c3de8260276a'}\n\n```{.r .cell-code}\nfit_last <- last_fit(wflow, d_split)\n```\n:::\n\n\n\nModellgüte im Test-Sample:\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-10_abef2ddb6585260829f6d82a5b8cfeee'}\n\n```{.r .cell-code}\nfit_last %>% collect_metrics()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard     654.    Preprocessor1_Model1\n2 rsq     standard       0.294 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\n\n\n\nR-Quadrat:\n\n\n\n::: {.cell hash='tidymodels-penguins02_cache/html/unnamed-chunk-11_bd4e9c9c7ccc8ab7129592053812bdb0'}\n\n```{.r .cell-code}\nsol <- collect_metrics(fit_last)[[\".estimate\"]][2]\nsol\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2935091\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}