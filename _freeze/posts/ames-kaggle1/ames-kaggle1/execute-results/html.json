{
  "hash": "36bf84ed007085d59585b45f3de1f00a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: ames-kaggle1\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- regression\n- data \n- kaggle\n- string\n- kaggle\ndate: '2023-06-01'\nslug: ames-kaggle1\ntitle: ames-kaggle1\n\n---\n\n\n\n\n\n# Aufgabe\n\nBerechnen Sie ein einfaches lineare Modell für die [Ames House Price Kaggle Competition](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques/data).\n\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n## Pakete starten\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(easystats)\n```\n:::\n\n\n\n## Daten importieren\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train_path_online <- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/ames-kaggle/train.csv\"\nd_test_path_online <- \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/ames-kaggle/test.csv\"\nd_train <- read_csv(d_train_path_online)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1460 Columns: 81\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (43): MSZoning, Street, Alley, LotShape, LandContour, Utilities, LotConf...\ndbl (38): Id, MSSubClass, LotFrontage, LotArea, OverallQual, OverallCond, Ye...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nd_test <- read_csv(d_test_path_online)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1459 Columns: 80\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (43): MSZoning, Street, Alley, LotShape, LandContour, Utilities, LotConf...\ndbl (37): Id, MSSubClass, LotFrontage, LotArea, OverallQual, OverallCond, Ye...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n## Model definieren\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- lm(SalePrice ~ OverallQual, data = d_train)\n```\n:::\n\n\n\n## Neue Daten vorhersagen\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1_pred <- predict(m1, newdata = d_test)\n```\n:::\n\n\n\n\n## Daten einreichen\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_subm <-\n  d_test %>% \n  select(Id) %>% \n  mutate(SalePrice = m1_pred)\n\nhead(d_subm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n     Id SalePrice\n  <dbl>     <dbl>\n1  1461   130973.\n2  1462   176409.\n3  1463   130973.\n4  1464   176409.\n5  1465   267280.\n6  1466   176409.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(d_subm, file = \"einreichen-kaggle-modell1-yeah.csv\")\n```\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- regression\n- ames\n- kaggle\n- string\n\n",
    "supporting": [
      "ames-kaggle1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}