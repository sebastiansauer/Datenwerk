{
  "hash": "670fa6ce67079f0b670b3cc313a7cf1a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: rf-finalize\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- tidymodels\n- statlearning\n- template\n- string\ndate: '2023-05-17'\nslug: rf-finalize\ntitle: rf-finalize\n\n---\n\n\n\n\n# Aufgabe\n\n<!-- Schreiben Sie eine Vorlage für eine prädiktive Analyse mit Tidymodels! -->\n\nBerechnen Sie ein prädiktives Modell mit dieser Modellgleichung:\n\n`body_mass_g ~ .` (Datensatz: palmerpenguins::penguins).\n\n\nBerichten Sie den RSMSE im Test-Sample!\n\nHinweise:\n- Tunen Sie `mtry`\n- Verwenden Sie Kreuzvalidierung\n- Verwenden Sie Standardwerte, wo nicht anders angegeben.\n- Fixieren Sie Zufallszahlen auf den Startwert 42.\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Setup:\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)  # Zeitmessung\n\n\n# Data:\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd <- read_csv(d_path)\n\n# rm NA in the dependent variable:\nd <- d %>% \n  drop_na(body_mass_g)\n\n\nset.seed(42)\nd_split <- initial_split(d)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n\n\n# model:\nmod_rf <-\n  rand_forest(mode = \"regression\",\n           mtry = tune())\n\n\n# cv:\nset.seed(42)\nrsmpl <- vfold_cv(d_train)\n\n\n# recipe:\nrec_plain <- \n  recipe(body_mass_g ~  ., data = d_train) %>% \n  step_impute_bag(all_predictors())\n\n\n# workflow:\nwf1 <-\n  workflow() %>% \n  add_model(mod_rf) %>% \n  add_recipe(rec_plain)\n\n\n# tuning:\ntic()\nwf1_fit <-\n  wf1 %>% \n  tune_grid(\n    resamples = rsmpl)\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n21.808 sec elapsed\n```\n\n\n:::\n\n```{.r .cell-code}\n# best candidate:\nshow_best(wf1_fit)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| mtry|.metric |.estimator |     mean|  n|   std_err|.config         |\n|----:|:-------|:----------|--------:|--:|---------:|:---------------|\n|    3|rmse    |standard   | 280.8153| 10| 11.206073|pre0_mod3_post0 |\n|    2|rmse    |standard   | 282.0886| 10| 11.401888|pre0_mod2_post0 |\n|    6|rmse    |standard   | 283.1617| 10|  9.830670|pre0_mod6_post0 |\n|    8|rmse    |standard   | 283.1983| 10| 10.600386|pre0_mod8_post0 |\n|    7|rmse    |standard   | 283.2110| 10|  9.983912|pre0_mod7_post0 |\n\n</div>\n:::\n\n```{.r .cell-code}\n# finalize wf:\nwf1_final <-\n  wf1 %>% \n  finalize_workflow(select_best(wf1_fit))\n\n\nwf1_fit_final <-\n  wf1_final %>% \n  last_fit(d_split)\n\n\n# Modellgüte im Test-Set:\ncollect_metrics(wf1_fit_final)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|.metric |.estimator |   .estimate|.config         |\n|:-------|:----------|-----------:|:---------------|\n|rmse    |standard   | 322.7491683|pre0_mod0_post0 |\n|rsq     |standard   |   0.8228114|pre0_mod0_post0 |\n\n</div>\n:::\n:::\n\n\n\nAchtung: `step_impute_knn` scheint Probleme zu haben, wenn es Charakter-Variablen gibt.\n\n\n\n\n\n---\n\nCategories: \n\n- tidymodels\n- statlearning\n- template\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}