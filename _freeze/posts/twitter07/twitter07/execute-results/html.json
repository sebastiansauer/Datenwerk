{
  "hash": "2b155a80cc1efa005ef9cbc275f810f3",
  "result": {
    "markdown": "---\nextype: string\nexsolution: NA\nexname: twitter07\nexpoints: 1\ncategories:\n- textmining\n- twitter\n- programming\ndate: '2022-11-19'\nslug: twitter07\ntitle: twitter07\n\n---\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\n\nLaden Sie $n=10^k$ Tweets von Twitter herunter (mit $k=2$) und zwar pro Nutzerkonto wie unten angegeben .\ndie Tweets sollen jeweils an eine prominente Person gerichtet sein.\n\nBeziehen Sie sich auf [diese Politikis](https://github.com/sebastiansauer/datascience-text/blob/main/data/twitter-german-politicians.csv).\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\nWir starten die benötigten R-Pakete:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(academictwitteR)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(askpass)\nlibrary(rio)\n```\n:::\n\n\n\nHier ist der Datensatz mit den Twitterkonten,\nfür die wir die Daten herunterladen sollen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoliticians_path <- \"https://raw.githubusercontent.com/sebastiansauer/datascience-text/main/data/twitter-german-politicians.csv\"\npoliticians <- import(politicians_path)\npoliticians\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name  party      screenname\n1                                   Karl Lauterbach    SPD Karl_Lauterbach\n2                                       Olaf Scholz    SPD      OlafScholz\n3                                 Annalena Baerback Gruene       ABaerbock\n4  Bundesministerium für Wirtschaft und Klimaschutz Gruene            BMWK\n5                                    Friedrich Merz    CDU  _FriedrichMerz\n6                                      Markus Söder    CSU   Markus_Soeder\n7                                       Cem Özdemir Gruene    cem_oezdemir\n8                                    Janine Wissler  Linke  Janine_Wissler\n9                                 Martin Schirdewan  Linke      schirdewan\n10                                Christian Lindner    FDP       c_lindner\n11                    Marie-Agnes Strack-Zimmermann    FDP      MAStrackZi\n12                                   Tino Chrupalla    AFD  Tino_Chrupalla\n13                                     Alice Weidel    AFD    Alice_Weidel\n                                  comment\n1                                    <NA>\n2                                    <NA>\n3                                    <NA>\n4  Robert Habeck ist der Minister im BMWK\n5                                CDU-Chef\n6                                CSU-Chef\n7                                    BMEL\n8                            Linke-Chefin\n9                              Linke-Chef\n10                               FDP-Chef\n11     Vorsitzende Verteidigungsausschuss\n12                     AFD-Bundessprecher\n13                   AFD-Bundessprecherin\n```\n:::\n:::\n\n\n\n\nWir müssen noch das Passwort bereitstellen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbearer_token <- askpass::askpass(\"bearer token\")\n```\n:::\n\n\n\n\nUnd dann definieren wir eine Funktion, \ndie das Gewichtheben für uns erledigt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_all_tweets_politicians <- function(screenname, n = 1e1) {\n  get_all_tweets(query = paste0(\"to:\", screenname, \" -is:retweet\"),\n                 start_tweets = \"2021-01-01T00:00:00Z\",\n                 end_tweets = \"2021-12-31T23:59:59Z\",\n                 bearer_token = bearer_token,\n                 file = glue::glue(\"~/datasets/Twitter/hate-speech/tweets_to_{screenname}_2021.rds\"),\n                 data_path = glue::glue(\"~/datasets/Twitter/hate-speech/{screenname}\"),\n                 n = n)\n}\n```\n:::\n\n\n\nJetzt wenden wir die Funktion auf jedes Twitterkonto unserer Liste (alle Politikis) an:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- politicians$screenname %>% \n  map(get_all_tweets_politicians)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- textmining\n- twitter\n- programming\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}