{
  "hash": "357b9918b41d34ed7fb3d38ccc6a7bb7",
  "result": {
    "markdown": "---\nexname: regex-insert-char\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- textmining\n- regex\n- string\ndate: '2023-05-22'\nslug: regex-insert-char\ntitle: regex-insert-char\n\n---\n\n\n\n\n\n\n\n# Aufgabe\n\n\nGegeben sei ein String dieser Art (ggf. noch viel länger, aber vom gleichen Aufbau):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_string <-c(\n\"word1\",\n\"word2\",\n\"word3\"\n)\n\nwriteLines(my_string)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nword1\nword2\nword3\n```\n:::\n:::\n\n\n\n(`writeLines` druckt einen String, wo wie er am Bildschirm erscheint, wenn man einfach nur `my_string` eingibt, werden Steuerzeichen mitangezeigt.)\n\n\nWandeln Sie diesen String (programmatisch) um in folgende Form\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_string_out <-c(\n'\"word1\"',\n'\"word2\"',\n'\"word3\"'\n)\n\nwriteLines(my_string_out)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\"word1\"\n\"word2\"\n\"word3\"\n```\n:::\n:::\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_replace_all(string = my_string,\n                pattern = \"(^\\\\w)(.+$)\",\n                replacement = '\\\\\"\\\\1\\\\2\\\\\"') %>% \n  writeLines()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\"word1\"\n\"word2\"\n\"word3\"\n```\n:::\n:::\n\n\n\n\nErklärung:\n\n- `(^\\\\w)` ist eine *Such-Gruppe*, die aus den Treffern besteht, bei denen zu Beginn des Strings ein \"Wort-Zeichen\" steht [vgl. hier](https://r4ds.had.co.nz/strings.html#grouping-and-backreferences).\n- `(.+$)` ist eine *Such-Gruppe*, die aus Treffern besteht, bei denen zum Ende des Strings ein beliebiges Zeichen steht.\n- `'\\\\\"\\\\1\\\\2\\\\\"'` `\\\\\"` bezieht sich auf ein Anführungszeichen, `\\\\1` bezieht sich auf die 1. Such-Gruppe (analog für `\\\\2`).\n\nHat man innerhalb eines Strings ein Anführungszeichen, so setzt man außen das einfache und innerhalb des Strings das doppelte Anführungszeichen.\n\n\n\n\n---\n\nCategories: \n\n- textmining\n- regex\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}