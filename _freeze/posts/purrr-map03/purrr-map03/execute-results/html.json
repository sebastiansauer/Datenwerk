{
  "hash": "e698c2474f327def46f97634281bf709",
  "result": {
    "markdown": "---\nextype: string\nexsolution: NA\nexname: purrr-map03\nexpoints: 1\ncategories:\n- r\n- map\n- tidyverse\ndate: '2022-10-24'\nslug: purrr-map03\ntitle: purrr-map03\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n\n# Exercise\n\nImportieren Sie das Grundatzprogramm der Partei AfD (in der aktuellsten Version). \nTokenisieren Sie nach Sätzen. \nDann entfernen Sie alle Zahlen.\nDann zählen Sie die Anzahl der Wörter pro Satz und berichten gängige deskriptive Statistiken dazu.\n\n\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\nText aus PDF-Dateien kann man mit dem Paket [`pdftools`](https://docs.ropensci.org/pdftools/) einlesen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pdftools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nUsing poppler version 22.02.0\n```\n:::\n\n```{.r .cell-code}\nd_path <- \"/Users/sebastiansaueruser/Google Drive/Literatur/_Div/Politik/afd-grundsatzprogramm-2022.pdf\"\n\nd <- tibble(text = pdf_text(d_path))\n```\n:::\n\n\n\nDann erstellen wir eine Tidy-Version und tokenisieren nach Sätzen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytext)\nd2 <-\n  d %>% \n  unnest_sentences(output = word, input = text)\n\nhead(d2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  word                                                                          \n  <chr>                                                                         \n1 programm für deutschland.                                                     \n2 das grundsatzprogramm der alternative für deutschland.                        \n3 2   programm für deutschland | inhalt         präambel                       …\n4 familien stärken        43             und parteiferne rechnungshöfe         …\n5 3   programm für deutschland | inhalt         7 | kultur, sprache und identit…\n6 förder- und                         10.10.3 deutsche literatur im inland digi…\n```\n:::\n:::\n\n\nDann entfernen wir die Zahlen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3 <- \n  d2 %>% \n  mutate(word = str_remove_all(word, pattern = \"[:digit:]+\"))\n```\n:::\n\n\nPrüfen wir, ob es geklappt hat:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2$word[10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"weniger subventionen    88      13.7 fischerei, forst und jagd: im einklang mit der natur     88      13.8 flächenkonkurrenz:           nicht zu lasten der land- und forstwirtschaft            88\"\n```\n:::\n\n```{.r .cell-code}\nd3$word[10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"weniger subventionen          . fischerei, forst und jagd: im einklang mit der natur           . flächenkonkurrenz:           nicht zu lasten der land- und forstwirtschaft            \"\n```\n:::\n:::\n\n\nOk.\n\nDann zählen wir die Wörter pro Satz:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd4 <- \n  d3 %>% \n  summarise(word_count_per_sentence = str_count(word, \"\\\\w+\"))\n\nhead(d4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  word_count_per_sentence\n                    <int>\n1                       3\n2                       6\n3                     196\n4                      40\n5                     254\n6                      15\n```\n:::\n:::\n\n\nVisualisierung:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd4 %>% \n  ggplot(aes(x = word_count_per_sentence)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](purrr-map03_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(easystats)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n# Attaching packages: easystats 0.5.2 (red = needs update)\n✖ insight     0.18.5   ✖ datawizard  0.6.2 \n✔ bayestestR  0.13.0   ✔ performance 0.10.0\n✔ parameters  0.19.0   ✖ effectsize  0.8.1 \n✔ modelbased  0.8.5    ✔ correlation 0.8.3 \n✔ see         0.7.3    ✔ report      0.5.5 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n```\n:::\n\n```{.r .cell-code}\ndescribe_distribution(d4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVariable                |  Mean |    SD | IQR |          Range | Skewness | Kurtosis |    n | n_Missing\n-------------------------------------------------------------------------------------------------------\nword_count_per_sentence | 21.86 | 17.24 |  19 | [0.00, 254.00] |     3.84 |    37.52 | 1208 |         0\n```\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- r\n- map\n- tidyverse\n\n",
    "supporting": [
      "purrr-map03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}