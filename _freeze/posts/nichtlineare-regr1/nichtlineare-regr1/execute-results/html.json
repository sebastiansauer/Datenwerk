{
  "hash": "b2299711c4cf55bea690d7a661b98410",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: string\nexsolution: NA\nexname: nichtlineare-regr1\nexpoints: 1\ncategories:\n- lm\n- vis\n- qm2\n- regression\n- string\ndate: '2023-05-08'\nslug: nichtlineare-regr1\ntitle: nichtlineare-regr1\n\n---\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\n\n\n\n\nWir suchen ein Modell, das einen *nichtlinearen* Zusammenhang von PS-Zahl und Spritverbrauch darstellt (Datensatz `mtcars`).\n\n\nGeben Sie dafür ein mögliches Modell an! Nutzen Sie den R-Befehl `lm`. \n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-1_26f16a0f5a30af7c3ab15f39dfc65315'}\n\n```{.r .cell-code}\nmtcars <-\n  mtcars %>% \n  mutate(mpg_log = log(mpg)) \n\nlm1 <- lm(mpg_log ~ hp, data = mtcars)\nsummary(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = mpg_log ~ hp, data = mtcars)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.41577 -0.06583 -0.01737  0.09827  0.39621 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.4604669  0.0785838  44.035  < 2e-16 ***\nhp          -0.0034287  0.0004867  -7.045 7.85e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1858 on 30 degrees of freedom\nMultiple R-squared:  0.6233,\tAdjusted R-squared:  0.6107 \nF-statistic: 49.63 on 1 and 30 DF,  p-value: 7.853e-08\n```\n\n\n:::\n:::\n\n\n\nVisualisieren wir die Vorhersagen des Modells:\n\n\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-2_31aae1f918d5e78aee7695744ab9bc41'}\n\n```{.r .cell-code}\nmtcars <-\n  mtcars %>% \n  mutate(pred = predict(lm1))\n```\n:::\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-3_256e88ebc9d0e049cb9c3de3ebdf27c8'}\n\n```{.r .cell-code}\nmtcars %>% \n  ggplot() +\n  aes(x = hp) +\n  geom_line(aes( y = pred), color = \"blue\") +\n  geom_point(aes(y = mpg_log)) +\n  labs(y = \"log(mpg)\",\n       title = \"Vorhersage von log-mpg in einem Log-Y-Modell\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-3-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\nOder so visualisieren:\n\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-4_3bc1d08af4e08ceba5a32a4c7b3cef2d'}\n\n```{.r .cell-code}\nlibrary(easystats)\nestimate_expectation(lm1) %>% plot()\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-4-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nMöchte man auf der Y-Achse *mpg* und nicht log(mpg) anzeigen, muss man den Logarithmus wieder \"auflösen\", das erreicht man mit der Umkehrfunktion des Logarithmus, das Exponentieren (man \"delogarithmiert\"):\n\n$$\\begin{aligned}\nlog(y) &= x \\qquad | \\text{Y in Log-Form}\\\\\n    exp(log(y)) &= exp(x)  \\qquad | \\text{Jetzt exponenzieren wir beide Seiten}\\\\\n    y = exp(x)\n\\end{aligned}$$\n\n\nDabei gilt $exp(x) = e^x$, mit $e$ als Eulersche Zahl (2.71...).\n\n\n\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-5_29ba4372a6aac064a516ecf7fde128b0'}\n\n```{.r .cell-code}\nmtcars <-\n  mtcars %>% \n  mutate(pred_delog = exp(pred))  # delogarithmieren\n```\n:::\n\n::: {.cell hash='nichtlineare-regr1_cache/html/unnamed-chunk-6_7289021cb0588a8da5624791bb8844b4'}\n\n```{.r .cell-code}\nmtcars %>% \n  ggplot() +\n  aes(x = hp) +\n  geom_line(aes( y = pred_delog), color = \"blue\") +\n  geom_point(aes(y = mpg_log)) +\n  labs(y = \"mpg\",\n       title = \"Vorhersage von mpg in einem Log-Y-Modell\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-6-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- lm\n- vis\n- qm2\n- regression\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}