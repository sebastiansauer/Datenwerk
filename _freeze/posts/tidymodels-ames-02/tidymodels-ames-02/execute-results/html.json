{
  "hash": "264da13a0fb06940f982cf3f70361a80",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-ames-02\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\ndate: '2023-05-17'\nslug: tidymodels-ames-02\ntitle: tidymodels-ames-02\n\n---\n\n---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nBerechnen Sie ein lineares Modell mit tidymodels und zwar anhand des `ames` Datensatzes.\n\nModellgleichung: `Sale_Price ~ Gr_Liv_Area, data = ames`.\n\nBerechnen Sie ein multiplikatives (exponenzielles) Modell.\n\nGesucht ist R-Quadrat als Maß für die Modellgüte im *TEST-Sample*.\n\n\n*Hinweise*:\n\n- Fixieren Sie die Zufallszahlen auf den Startwert 42.\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-1_a836397e594219699af67f7eceeb39b7'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\ndata(ames)\n```\n:::\n\n\n\nMultiplikatives Modell:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-2_311bf4b2e62e9324e6309fa0c3016de9'}\n\n```{.r .cell-code}\names <- \n  ames %>% \n  mutate(Sale_Price = log10(Sale_Price)) %>% \n  select(Sale_Price, Gr_Liv_Area)\n```\n:::\n\n\nNicht vergessen: AV-Transformation in beiden Samples!\n\n\nDatensatz aufteilen:\n\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-3_c4bfbc8fb64ee7f03eaefde6d5cab4be'}\n\n```{.r .cell-code}\nset.seed(42)\names_split <- initial_split(ames, prop = 0.80, strata = Sale_Price)\names_train <- training(ames_split)\names_test  <-  testing(ames_split)\n```\n:::\n\n\n\n\nModell definieren:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-4_f57dcdca9734778173232827579c233c'}\n\n```{.r .cell-code}\nm1 <-\n  linear_reg() # engine ist \"lm\" im Default\n```\n:::\n\n\n\n\nModell fitten:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-5_c3a0fe971ee949e823c9dc4295f719b9'}\n\n```{.r .cell-code}\nfit1 <-\n  m1 %>% \n  fit(Sale_Price ~ Gr_Liv_Area, data = ames)\n```\n:::\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-6_3bea6bc3539ba07f908270fa45d35858'}\n\n```{.r .cell-code}\nfit1 %>% pluck(\"fit\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nCoefficients:\n(Intercept)  Gr_Liv_Area  \n  4.8552133    0.0002437  \n```\n\n\n:::\n:::\n\n\n\n\nModellgüte im Train-Sample:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-7_29a901ce0cd346282025c82b80e17955'}\n\n```{.r .cell-code}\nfit1_performance <-\n  fit1 %>% \n  extract_fit_engine()  # identisch zu pluck(\"fit\")\n```\n:::\n\n\n\n\nModellgüte im Train-Sample:\n\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-8_a43c86433e97053f242df62ed989325e'}\n\n```{.r .cell-code}\nfit1_performance %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.02587 -0.06577  0.01342  0.07202  0.39231 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 4.855e+00  7.355e-03  660.12   <2e-16 ***\nGr_Liv_Area 2.437e-04  4.648e-06   52.43   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1271 on 2928 degrees of freedom\nMultiple R-squared:  0.4842,\tAdjusted R-squared:  0.484 \nF-statistic:  2749 on 1 and 2928 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\nR-Quadrat via easystats:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-9_ec1fe4e2e05000c7048891d9637f5293'}\n\n```{.r .cell-code}\nlibrary(easystats)\nfit1_performance %>% r2()  # rmse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# R2 for Linear Regression\n       R2: 0.484\n  adj. R2: 0.484\n```\n\n\n:::\n:::\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-10_3728cc01e49157f49f609e9f1b450d06'}\n\n```{.r .cell-code}\ntidy(fit1_performance)  # ähnlich zu parameters()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate  std.error statistic p.value\n  <chr>          <dbl>      <dbl>     <dbl>   <dbl>\n1 (Intercept) 4.86     0.00736        660.        0\n2 Gr_Liv_Area 0.000244 0.00000465      52.4       0\n```\n\n\n:::\n:::\n\n\n\n\nVorhersagen im Test-Sample:\n\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-11_0c38cf3c478cec2bc5d99b4177e4a141'}\n\n```{.r .cell-code}\npreds <- predict(fit1, new_data = ames_test)  # liefert TABELLE (tibble) zurück\nhead(preds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 1\n  .pred\n  <dbl>\n1  5.07\n2  5.18\n3  5.31\n4  5.11\n5  5.18\n6  5.10\n```\n\n\n:::\n:::\n\n\n`preds` ist ein Tibble, also müssen wir noch die Spalte `.pred.` herausziehen, z.B. mit `pluck(preds, \".pred\")`:\n\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-12_dd6d00cf71e5487705fffc1c0f10cdf2'}\n\n```{.r .cell-code}\npreds_vec <- preds$.pred\n```\n:::\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-13_311f06643b19c38d1582741c720880b2'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  mutate(preds = pluck(preds, \".pred\"),  # pluck aus der Tabelle rausziehen\n         .pred = preds_vec)  # oder  mit dem Dollar-Operator\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Sale_Price Gr_Liv_Area preds .pred\n       <dbl>       <int> <dbl> <dbl>\n1       5.02         896  5.07  5.07\n2       5.24        1329  5.18  5.18\n3       5.60        1856  5.31  5.31\n4       5.15        1056  5.11  5.11\n5       5.26        1337  5.18  5.18\n6       4.98         987  5.10  5.10\n```\n\n\n:::\n:::\n\n\nOder mit `unnest`:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-14_fde5530564dab6c79172fbe331cd178f'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  mutate(preds = preds) %>% \n  unnest(preds) # Listenspalte \"entschachteln\"\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       <dbl>       <int> <dbl>\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n```\n\n\n:::\n:::\n\n\nOder wir binden einfach die Spalte an den Tibble:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-15_4f04db4c6f12386cc1b5620f2092f1d2'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  bind_cols(preds = preds)  # nimmt Tabelle und bindet die Spalten dieser Tabelle an eine Tabelle\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       <dbl>       <int> <dbl>\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n```\n\n\n:::\n:::\n\n\n\n\nModellgüte im Test-Sample:\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-16_b46d92880d1d5250156cf0640ad396a6'}\n\n```{.r .cell-code}\nrsq(ames_test2,\n    truth = Sale_Price,\n    estimate = .pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard       0.517\n```\n\n\n:::\n:::\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-17_73536fd578b1822a5769b76bbcd2dc41'}\n\n```{.r .cell-code}\nsol <- 0.51679\n```\n:::\n\n\n\n\nZur Interpretation von Log10-Werten\n\n\n::: {.cell hash='tidymodels-ames-02_cache/html/unnamed-chunk-18_1b44ac944d8bbca50145674a39eb3819'}\n\n```{.r .cell-code}\n5e5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5e+05\n```\n\n\n:::\n\n```{.r .cell-code}\n5*10^5 - 500000\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}