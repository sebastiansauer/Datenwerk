{
  "hash": "d041138bf385f4900259cbbc2d761c57",
  "result": {
    "markdown": "---\nexname: filter-na3\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- 2023\n- eda\n- na\n- string\ndate: '2023-05-14'\nslug: filter-na3\ntitle: filter-na3\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nFiltern Sie alle Zeilen *mit* fehlende Werte im Datensatz `penguins`! \n\nLiefern Sie die *Spalten* zurück, die fehlende Werte aufweisen.\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd <- read_csv(d_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 344 Columns: 9\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): species, island, sex dbl (6): ...1, bill_length_mm, bill_depth_mm,\nflipper_length_mm, body_mass_g...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nnrow(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 344\n```\n:::\n:::\n\n\n\n## Weg 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_na_only <-\n  d %>% \n  filter(!complete.cases(.)) \n\nd_na_only %>% \n  names()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"...1\"              \"species\"           \"island\"           \n[4] \"bill_length_mm\"    \"bill_depth_mm\"     \"flipper_length_mm\"\n[7] \"body_mass_g\"       \"sex\"               \"year\"             \n```\n:::\n:::\n\n\n## Weg 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% \n  filter(if_any(everything(), ~ is.na(.))) %>% \n  names()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"...1\"              \"species\"           \"island\"           \n[4] \"bill_length_mm\"    \"bill_depth_mm\"     \"flipper_length_mm\"\n[7] \"body_mass_g\"       \"sex\"               \"year\"             \n```\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- 2023\n- eda\n- na\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}