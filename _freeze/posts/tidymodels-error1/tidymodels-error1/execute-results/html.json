{
  "hash": "1e0d8b74282d3469877b989d11aecc73",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-error1\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- tidymodels\n- statlearning\n- error\n- na\n- string\ndate: '2023-11-15'\nslug: tidymodels-error1\ntitle: tidymodels-error1\n\n---\n\n\n\n\n\n# Aufgabe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.0     ✔ tidyr        1.3.1\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.3.0     ✔ workflows    1.1.3\n✔ parsnip      1.2.0     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.3.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tictoc)\n\n# Data:\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd <- read.csv(d_path)\n```\n:::\n\n\n\nDie folgende Pipeline hat einen Fehler. Welcher ist das?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nd_split <- initial_split(d)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n\n\n# model:\nmod1 <-\n  rand_forest(mode = \"regression\")\n\n\n# cv:\nset.seed(42)\nrsmpl <- vfold_cv(d_train)\n\n\n# recipe:\nrec1 <- recipe(body_mass_g ~  ., data = d_train) |> \n  #step_unknown(all_nominal_predictors(), new_level = \"NA\") |> \n  #step_novel(all_nominal_predictors()) |> \n  step_naomit(all_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_nzv(all_predictors()) |> \n  step_normalize(all_predictors()) \n\n\n\n# workflow:\nwf1 <-\n  workflow() %>% \n  add_model(mod1) %>% \n  add_recipe(rec1)\n\n\n# fitting:\ntic()\nwf1_fit <-\n  wf1 %>% \n  fit(data = d_train)\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n0.625 sec elapsed\n```\n\n\n:::\n\n```{.r .cell-code}\npreds <- predict(wf1_fit, new_data = d_test) \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: Missing data in columns: bill_length_mm, bill_depth_mm, flipper_length_mm.\n```\n\n\n:::\n:::\n\n\nAls Check: Das gepreppte/bebackene Rezept:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrec1_prepped <- prep(rec1)\nd_train_baked <- bake(rec1_prepped, new_data = NULL)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train_baked |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 12\n  rownames bill_length_mm bill_depth_mm flipper_length_mm    year body_mass_g\n     <dbl>          <dbl>         <dbl>             <dbl>   <dbl>       <int>\n1   -1.24          -1.53          0.386            -0.794 -1.29          3450\n2    1.45           1.32          0.386            -0.365  1.14          3675\n3   -0.212          0.401        -1.97              0.707 -1.29          4500\n4   -0.993          0.343         0.887            -0.294 -0.0757        4150\n5    0.530          0.879        -0.566             2.07  -0.0757        5800\n6   -0.281         -0.957         0.787            -1.15   1.14          3650\n# ℹ 6 more variables: species_Chinstrap <dbl>, species_Gentoo <dbl>,\n#   island_Dream <dbl>, island_Torgersen <dbl>, sex_female <dbl>,\n#   sex_male <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train_baked |> \n  map_int(~ sum(is.na(.)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         rownames    bill_length_mm     bill_depth_mm flipper_length_mm \n                0                 0                 0                 0 \n             year       body_mass_g species_Chinstrap    species_Gentoo \n                0                 0                 0                 0 \n     island_Dream  island_Torgersen        sex_female          sex_male \n                0                 0                 0                 0 \n```\n\n\n:::\n:::\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nDer Fehler liegt darin, dass das Rezept *keine Änderungen an der AV* ausführt.\nIn der AV gibt es aber fehlende Werte (`NA`) im Test-Set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(d_test))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         rownames           species            island    bill_length_mm \n                0                 0                 0                 1 \n    bill_depth_mm flipper_length_mm       body_mass_g               sex \n                1                 1                 1                 0 \n             year \n                0 \n```\n\n\n:::\n:::\n\n\nEinen fehlenden Wert, um genau zu sein. Dieser eine fehlende Wert versalzt uns die Suppe:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_test_nona <-\n  d_test |> \n  na.omit()\n```\n:::\n\n\n\nUnd schon geht's.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds <- predict(wf1_fit, new_data = d_test_nona) \npreds |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 1\n  .pred\n  <dbl>\n1 3952.\n2 3675.\n3 3615.\n4 3806.\n5 3490.\n6 3390.\n```\n\n\n:::\n:::\n\n\n\n[Dieser SO-Post](https://stackoverflow.com/questions/72333419/error-on-running-predict-in-tidymodels-error-in-dplyrselect-cant-su) handelt von einem vergleichbarem Problem.\n\n\n\n\n\n\n---\n\nCategories: \n\n- tidymodels\n- statlearning\n- error\n- NA\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}