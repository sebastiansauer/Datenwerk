{
  "hash": "5ab911057ccf27cd6bd72e8288bc4c0d",
  "result": {
    "markdown": "---\nexname: fattails01\nextype: schoice\nexsolution: 1\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- probability\n- simulation\n- fat-tails\n- normal-distribution\ndate: '2022-11-23'\nslug: fattails01\ntitle: fattails01\n\n---\n\n---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\nIn seinem Buch [\"Statistical Consequences of Fat Tails\"](https://nassimtaleb.org/2020/01/final-version-fat-tails/) schreibt der Autor, Nassim Taleb (S. 53):\n\n\n>   In the summer of 1998, the hedge fund called \"Long Term Capital Management\" (LTCM) proved to have a very short life; it went bust from some deviations in the markets –those \"of an unexpected nature\". The loss was a yuuuge deal because two of the partners received the Swedish Riksbank Prize, marketed as the \"Nobel\" in economics. (...)  At least two of the partners made the statement that it was a \"10 sigma\" event (10 standard deviations), hence they should be absolved of all accusations of incompetence (I was ﬁrst hand witness of two such statements).\n\nWir testen in diesem Zusammenhang zwei Hypothesen: $H_N$, dass der Finanzmarkt normalverteilt ist und $H_F$, dass die Variable *fat tailed* ist, also nicht normalverteilt, sondernn einer Verteilung entspringt, in der \"Extremereignisse\" üblicher sind als in einer Normalverteilung.\n\n\nUm die Fat-Tails-Verteilung mit $n=10$ zu simulieren, nutzen wir hier folgende Funktion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfat_tail_data <- rt(n = 100, df = 2)\n```\n:::\n\n\nDabei bedeutet `df = 2`, dass die Verteilung sehr randlastig (fat tailed) sein soll (genauer gesagt eine t-Verteilung mit zwei Freiheitsgraden).\nDetails dazu sollen uns hier nicht interessieren. \n*Nur* für diejenigen, die neugierig sind: `r` steht für `random`, also eine Zufallszahl. Diese soll aus der sog. *t-Verteilung* mit df=1 stammen. \nDas ist, einfach gesagt, eine \"plattgedrückte\" Normalverteilung.\n\n\nBerechnen wir die Wahrscheinlichkeit, dass die Daten einer Normalverteilung entspringen (und nicht der Fat-Tail-Verteilung).\n\n\nDie Wahrscheinlichkeit eines 10-Sigma-Events ist übrigens ... klein. Taleb berichtet sie mit $1.31 \\cdot 10^{-23}$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_norm <- 1.31e-23\n```\n:::\n\n\n\nFür die t-Verteilung ist der entsprechende Wert:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_fat <- 1 - pt(q = 10, df = 2)\n```\n:::\n\n\nAuch hier soll der Befehl `pt` nicht interessieren.\n*Nur* für die Neugierigen: *p*  steht für *probability*, *t* für die t-Verteilung.\nDer Befehl gibt uns also die Wahrscheintlichkeit, $p$, für ein bestimmten Quartil, $q$,\naus einer t-Verteilung mit 2 Freiheitsgraden.\n\n\n\n*Wie hoch ist die Post-Wahrscheinlichkeit, dass die Variable normalverteilt ist?*\n\n\n\n\nHinweise:\n\n- Geben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n- Apriori sollen uns beide Hypothesen gleich plausibel sein.\n\n\nAnswerlist\n==========\n* kleiner als 50%\n* kleiner als 5%\n* kleiner als 0.5%\n* kleiner als 0.05%\n* kleiner als 0.005%\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nErstellen wir erstmal den ersten Teil einer Bayes-Box:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  tibble(H = c(\"Normalverteilt\", \"Randlastig verteilt\"),\n         Prior = c(1,1))\n\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  H                   Prior\n  <chr>               <dbl>\n1 Normalverteilt          1\n2 Randlastig verteilt     1\n```\n:::\n:::\n\n\nDann fügen wir den Likelihood jeder Hypothese dazu:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d %>% \n  mutate(L = c(L_norm, L_fat))\n\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  H                   Prior        L\n  <chr>               <dbl>    <dbl>\n1 Normalverteilt          1 1.31e-23\n2 Randlastig verteilt     1 4.93e- 3\n```\n:::\n:::\n\n\n\nDann berechnen wir die Post-Wahrscheinlichkeit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d %>% \n  mutate(Post_unstand = Prior * L,\n         Post = Post_unstand / sum(Post_unstand))\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  H                   Prior        L Post_unstand     Post\n  <chr>               <dbl>    <dbl>        <dbl>    <dbl>\n1 Normalverteilt          1 1.31e-23     1.31e-23 2.66e-21\n2 Randlastig verteilt     1 4.93e- 3     4.93e- 3 1   e+ 0\n```\n:::\n:::\n\n\n\nDie Wahrscheinlichkeit, dass die Variable normalverteilt ist, ist seeeeehr klein, ca. $10^{-21}$.\n\n\n\n\nAnswerlist\n==========\n* FALSE\n* FALSE\n* FALSE\n* FALSE\n* TRUE\n\n\n\n\n---\n\nCategories: \n\n- probability\n- simulation\n- fat-tails\n- normal-distribution\n\n",
    "supporting": [
      "fattails01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}