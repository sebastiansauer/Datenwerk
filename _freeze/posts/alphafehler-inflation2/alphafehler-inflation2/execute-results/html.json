{
  "hash": "728f362f0ee6b3ad0dc01c513a729987",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: alphafehler-inflation2\nextype: num\nexsolution: r loesung\nexshuffle: no\nextol: 0.02\nexpoints: 1\ncategories:\n- probability\n- R\n- inference\n- num\ndate: '2023-11-08'\nslug: alphafehler-inflation2\ntitle: alphafehler-inflation2\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\nDas \"Maschinendisaster\" sei als folgendes Szenario beschrieben:\n\nEine Maschine bestehe aus einer Menge Teile, die alle recht zuverlässig arbeiten.\nAußerdem arbeiten alle Teile unabhängig voneinander (vermutlich keine ganz realistische Annahme).\nDie Zuverlässigkeit eines Teils sei $r=.9999$ für ein bestimmtes Zeitintervall $t$.\nMit $1-r$ fällt also ein Teil innerhalb von $t$ aus.\n\nEin interessanter Schnörkel ist, dass man \"Maschine\" auch als \"Computerprogramm\" oder \"biologisches System\" lesen kann.\n\n\nEine Forscherin fragt sich, \naus wie vielen $k$ Teilen die Maschine *höchstens* bestehen darf,\ndamit es mit einer Wahrscheinlichkeit von 99% zu *keinem* Ausfall innerhalb von $t=1$ kommt.\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- .9999\nloesung <- \n  log(.99, base = r) %>% \n  trunc()\nloesung\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n:::\n\n\n\n`trunc()` schneidet die Dezimalstellen ab, rundet also ab.\n\n\n\n\n$$\n\\begin{aligned}\nr^k  &= .99 \\qquad |log_r \\\\\nlog_r(r^k) &= log_r(.99) \\\\\nk &\\approx 100\n\\end{aligned}\n$$\n\nDie Lösung lautet also 100.\n\n\n\n\n---\n\nCategories: \n\n- probability\n- R\n- inference\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}