{
  "hash": "4ecdba340f456ecf25558460a640d602",
  "result": {
    "markdown": "---\nexname: iq08\nextype: num\nexsolution: r exams::fmt(solution, 2)\nexshuffle: no\nextol: 0.02\nexpoints: 1\ncategories:\n- probability\n- simulation\n- normal-distribution\n- num\ndate: '2023-10-15'\nslug: iq08\ntitle: iq08\n\n---\n\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nAn einer Elite-Hochschule wird man nur zugelassen, wenn man sowohl schön als auch schlau ist.\n\n\"Schön\" sei definiert als  eine SD-Einheit über dem mittleren Aussehen, unter der Annahme, dass Aussehen normalverteilt ist.\n\n\"Schlau\" sei definiert als eine SD-Einheit über dem mittleren Wert, unter der Annahme, dass die Variable normalverteilt ist.\n\n*Wie hoch ist die Wahrscheinlichkeit, an dieser Elite-Uni zugelassen zu werden?*\n\nHinweise:\n\n- Nutzen Sie Simulationsmethoden.\n- Gehen Sie von folgender Verteilung für Schönheit und für Schlauheit aus: $X \\sim N(0,1)$\n- Intelligenz und Schönheit sollen als unabhängig angenommen werden.\n- Geben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n- Simulieren Sie $n=10^4$ Stichproben.\n- Nutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten).\n- [Weitere Hinweise](https://start-bayes.netlify.app/pruefung#bearbeitungshinweise)\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nDie Wahrscheinlichkeit für \"schön\", $S1$ ist gleich der Wahrscheinlichkeit für \"Schlau\", $S2$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nWir simulieren die Daten:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n\nd <- tibble(\n  id = 1:10^4,\n  schoenheit = rnorm(n = 10^4, mean = 0, sd = 1),\n  schlauheit = rnorm(n = 10^4, mean = 0, sd = 1))\n```\n:::\n\n\nDa es nur um Anteile (bzw. Wahrscheinlichkeiten) der Population geht, \nkönnen wir mit z-Werten arbeiten.\n\nZur Erinnerung: \nEin z-Wert von 1 bedeutet, dass der Messwert eine SD-Einheit größer ist als der Mittelwert der Verteilung.\n\n\n\nDann filtern wir wie in der Angabe gefragt:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <-\n  d %>% \n  count(schoenheit > 1, schlauheit > 1) %>%  # Das Komma wird als logisches UND interpretiert\n  mutate(prop = n / sum(n))\n\nd2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  `schoenheit > 1` `schlauheit > 1`     n  prop\n  <lgl>            <lgl>            <int> <dbl>\n1 FALSE            FALSE             7082 0.708\n2 FALSE            TRUE              1364 0.136\n3 TRUE             FALSE             1314 0.131\n4 TRUE             TRUE               240 0.024\n```\n:::\n:::\n\n\n\nWieder nehmen wir den Anteil her und bezeichnen ihn als Wahrscheinlichkeit.\nDas ist eine schöne Sache dieser Simulationsmethoden:\nEs vereinfacht die Angelegenheit, denn mit Häufigkeiten lässt sich einfacher hantieren\nals mit Wahrscheinlichkeiten.\nUnd die Anteile erfüllen die Kolmogorov-Axiome,\nwir können also beruhigt rechnen. Falls Sie also vor Sorge\num die Reinheit der Mathematik nicht schlafen konnten, kann ich Sie beruhigen :-)\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n**Antwort**: *Die Lösung lautet also 0.024.*\n\nInteressant ist es vielleicht, die Gesamtpopulation zu visualisieren:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% \n  mutate(ist_schoen = if_else(schoenheit > 1, TRUE, FALSE),\n         ist_schlau = if_else(schlauheit > 1, TRUE, FALSE),\n         ist_schoen_schlau = if_else(ist_schoen & ist_schlau, TRUE, FALSE)) %>% \n  ggplot() +\n  aes(x = schoenheit, y = schlauheit, color = ist_schoen_schlau, alpha = .1) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-5-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nWäre die Aufnahmeregel, dass es reichte, entweder schön oder schlau (beides ist auch ok) zu sein,\nwäre der Anteil an zugelassenen Personen größer:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3 <-\n  d %>% \n  count(schoenheit > 1 | schlauheit > 1) %>%  # der horizontale Balken steht für das logische ODER.\n  mutate(prop = n / sum(n))\n\nd3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  `schoenheit > 1 | schlauheit > 1`     n  prop\n  <lgl>                             <int> <dbl>\n1 FALSE                              7082 0.708\n2 TRUE                               2918 0.292\n```\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- probability\n- simulation\n- normal-distribution\n- num\n\n",
    "supporting": [
      "iq08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}