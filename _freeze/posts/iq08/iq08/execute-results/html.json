{
  "hash": "6a3a6294754c8867f00bf2eda2391f12",
  "result": {
    "markdown": "---\nexname: iq08\nextype: num\nexsolution: r solution\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- probability\n- simulation\n- normal-distribution\ndate: '2022-11-04'\nslug: iq08\ntitle: iq08\n\n---\n\n---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\nAn einer Elite-Hochschule wird man nur zugelassen, wenn man entweder schön oder schlau ist.\n\n\"Schön\" sei definiert als  eine SD-Einheit über dem mittleren Aussehen, unter der Annahme, dass Aussehen normalverteilt ist.\n\n\"Schlau\" sei definiert als eine SD-Einheit über dem mittleren Wert, unter der Annahme, dass die Variable normalverteilt ist.\n\n\nHinweise:\n\n- Nutzen Sie Simulationsmethoden.\n- Gehen Sie von folgender Verteilung für Schönheit und für Schlauheit aus: $X \\sim N(0,1)$\n- Intelligenz und Schönheit sollen als unabhängig angenommen werden.\n- Geben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n- Simulieren Sie $n=10^4$ Stichproben.\n- Nutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten).\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\nDie Wahrscheinlichkeit für \"schön\", $S1$ ist gleich der Wahrcheinlichkeit für \"Schlau\", $S2$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nWir simulieren die Daten; Subpopulation 1:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n\nd <- tibble(\n  id = 1:10^4,\n  schoenheit = rnorm(n = 10^4, mean = 0, sd = 1),\n  schlauheit = rnorm(n = 10^4, mean = 0, sd = 1))\n```\n:::\n\n\n\nDann filtern wir wie in der Angabe gefragt:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <-\n  d %>% \n  count(schoenheit > 1, schlauheit > 1) %>% \n  mutate(prop = n / sum(n))\n\nd2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  `schoenheit > 1` `schlauheit > 1`     n  prop\n  <lgl>            <lgl>            <int> <dbl>\n1 FALSE            FALSE             7082 0.708\n2 FALSE            TRUE              1364 0.136\n3 TRUE             FALSE             1314 0.131\n4 TRUE             TRUE               240 0.024\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\nDie Lösung lautet also 0.024.\n\nInteressant ist es vielleicht, die Gesamtpopulation zu visualisieren:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% \n  mutate(ist_schoen = if_else(schoenheit > 1, TRUE, FALSE),\n         ist_schlau = if_else(schlauheit > 1, TRUE, FALSE),\n         ist_schoen_schlau = if_else(ist_schoen & ist_schlau, TRUE, FALSE)) %>% \n  ggplot() +\n  aes(x = schoenheit, y = schlauheit, color = ist_schoen_schlau, alpha = .1) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-5-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- probability\n- simulation\n- normal-distribution\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}