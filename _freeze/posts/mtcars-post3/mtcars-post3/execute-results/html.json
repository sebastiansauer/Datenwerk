{
  "hash": "87767d7053bfb29ae34e6f2b00e95ee0",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: schoice\nexsolution: 8\nexname: mtcars-post3\ncategories:\n- bayes\n- regression\n- post\n- exam-22\n- qm2\n- qm2-pruefung2023\n- mtcars\ndate: '2023-01-11'\nslug: mtcars-post3\ntitle: mtcars-post3\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\n\nIm Datensatz `mtcars`: Wie groß ist die Wahrscheinlichkeit, dass der  Effekt der UV `vs`  auf die AV `mpg` positiv ist?\nBerechnen Sie das dazu passende Modell mit Methoden der Bayes-Statistik.\n\n\n[Hinweise](https://start-bayes.netlify.app/pruefung#bearbeitungshinweise)\n\n\nWählen Sie die am besten passende Option:\n\nAnswerlist\n----------\n\n* .42\n* .73\n* .23\n* 1\n* 0\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nSetup:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mtcars)\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(easystats) \n```\n:::\n\n\n\n\n\n\nModell berechnen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- stan_glm(mpg ~ vs, data = mtcars,\n               seed = 42,\n               refresh = 0)\n```\n:::\n\n\n\n\n\nDie Statistik `pd` gibt uns den gesuchten Wert, die \"Effektwahrscheinlichkeit\":\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npost_m1_vs <- parameters(m1)\npost_m1_vs\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter   |    Median|   CI|    CI_low|  CI_high| pd|     Rhat|      ESS|Prior_Distribution | Prior_Location| Prior_Scale|\n|:-----------|---------:|----:|---------:|--------:|--:|--------:|--------:|:------------------|--------------:|-----------:|\n|(Intercept) | 16.630748| 0.95| 14.470104| 18.88016|  1| 0.999871| 3893.829|normal             |       20.09062|    15.06737|\n|vs          |  7.912506| 0.95|  4.603783| 11.26223|  1| 1.000498| 3797.040|normal             |        0.00000|    29.89462|\n\n</div>\n:::\n:::\n\n\n\nWeitere Information zu `pd` findet sich z.B. [hier](https://easystats.github.io/bayestestR/reference/p_direction.html).\n\nWir könnten auch von Hand die Postverteilungs-Stichproben filtern und dann die\nAnzahl der Stichproben zählen, die diese Bedingung (vs>0) erfüllt:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 %>% \n  as_tibble() %>% \n  count(vs > 0)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|vs > 0 |    n|\n|:------|----:|\n|TRUE   | 4000|\n\n</div>\n:::\n:::\n\n\n\nDas sind alle (4000 von 4000), also 100%.\n\n\nDie Antwort für lautet also 1.\n\n\n\nAnswerlist\n----------\n\n* Falsch\n* Falsch\n* Falsch\n* Wahr\n* Falsch\n\n\n\n\n\n\n---\n\nCategories: \n\n- bayes\n- regression\n- post\n- exam-22\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}