{
  "hash": "d49ded42e8ad05c938bbb6bf2e235d95",
  "result": {
    "markdown": "---\nexname: ds-quiz2\nextype: mchoice\nexsolution: 37385\nexshuffle: yes\ncategories:\n- ds1\n- tidymodels\n- statlearning\n- mchoice\ndate: '2023-05-17'\nslug: ds-quiz2\ntitle: ds-quiz2\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nIm Folgenden sind mehrere Aussagen zum Thema maschinelles Lernen dargestellt.\nWählen Sie alle korrekten Aussagen aus!\n\nHinweise:\n\n- Alle Aussagen sind entweder richtig oder falsch, aber nicht beides.\n- Beziehen Sie sich im Zweifel auf den Stoff wie im Unterricht dargestellt.\n\n\n\nAnswerlist\n----------\n\n* Je größer der Wert von `mtry` in einem Random-Forest-Modell, desto besser die Modellgüte in der Regel.\n* Random-Forest-Modelle und Baginng-Modelle basieren auf einem Bootstrapping-Verfahren.\n* Beim kNN-Modell ist ein Distanzmaß $d$ die euklidische Distanz, die sich im 2D-Fall wie folgt berechnet: $d = \\sqrt{a^2 + b^2}$. Dabei sind $a$ und $b$ die Distanz zwischen zwei Punkten $x$ und $y$ in den Dimensionen $A$ und $B$.\n* Beim Random-Forest-Modell nennt man den Teil der Train-Stichprobe, der nicht in die Berechnung des jeweiligen Baumes einfließt, die \"OOB-Stichprobe\".\n* Overfitting tritt bei linearen Modellen nicht auf.\n* Berechnet man die Vorhersagegüte eines Modells in mehreren Stichproben, so kann man die Vorhersagegüte für ein Test-Sample präziser bestimmen.\n* Bei baumbasierten Klassifikationsmodellen ist es dazu Ziel, die Homogenität (hinsichtlich der AV) in jedem Endknoten (\"Blatt\") zu maximieren.\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nAnswerlist\n----------\n\n\n* Falsch. Die obige Behauptung stimmt oft nicht.\n* Richtig.\n* Richtig.\n* Richtig.\n* Falsch. Zwar tritt Overfitting bei (einfachen) linearen Modellen oft weniger auf, aber gerade bei Verwendung von Polynomen ist die Gefahr des Overfitting hoch.\n* Richtig.\n* Richtig\n\n\n\n\n---\n\nCategories: \n\n- ds1\n- tidymodels\n- statlearning\n- mchoice\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}