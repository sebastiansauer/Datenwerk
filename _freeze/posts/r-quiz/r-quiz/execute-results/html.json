{
  "hash": "7bc965efb54555b00809a193f880a4e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: 2024-03-11\ndraft: FALSE  \ntitle: r-quiz \n\nexecute: \n  eval: true \n  \nhighlight-style: arrow \ncache: true\n\n\nnumber-sections: true\n\nextype: string\nexsolution: \"\"\nexshuffle: no\ncategories:\n- R  # ENTER CATEGORIES HERE\n- en\n- quiz\n\n---\n\n\n\n\n\n\n## Define a variable\n\n:::{.panel-tabset}\n\n## Exercise\n\nDefine in R the variable `age` and assign the value `42`.\n\n## Solution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage <- 42\n```\n:::\n\n\nNote that spaces here are not mandatory, but useful.\n\n:::\n\n\n## Define a variable as a string\n:::{.panel-tabset}\n\n## Exercise\n\nDefine in R the variable `name` and assign the value `me`.\n\n\n## Solution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- \"me\"\n```\n:::\n\n:::\n\n\n## Define a variable by another variable\n:::{.panel-tabset}\n\n## Exercise\n\nDefine in R the variable `name` and assign the *variable* `age`.\n\n## Solution \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- age\n```\n:::\n\n:::\n\n## Call a function\n:::{.panel-tabset}\n\n## Exercise\nAsk R what today's  `date()` is, that is, call a function.\n\n\n## Solution \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndate()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Tue Oct  8 09:38:13 2024\"\n```\n\n\n:::\n:::\n\n:::\n\n## Define a vector\n:::{.panel-tabset}\n## Exercise\nDefine in R a vector `x` with the values 1,2,3 . \n\n## Solution \n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1, 2, 3)\n```\n:::\n\n:::\n\n\n\n## Sum up vector\n:::{.panel-tabset}\n## Exercise\nDefine in R a vector `x` with the values 1,2,3 . Then sum up its values.\n\n## Solution \n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1, 2, 3)\nsum(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n:::\n\n:::\n\n## Vector wise computation\n:::{.panel-tabset}\n## Exercise\nSquare each value in the vector `x`.\n\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 4 9\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## Vector wise computation 2\n:::{.panel-tabset}\n\n## Exercise\n\nSquare each value in the vector `x` and sum up the values.\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(x^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## Compute the variance\n:::{.panel-tabset}\n\n\n## Exercise\n\nCompute the variance of `x` using basic arithmetic.\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n x <- c(1, 2, 3)\n\nsum((x - mean(x))^2) / (length(x)-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\n # compare: \nvar(x) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n:::\n\n## Work with NA\n:::{.panel-tabset}\n\n\n## Exercise\n\nDefine the vector `y` with the values 1,2,NA. Compute the mean. Explain the results.\n\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- c(1, 2, NA)\nmean(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n`NA` (not available, ie., missing data) is contagious in R: If there's a missing element, R will assume that something has gone wrong and will raise a red flag, i.e, give you a NA back.\n:::\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}