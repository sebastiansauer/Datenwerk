{
  "hash": "657efcafbf1963aa66221b4474e3a5e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: vis-penguins\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- vis\n- yacsda\n- ggquick\n- penguins\n- string\ndate: '2023-09-12'\nslug: vis-penguins\ntitle: vis-penguins\n\n---\n\n\n\n\n\n\n\n# Aufgabe\n\n\nIn dieser Fallstudie (YACSDA: Yet another Case Study on Data Analysis) untersuchen wir den Datensatz `penguins`.\n\nSie können den Datensatz so beziehen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndata(\"penguins\")\nd <- penguins \n```\n:::\n\n\n\nOder so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\")\n```\n:::\n\n\n\nEin Codebook finden Sie [hier](https://vincentarelbundock.github.io/Rdatasets/doc/palmerpenguins/penguins.html).\n\n\nDie Forschungsfrage lautet:\n\nWas ist der Einfluss der Spezies und der Schnabellänge auf das Körpergewicht?\n\n- Abhängige Variable (metrisch), `y`: Körpergewicht\n- Unabhängige Variable 1 (nominal), `x1`: Spezies\n- Unabhängige Variable 2 (metrisch), `x2`: Schnabellänge\n\n\nVisualisieren Sie dazu folgende Aspekte der Forschungsfrage!\n\n# Aufgaben\n\n1. Visualisieren Sie die Verteilung von `y` auf zwei verschiedene Arten.\n2. Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n2. Visualisieren Sie die Verteilung von `x1` und `x2`.\n3. Visualisieren Sie die Verteilung von `y` bedingt auf `x1`.\n4. Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n5. Visualisieren Sie den Zusammenhang von `y` und `x2`.\n6. Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird.\n6. Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu.\n7. Fügen Sie dem Diagramm zum Zusammenhang von `y` und `x2` eine Regressionsgerade hinzu.\n8. Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade.\n9. Gruppieren Sie das letzte Diagramm nach `x1`.\n10. Dichotomisieren Sie `y` und zählen Sie die Häufigkeiten. *Achtung*: Dichotomisieren wird von einigen Statistikern mit Exkommunikation bestraft. Proceed at your own risk.\n11. Gruppieren Sie das letzte Diagramm nach den Stufen von `x1`.\n12. Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden.\n\n\n\n\n\n\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n# Pakete starten\n\n\n::: {.cell}\n\n:::\n\n\n\n# Los geht's \n\nZur einfacheren Verarbeitung nenne ich die Variablen um:\n\n## Umbenennen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d |> \n  rename(y = body_mass_g, x1 = species, x2 = bill_length_mm)\n```\n:::\n\n\n\n\n## Visualisieren Sie die Verteilung von `y` auf zwei verschiedene Arten.\n\nDas R-Paket `ggpubr` erstellt schöne Diagramme (basierend auf `ggplot`) auf einfache Art.\nNehmen wir ein Dichtediagramm; die Variable `y` soll auf der X-Achse stehen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdensity(d, x = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-5-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\nBeachten Sie, dass die Variable in Anführungsstriche gesetzt werden muss: `x = \"y\"`.\n\nOder ein Histogramm:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-6-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu.\n\nUm Diagramme mit Statistiken anzureichen, bietet sich das Paket `ggstatsplot` an:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(d, x = y)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-7-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\nBeachten Sie, dass die Variable *nicht* in Anführungsstriche gesetzt werden darf: `x = y`.\n\n\n## Visualisieren Sie die Verteilung von `x1` und `x2`.\n\n### `x1`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_counted <- \n  d |> \n  count(x1) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(data = d_counted, y = \"n\", x = \"x1\", label = TRUE)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-9-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n### `x2`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistostats(d, x = x2)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-10-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n## Visualisieren Sie die Verteilung von `y` bedingt auf `x1`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\", fill = \"x1\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-11-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nOder so:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngghistogram(d, x = \"y\", facet.by = \"x1\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-12-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Fügen Sie relevante Kennzahlen zur letzten Visualisierung hinzu\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_gghistostats(d, x = y, grouping.var = x1)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-13-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Visualisieren Sie den Zusammenhang von `y` und `x2`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d, x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-14-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Verbessern Sie das letzte Diagramm, so dass es übersichtlicher wird\n\nEs gibt mehrere Wege, das Diagramm übersichtlicher zu machen.\nLogarithmieren ist ein Weg.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  mutate(x2 = log(x2)) |> \n  ggscatter(x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-15-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nSynonym könnten wir schreiben:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_logged <- \n  d |> \n  mutate(x2 = log(x2))\n  \n\nggscatter(d_logged, x = \"x2\", y = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-16-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Fügen Sie dem letzten Diagramm relevante Kennzahlen hinzu\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(d_logged, x = x2, y = y)\n```\n:::\n\n\n\n\n## Fügen Sie dem Diagramm zum Zusammenhang von `y` und `x2` eine Regressionsgerade hinzu\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"reg.line\", \n             add.params = list(color = \"blue\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-17-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Ersetzen Sie die Regressionsgerade durch eine LOESS-Gerade\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"loess\", \n             add.params = list(color = \"blue\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-18-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Gruppieren Sie das letzte Diagramm nach `x1`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatter(d_logged, x = \"x2\", y = \"y\", add = \"loess\", \n             add.params = list(color = \"blue\"),\n          facet.by = \"x1\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-19-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n##  Dichotomisieren Sie `y` und zählen Sie die Häufigkeiten\n\n\nNehmen wir einen Mediansplit, um zu dichotomisieren.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d |> \n  mutate(y_dicho = ifelse(y > median(y), \"high\", \"low\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  count(y_dicho) |> \n  ggbarplot(x = \"y_dicho\", y = \"n\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-21-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nGleich viele! Das sollte nicht verwundern.\n\n\n## Gruppieren Sie das letzte Diagramm nach den Stufen von `x1`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count <- \nd |> \n  count(y_dicho, x1) \n\nd_count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  y_dicho x1            n\n  <lgl>   <fct>     <int>\n1 NA      Adelie      152\n2 NA      Chinstrap    68\n3 NA      Gentoo      124\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(d_count, x = \"y_dicho\", y = \"n\", facet.by = \"x1\", label = TRUE)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-23-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\n## Variieren Sie das letzte Diagramm so, dass Anteile (relative Häufigkeiten) statt absoluter Häufigkeiten gezeigt werden\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count <-\n  d_count |> \n  mutate(prop = n / sum(n)) |> \n  mutate(prop = round(prop, 2))\n\nd_count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  y_dicho x1            n  prop\n  <lgl>   <fct>     <int> <dbl>\n1 NA      Adelie      152  0.44\n2 NA      Chinstrap    68  0.2 \n3 NA      Gentoo      124  0.36\n```\n\n\n:::\n:::\n\n\nCheck:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_count |> \n  summarise(sum(prop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `sum(prop)`\n        <dbl>\n1           1\n```\n\n\n:::\n:::\n\n\nGut! Die Anteile summieren sich zu ca. 1 (100 Prozent).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarplot(d_count, x = \"y_dicho\", y = \"prop\", facet.by = \"x1\", label = TRUE)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-26-1.png){fig-pos='H' width=100%}\n:::\n:::\n\n\n\nMan beachten, dass sich die Anteile auf das \"Gesamt-N\" beziehen.\n\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- vis\n- yacsda\n- ggquick\n- penguins\n- string\n\n",
    "supporting": [
      "vis-penguins_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}