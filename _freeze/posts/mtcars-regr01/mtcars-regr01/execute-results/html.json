{
  "hash": "7b8e994419a747b860dc985f33f435f3",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: string\nexsolution: NA\nexname: mtcars-regr01\nexpoints: 1\ncategories:\n- lm\n- mtcars\n- association \n- regression\n- string\ndate: '2023-05-08'\nslug: mtcars-regr01\ntitle: mtcars-regr01\n\n---\n\n\n\n\n\n\n\n\n# Aufgabe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"mtcars\")\n```\n:::\n\n\n\nBetrachten Sie folgendes Modell (Datensatz `mtcars`):\n\n`mpg ~ disp`\n\nAnders gesagt: Wie gut kann man den Spritverbrauch vorhersagen auf Basis des Hubraums eines Autos?\n\n1. Berechnen Sie die Modellkoeffizienten! Tipp: `lm()`\n2. Berechnen Sie im Anschluss die Vorhersagen dieses Modells. Tipp: `predict()` mit `mutate()`\n3. Visualisieren Sie dann das Modell Tipp: `ggplot()` und `geom_smooth()` oder mittels einer anderer Methode.\n4. Berechnen Sie die Residuen: `e = echtem Y-Wert und vorhergesagtem Y-Wert`. Tipp: `mutate()`.\n5. Berechnen Sie die Korrelation zwischen Spritverbrauch und Hubraum! Tipp: `summarise() mit `cor()`.\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n# Vorbereitung\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ndata(mtcars)\n```\n:::\n\n\n\n# Ad 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(mpg ~ disp, data = mtcars)\nlm1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = mpg ~ disp, data = mtcars)\n\nCoefficients:\n(Intercept)         disp  \n   29.59985     -0.04122  \n```\n\n\n:::\n:::\n\n\n\n# Ad 2\n\nNicht einfach nur predicten:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Mazda RX4       Mazda RX4 Wag          Datsun 710      Hornet 4 Drive \n           23.00544            23.00544            25.14862            18.96635 \n  Hornet Sportabout             Valiant          Duster 360           Merc 240D \n           14.76241            20.32645            14.76241            23.55360 \n           Merc 230            Merc 280           Merc 280C          Merc 450SE \n           23.79677            22.69220            22.69220            18.23272 \n         Merc 450SL         Merc 450SLC  Cadillac Fleetwood Lincoln Continental \n           18.23272            18.23272            10.14632            10.64090 \n  Chrysler Imperial            Fiat 128         Honda Civic      Toyota Corolla \n           11.46520            26.35622            26.47987            26.66946 \n      Toyota Corona    Dodge Challenger         AMC Javelin          Camaro Z28 \n           24.64992            16.49345            17.07046            15.17456 \n   Pontiac Firebird           Fiat X1-9       Porsche 914-2        Lotus Europa \n           13.11381            26.34386            24.64168            25.68030 \n     Ford Pantera L        Ferrari Dino       Maserati Bora          Volvo 142E \n           15.13335            23.62366            17.19410            24.61283 \n```\n\n\n:::\n:::\n\n\n*Sondern* die Predictions als neue Spalte in `mtcars` anlegen. Viel sauberer!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars2  <- \n  mtcars %>% \n  mutate(preds_lm1 = predict(lm1))\n```\n:::\n\n\n\n\n\n# Ad 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mtcars2) +\n  aes(y = mpg, x = disp) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mtcars-regr01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nAndere Visualisierung:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars2 %>% \n  ggplot(aes(x = disp, y = preds_lm1)) +\n  geom_point(size = 2, alpha = .8, color = \"pink\") +\n  geom_line() +\n  labs(y = \"Vorhergesagte MPG-Werte\",\n       title = \"Vorhersage-Modell lm1\")\n```\n\n::: {.cell-output-display}\n![](mtcars-regr01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nOder so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(easystats)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n# Attaching packages: easystats 0.7.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✖ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.7   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.8    ✔ see         0.8.1 \n\nRestart the R-Session and update packages with `easystats::easystats_update()`.\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_expectation(lm1) %>% plot()\n```\n\n::: {.cell-output-display}\n![](mtcars-regr01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Ad 4\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars2 <- \n  mtcars2 %>% \n  mutate(e = abs(mpg - preds_lm1))  # abs steht für \"Absolutwert\"\n```\n:::\n\n\n\nDer \"Absolutwert\" kickt das Vorzeichen weg.\nDas machen wir, wenn wir meinen, dass das Vorzeichen egal ist.\n\n# Bonus-Aufgabe\n\nBerechnen Sie den mittleren Fehler über alle `e`!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars2 %>% \n  summarise(e_avg = mean(e))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     e_avg\n1 2.605473\n```\n\n\n:::\n:::\n\n\n\n# Ad 5\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% \n  summarise(cor_mpg_disp = cor(mpg, disp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cor_mpg_disp\n1   -0.8475514\n```\n\n\n:::\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- lm\n- mtcars\n- correlation\n- regression\n- string\n\n",
    "supporting": [
      "mtcars-regr01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}