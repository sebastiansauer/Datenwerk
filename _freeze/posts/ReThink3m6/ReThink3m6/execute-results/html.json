{
  "hash": "96ae756b494a81b2907e2d4ef4a23a8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: string\nexsolution: NA\nexname: rethink3m6\ndraft: true\nexpoints: 1\ncategories:\n- probability\n- bayes\n- post\n- string\ndate: '2023-11-08'\nslug: ReThink3m6\ntitle: ReThink3m6\n\n---\n\n\n<!-- AUFGABE NOCH UNFERTIG! -->\n\n\n\n\n\n\n\n\n\n\n\n\n*Quelle*: McElreath, R. (2020). *Statistical rethinking: A Bayesian course with examples in R and Stan* (2. Aufl.). Taylor and Francis, CRC Press.\n\n\n\n\n\n# Aufgabe\n\n\n\nAngenommen, Sie möchten den Wasseranteil sehr genau bestimmen. Konkret soll das heißen, Sie möchten das 99%-Perzentilintervall mit einer Breite von nur fünf Prozentpunkten (0.05) im Hinblick auf den Wasseranteil bestimmen. Mit anderen Worten, die Distanz von oberen und unterem Ende des Intervalls soll 0.05 betragen. \n\nWie oft müssen Sie dafür den Globus werfen?\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n## Setup\n\n::: {.cell hash='ReThink3m6_cache/html/unnamed-chunk-1_19b24d138d308ef2393bd73e509ba0ee'}\n\n```{.r .cell-code}\nlibrary(rethinking)\nlibrary(tidyverse)\n```\n:::\n\n\n::: {.cell hash='ReThink3m6_cache/html/unnamed-chunk-2_66f34af12bac7743798793adaf7c7844'}\n\n```{.r .cell-code}\nsingle_sim <- function(tosses, prior_type = c(\"uniform\", \"step\")) {\n  prior_type <- match.arg(prior_type)\n  obs <- rbinom(1, size = tosses, prob = 0.7)\n  \n  p_grid <- seq(from = 0, to = 1, length.out = 1000)\n  prior <- rep(1, 1000)\n  if (prior_type == \"step\") prior[1:500] <- 0\n  \n  likelihood <- dbinom(obs, size = tosses, prob = p_grid)\n  posterior <- likelihood * prior\n  posterior <- post / sum(posterior)\n  \n  samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)\n  interval <- PI(samples, prob = 0.99)\n  width <- interval[2] - interval[1]\n}\n\n\nsingle_cond <- function(tosses, prior_type, reps = 100) {\n  tibble(tosses = tosses,\n         prior_type = prior_type,\n         width = map_dbl(seq_len(reps), ~single_sim(tosses = tosses,\n                                                    prior_type = prior_type)))\n}\n\nsimulation <- crossing(tosses = seq(1000, 5000, by = 100),\n                       prior_type = c(\"uniform\", \"step\")) %>%\n  pmap_dfr(single_cond, reps = 100) %>%\n  group_by(tosses, prior_type) %>%\n  summarize(avg_width = mean(width), .groups = \"drop\") %>%\n  mutate(prior_type = case_when(prior_type == \"uniform\" ~ \"Uniform Prior\",\n                                prior_type == \"step\" ~ \"Step Prior\"),\n         prior_type = factor(prior_type, levels = c(\"Uniform Prior\",\n                                                    \"Step Prior\")))\n\nggplot(simulation, aes(x = tosses, y = avg_width)) +\n  facet_wrap(~prior_type, nrow = 1) +\n  geom_point() +\n  geom_line() +\n  scale_x_comma() +\n  labs(x = \"Tosses\", y = \"Average Interval Width\") +\n  theme(panel.spacing.x = unit(2, \"lines\"))\n```\n:::\n\n\n\n\n[Quelle](https://sr2-solutions.wjakethompson.com/bayesian-inference.html#chapter-3)\n\n\n\n\n---\n\nCategories: \n\n- probability\n- bayes\n- post\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}