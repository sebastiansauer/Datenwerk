{
  "hash": "99f99c07807702f1895a2aa410fe1ac5",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-vorlage3\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- tidymodels\n- statlearning\n- template\n- string\ndate: '2023-11-15'\nslug: tidymodels-vorlage3\ntitle: tidymodels-vorlage3\n\n---\n\n\n\n\n\n# Aufgabe\n\n<!-- Schreiben Sie eine Vorlage für eine prädiktive Analyse mit Tidymodels! -->\n\nSchreiben Sie eine prototypische Analyse für ein Vorhersagemodell, das sich als Vorlage für Analysen dieser Art eignet!\n\nVerzichten Sie auf Resampling und Tuning.\n\nHinweise:\n\n- Berechnen Sie ein Modell\n- Tunen Sie keinen Parameter des Modells\n- Verwenden Sie keine Kreuzvalidierung.\n- Verwenden Sie Standardwerte, wo nicht anders angegeben.\n- Fixieren Sie Zufallszahlen auf den Startwert 42.\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Setup:\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ broom        1.0.5     ✔ recipes      1.0.8\n✔ dials        1.2.0     ✔ rsample      1.2.0\n✔ dplyr        1.1.3     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tictoc)  # Zeitmessung\nlibrary(easystats)   # NAs zählen\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n# Attaching packages: easystats 0.6.0 (red = needs update)\n✔ bayestestR  0.13.1   ✔ correlation 0.8.4 \n✔ datawizard  0.9.0    ✔ effectsize  0.8.6 \n✔ insight     0.19.6   ✔ modelbased  0.8.6 \n✔ performance 0.10.8   ✔ parameters  0.21.3\n✔ report      0.5.7    ✖ see         0.8.0 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Data:\nd_path <- \"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\"\nd <- read_csv(d_path) |> na.omit()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 344 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): rownames, bill_length_mm, bill_depth_mm, flipper_length_mm, body_ma...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(42)\nd_split <- initial_split(d)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n\n\n# model:\nmod1 <-\n  rand_forest(mode = \"regression\")\n\n\n# cv:\nset.seed(42)\nrsmpl <- vfold_cv(d_train)\n\n\n# recipe:\nrec1 <- recipe(body_mass_g ~  ., data = d_train) |> \n  step_unknown(all_nominal_predictors(), new_level = \"NA\") |> \n  #step_naomit(all_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_zv(all_predictors()) |> \n  step_normalize(all_predictors()) \n\n\n\n# workflow:\nwf1 <-\n  workflow() %>% \n  add_model(mod1) %>% \n  add_recipe(rec1)\n\n\n# tuning:\ntic()\nwf1_fit <-\n  wf1 %>% \n  last_fit(split = d_split)\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n0.573 sec elapsed\n```\n\n\n:::\n\n```{.r .cell-code}\ncollect_metrics(wf1_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard     288.    Preprocessor1_Model1\n2 rsq     standard       0.864 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\n\nAls Check: Das gepreppte/bebackene Rezept:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrec1_prepped <- prep(rec1)\nd_train_baked <- bake(rec1_prepped, new_data = NULL)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd_train_baked |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  rownames bill_length_mm bill_depth_mm flipper_length_mm    year body_mass_g\n     <dbl>          <dbl>         <dbl>             <dbl>   <dbl>       <dbl>\n1   -1.20          -1.72          0.488           -1.02   -0.0940        2900\n2    1.59           1.48          0.845           -0.314   1.14          3450\n3   -0.152          0.251        -1.30             0.675  -1.33          4800\n4   -0.947         -0.345         0.998           -0.456  -0.0940        4000\n5    0.623          1.08         -0.633            1.59    1.14          5350\n6   -0.222         -0.453         0.692           -0.0318  1.14          4000\n# ℹ 5 more variables: species_Chinstrap <dbl>, species_Gentoo <dbl>,\n#   island_Dream <dbl>, island_Torgersen <dbl>, sex_male <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndescribe_distribution(d_train_baked)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVariable          |      Mean |     SD |     IQR |              Range | Skewness | Kurtosis |   n | n_Missing\n-------------------------------------------------------------------------------------------------------------\nrownames          | -8.27e-17 |   1.00 |    1.65 |      [-1.74, 1.71] |     0.01 |    -1.16 | 249 |         0\nbill_length_mm    | -1.85e-16 |   1.00 |    1.77 |      [-2.15, 2.53] |    -0.01 |    -1.04 | 249 |         0\nbill_depth_mm     | -5.65e-16 |   1.00 |    1.55 |      [-1.96, 2.22] |    -0.08 |    -0.91 | 249 |         0\nflipper_length_mm | -3.91e-16 |   1.00 |    1.70 |      [-2.08, 2.09] |     0.30 |    -1.05 | 249 |         0\nyear              | -4.28e-14 |   1.00 |    2.46 |      [-1.33, 1.14] |    -0.14 |    -1.47 | 249 |         0\nbody_mass_g       |   4215.86 | 816.47 | 1300.00 | [2700.00, 6300.00] |     0.42 |    -0.86 | 249 |         0\nspecies_Chinstrap | -1.43e-17 |   1.00 |    0.00 |      [-0.49, 2.02] |     1.53 |     0.36 | 249 |         0\nspecies_Gentoo    |  8.17e-18 |   1.00 |    2.07 |      [-0.76, 1.32] |     0.56 |    -1.70 | 249 |         0\nisland_Dream      | -6.29e-17 |   1.00 |    2.08 |      [-0.75, 1.33] |     0.58 |    -1.68 | 249 |         0\nisland_Torgersen  |  5.66e-17 |   1.00 |    0.00 |      [-0.40, 2.47] |     2.08 |     2.35 | 249 |         0\nsex_male          |  3.75e-17 |   1.00 |    2.00 |      [-1.02, 0.98] |    -0.04 |    -2.01 | 249 |         0\n```\n\n\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- tidymodels\n- statlearning\n- template\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}