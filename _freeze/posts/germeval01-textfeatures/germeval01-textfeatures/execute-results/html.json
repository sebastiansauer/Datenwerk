{
  "hash": "1cef74eeef68d56fd633119b502c2e43",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: germeval01-textfeatures\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- 2023\n- textmining\n- datawrangling\n- germeval\n- string\ndate: '2023-11-16'\nslug: germeval01-textfeatures\ntitle: germeval01-textfeatures\n\n---\n\n\n\n\n\n\n# Aufgabe\n\nExtrahieren Sie typisches Text-Features aus einem Text. \n\nNutzen Sie das Paket [`textfeatures`](https://github.com/cran/textfeatures/tree/master).\n\nNutzen Sie die [GermEval-2018-Daten](https://heidata.uni-heidelberg.de/dataset.xhtml?persistentId=doi:10.11588/data/0B5VML).\n\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\n\nDie Daten sind auch über das R-Paket [PradaData](https://github.com/sebastiansauer/pradadata/tree/master/data-raw/GermEval-2018-Data-master) zu beziehen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(easystats)\ndata(\"germeval_train\", package = \"pradadata\")\n```\n:::\n\n\nNutzen Sie diesen Text-Datensatz, bevor Sie den größeren `germeval`-Datensatz verwenden:\n\n\n# Daten\n\nTeststring:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext <- c(\"Abbau, Abbruch ist jetzt\", \n          \"Test   🧑‍🎓 😄 heute!!\", \n          \"Abbruch #morgen #perfekt\", \n          \"Abmachung... LORE IPSUM\", \n          \"boese ja\", \"böse nein\", \n          \"hallo ?! www.google.de\", \n          \"gut schlecht I am you are he she it is\")\n\nn_emo <- c(2, 0, 2, 1, 1, 1, 0, 2)\n\ntest_text <-\n  data.frame(id = 1:length(text),\n         text = text,\n         n_emo = n_emo)\n\ntest_text\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id                     text n_emo\n1  1 Abbau, Abbruch ist jetzt     2\n2  2   Test   🧑‍🎓 😄 heute!!     0\n3  3 Abbruch #morgen #perfekt     2\n [ reached 'max' / getOption(\"max.print\") -- omitted 5 rows ]\n```\n\n\n:::\n:::\n\n\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nDas Paket `textfeatures` ist aktuelle nicht auf CRAN, aber über Github zu bekommen (oder im CRAN-Archiv).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tictoc)\nlibrary(textfeatures)\n```\n:::\n\n\n\n# Test 1\n\nHier ein [Test vom Autor des Pakets](https://textfeatures.mikewk.com/):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(\n  \"this is A!\\t sEntence https://github.com about #rstats @github\",\n  \"and another sentence here\", \"THe following list:\\n- one\\n- two\\n- three\\nOkay!?!\"\n)\n\n## get text features\ntextfeatures::textfeatures(x, verbose = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 36\n  n_urls n_uq_urls n_hashtags n_uq_hashtags n_mentions n_uq_mentions n_chars\n   <dbl>     <dbl>      <dbl>         <dbl>      <dbl>         <dbl>   <dbl>\n1  1.15      1.15       1.15          1.15       1.15          1.15    0.243\n2 -0.577    -0.577     -0.577        -0.577     -0.577        -0.577  -1.10 \n3 -0.577    -0.577     -0.577        -0.577     -0.577        -0.577   0.856\n# ℹ 29 more variables: n_uq_chars <dbl>, n_commas <dbl>, n_digits <dbl>,\n#   n_exclaims <dbl>, n_extraspaces <dbl>, n_lowers <dbl>, n_lowersp <dbl>,\n#   n_periods <dbl>, n_words <dbl>, n_uq_words <dbl>, n_caps <dbl>,\n#   n_nonasciis <dbl>, n_puncts <dbl>, n_capsp <dbl>, n_charsperword <dbl>,\n#   sent_afinn <dbl>, sent_bing <dbl>, sent_syuzhet <dbl>, sent_vader <dbl>,\n#   n_polite <dbl>, n_first_person <dbl>, n_first_personp <dbl>,\n#   n_second_person <dbl>, n_second_personp <dbl>, n_third_person <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n# Test 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntextfeatures::textfeatures(test_text$text,\n                           sentiment = FALSE,\n                           word_dims = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\u001b[32m↪\u001b[39m \u001b[38;5;244mCounting features in text...\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mParts of speech...\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mWord dimensions started\u001b[39m\n\u001b[32m↪\u001b[39m \u001b[38;5;244mNormalizing data\u001b[39m\n\u001b[32m✔\u001b[39m Job's done!\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 29\n  n_urls n_uq_urls n_hashtags n_uq_hashtags n_mentions n_uq_mentions n_chars\n   <dbl>     <dbl>      <dbl>         <dbl>      <dbl>         <dbl>   <dbl>\n1      0         0     -0.354        -0.354          0             0  0.532 \n2      0         0     -0.354        -0.354          0             0  0.0800\n3      0         0      2.47          2.47           0             0  0.589 \n4      0         0     -0.354        -0.354          0             0  0.532 \n5      0         0     -0.354        -0.354          0             0 -1.86  \n6      0         0     -0.354        -0.354          0             0 -1.25  \n7      0         0     -0.354        -0.354          0             0  0.471 \n8      0         0     -0.354        -0.354          0             0  0.910 \n# ℹ 22 more variables: n_uq_chars <dbl>, n_commas <dbl>, n_digits <dbl>,\n#   n_exclaims <dbl>, n_extraspaces <dbl>, n_lowers <dbl>, n_lowersp <dbl>,\n#   n_periods <dbl>, n_words <dbl>, n_uq_words <dbl>, n_caps <dbl>,\n#   n_nonasciis <dbl>, n_puncts <dbl>, n_capsp <dbl>, n_charsperword <dbl>,\n#   n_first_person <dbl>, n_first_personp <dbl>, n_second_person <dbl>,\n#   n_second_personp <dbl>, n_third_person <dbl>, n_tobe <dbl>,\n#   n_prepositions <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- 2023\n- textmining\n- datawrangling\n- germeval\n- string\n\n",
    "supporting": [
      "germeval01-textfeatures_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}