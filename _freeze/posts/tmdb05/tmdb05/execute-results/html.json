{
  "hash": "ba35ccc4757263d8e7bcc30d799be961",
  "result": {
    "markdown": "---\nexname: tmdb05\nextype: num\nexsolution: r y\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- ds1\n- tidymodels\n- statlearning\n- tmdb\n- random-forest\n- num\ndate: '2023-05-17'\nslug: tmdb05\ntitle: tmdb05\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nMelden Sie sich an für die Kaggle Competition [TMDB Box Office Prediction -\nCan you predict a movie's worldwide box office revenue?](https://www.kaggle.com/competitions/tmdb-box-office-prediction/overview).\n\nSie benötigen dazu ein Konto; es ist auch möglich, sich mit seinem Google-Konto anzumelden.\n\nBei diesem Prognosewettbewerb geht es darum, vorherzusagen,\nwieviel Umsatz wohl einige Filme machen werden. \nAls Prädiktoren stehen einige Infos wie Budget, Genre, Titel etc. zur Verfügung.\nEine klassische \"predictive Competition\" also :-)\nAllerdings können immer ein paar Schwierigkeiten auftreten ;-)\n\n\n*Aufgabe*\n\nErstellen Sie ein *Boosting-Modell* mit Tidymodels!\n\n\n*Hinweise*\n\n<!-- - Nehmen Sie folgende Prädiktoren auf: `budget` und `popularity` -->\n- Für den Start empfehle ich, etwaige Vorverarbeitung erstmal klein zu halten. Nach dem Motto: Erstmal das Modell zum Laufen kriegen, dann erst verbessern. \n- Tunen Sie die typischen Parameter. \n- Reichen Sie das Modell bei Kaggle ein und berichten Sie Ihren Score. \n- Im Übrigen sind Sie frei in Ihrem Vorgehen.\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n# Pakete starten\n\n\n::: {.cell}\n\n:::\n\n\n\n\n# Daten importieren\n\n\n::: {.cell}\n\n:::\n\n\nWerfen wir einen Blick in die Daten:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3,000\nColumns: 23\n$ id                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…\n$ belongs_to_collection <chr> \"[{'id': 313576, 'name': 'Hot Tub Time Machine C…\n$ budget                <dbl> 1.40e+07, 4.00e+07, 3.30e+06, 1.20e+06, 0.00e+00…\n$ genres                <chr> \"[{'id': 35, 'name': 'Comedy'}]\", \"[{'id': 35, '…\n$ homepage              <chr> NA, NA, \"http://sonyclassics.com/whiplash/\", \"ht…\n$ imdb_id               <chr> \"tt2637294\", \"tt0368933\", \"tt2582802\", \"tt182148…\n$ original_language     <chr> \"en\", \"en\", \"en\", \"hi\", \"ko\", \"en\", \"en\", \"en\", …\n$ original_title        <chr> \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ overview              <chr> \"When Lou, who has become the \\\"father of the In…\n$ popularity            <dbl> 6.575393, 8.248895, 64.299990, 3.174936, 1.14807…\n$ poster_path           <chr> \"/tQtWuwvMf0hCc2QR2tkolwl7c3c.jpg\", \"/w9Z7A0GHEh…\n$ production_companies  <chr> \"[{'name': 'Paramount Pictures', 'id': 4}, {'nam…\n$ production_countries  <chr> \"[{'iso_3166_1': 'US', 'name': 'United States of…\n$ release_date          <chr> \"2/20/15\", \"8/6/04\", \"10/10/14\", \"3/9/12\", \"2/5/…\n$ runtime               <dbl> 93, 113, 105, 122, 118, 83, 92, 84, 100, 91, 119…\n$ spoken_languages      <chr> \"[{'iso_639_1': 'en', 'name': 'English'}]\", \"[{'…\n$ status                <chr> \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               <chr> \"The Laws of Space and Time are About to be Viol…\n$ title                 <chr> \"Hot Tub Time Machine 2\", \"The Princess Diaries …\n$ Keywords              <chr> \"[{'id': 4379, 'name': 'time travel'}, {'id': 96…\n$ cast                  <chr> \"[{'cast_id': 4, 'character': 'Lou', 'credit_id'…\n$ crew                  <chr> \"[{'credit_id': '59ac067c92514107af02c8c8', 'dep…\n$ revenue               <dbl> 12314651, 95149435, 13092000, 16000000, 3923970,…\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,398\nColumns: 22\n$ id                    <dbl> 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, …\n$ belongs_to_collection <chr> \"[{'id': 34055, 'name': 'Pokémon Collection', 'p…\n$ budget                <dbl> 0.00e+00, 8.80e+04, 0.00e+00, 6.80e+06, 2.00e+06…\n$ genres                <chr> \"[{'id': 12, 'name': 'Adventure'}, {'id': 16, 'n…\n$ homepage              <chr> \"http://www.pokemon.com/us/movies/movie-pokemon-…\n$ imdb_id               <chr> \"tt1226251\", \"tt0051380\", \"tt0118556\", \"tt125595…\n$ original_language     <chr> \"ja\", \"en\", \"en\", \"fr\", \"en\", \"en\", \"de\", \"en\", …\n$ original_title        <chr> \"ディアルガVSパルキアVSダークライ\", \"Attack of t…\n$ overview              <chr> \"Ash and friends (this time accompanied by newco…\n$ popularity            <dbl> 3.851534, 3.559789, 8.085194, 8.596012, 3.217680…\n$ poster_path           <chr> \"/tnftmLMemPLduW6MRyZE0ZUD19z.jpg\", \"/9MgBNBqlH1…\n$ production_companies  <chr> NA, \"[{'name': 'Woolner Brothers Pictures Inc.',…\n$ production_countries  <chr> \"[{'iso_3166_1': 'JP', 'name': 'Japan'}, {'iso_3…\n$ release_date          <chr> \"7/14/07\", \"5/19/58\", \"5/23/97\", \"9/4/10\", \"2/11…\n$ runtime               <dbl> 90, 65, 100, 130, 92, 121, 119, 77, 120, 92, 88,…\n$ spoken_languages      <chr> \"[{'iso_639_1': 'en', 'name': 'English'}, {'iso_…\n$ status                <chr> \"Released\", \"Released\", \"Released\", \"Released\", …\n$ tagline               <chr> \"Somewhere Between Time & Space... A Legend Is B…\n$ title                 <chr> \"Pokémon: The Rise of Darkrai\", \"Attack of the 5…\n$ Keywords              <chr> \"[{'id': 11451, 'name': 'pok√©mon'}, {'id': 1155…\n$ cast                  <chr> \"[{'cast_id': 3, 'character': 'Tonio', 'credit_i…\n$ crew                  <chr> \"[{'credit_id': '52fe44e7c3a368484e03d683', 'dep…\n```\n:::\n:::\n\n\n\n# CV\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Rezept 1\n\nBegrenzen wir uns der Einfachheit halber auf folgende Prädiktoren, zumindest fürs Erste:\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nBoosting braucht nicht unbedingt skalierte Prädiktoren (sd=1),\naber es kann helfen, zu z-transformieren.\n\n\n\n## Rezept checken\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,000 × 4\n   budget popularity runtime  revenue\n    <dbl>      <dbl>   <dbl>    <dbl>\n 1 -0.230    -0.156   -0.673 12314651\n 2  0.472    -0.0177   0.233 95149435\n 3 -0.519     4.61    -0.129 13092000\n 4 -0.576    -0.437    0.640 16000000\n 5 -0.609    -0.604    0.459  3923970\n 6 -0.392    -0.638   -1.13   3261638\n 7 -0.230    -0.0972  -0.718 85446075\n 8 -0.609    -0.538   -1.08   2586511\n 9 -0.609    -0.129   -0.356 34327391\n10 -0.446    -0.313   -0.763 18750246\n# ℹ 2,990 more rows\n```\n:::\n:::\n\n\n\nViele Modelle können nicht arbeiten mit nominalen Prädiktoren oder mit fehlenden Werten.\nDaher sollte man im Rezept diese Fehler vorab abfangen.\n\nEin letzter Blick:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nVariable   |      Mean |       SD |      IQR |            Range | Skewness | Kurtosis |    n | n_Missing\n--------------------------------------------------------------------------------------------------------\nbudget     | -1.33e-18 |     1.00 |     0.78 |    [-0.61, 9.65] |     3.10 |    13.23 | 3000 |         0\npopularity | -6.08e-17 |     1.00 |     0.57 |   [-0.70, 23.62] |    14.38 |   280.10 | 3000 |         0\nruntime    |  3.63e-17 |     1.00 |     1.09 |   [-4.88, 10.42] |     1.02 |     8.19 | 2998 |         2\nrevenue    |  6.67e+07 | 1.38e+08 | 6.66e+07 | [1.00, 1.52e+09] |     4.54 |    27.78 | 3000 |         0\n```\n:::\n:::\n\n\nSieht ok aus.\n\n\n# Modell 1\n\nTipp: Mit `{usemodels}` kann man sich den Code für einen Workflow (inkl. dem typischen Kladderadatsch) schon mal ausgeben lassen. Praktisch.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# Workflow 1\n\n\n::: {.cell}\n\n:::\n\n\nTipp: Gewöhnen Sie sich ein konsistentes Schema zu Benennung Ihrer Objekte an.\nZ.B. Workflow-Objekte mit `wf1`, `wf2` etc. \nFit-Objekte mit `fit_boost1`, `fit_rf1`, etc.\nDa gibt's viele Wege, keine einzelne richtige Lösung.\n\n\n#  Modell fitten (und tunen)\n\nTipp: Wenn Sie Ihr Rezept ändern, nicht vergessen, das\nWorkflow-Objekt, `wf1` in diesem Fall, neu zu berechnen. \nVergisst man gerne mal...\n\nEine professioneller Lösung wäre ein Tool,\ndas für Sie prüft, welche Objekte Sie aktualisieren müssen,\nz.B. das [R-Paket `{targets}`](https://books.ropensci.org/targets/).\n\nSchalten wir, um Zeit zu sparen, noch mehrere Rechenkerne frei.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nWenn man auf mehreren Kernen gleichzeitig rechnet,\nbraucht man natürlich auch mehr (Arbeits-)Speicher (RAM).\nWenn Ihre Maschine wenig (freien) Arbeitsspeicher hat,\ndann kann man nicht (oder nicht sinnvoll) auf mehreren Kernen\ngleichzeitig arbeiten.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n3.254 sec elapsed\n```\n:::\n:::\n\n\nRechenzeit auf diesem Rechner: \n\nEs könnte sich lohnen, das Modellobjekt abzuspeichern,\nda die Rechenzeit doch ganz schön lang sein kann.\nABER Achtung: Sie dürfen dann nicht vergessen, das Objekt auf der Festplatte zu aktualisieren. Diese Strategie ist nicht ungefährlich: Leicht vergisst man das Aktualisieren.\n\nMit dem Parameter `grid` kann man die Anzahl der Tuningparameter-Kandidaten festlegen, vgl. [hier](https://tune.tidymodels.org/reference/tune_grid.html):\n\n*grid*\n\n>   A data frame of tuning combinations or a positive integer. The data frame should have columns for each parameter being tuned and rows for tuning parameter candidates. An integer denotes the number of candidate parameter sets to be created automatically.\n\nDer Standardwert (Default) beträgt 10.\n\nEin Blick in die Hinweise zum Fitten, ob beim Fitten etwas Ungewöhnliches passiert ist:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 3\n# ℹ 3 variables: location <chr>, type <chr>, note <chr>\n```\n:::\n:::\n\n\nUnd weiter reingezoomt, falls es Hinweise geben sollte (ist hier nicht der Fall, nur der Info halber):\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 1\n# ℹ 1 variable: note <chr>\n```\n:::\n:::\n\n\n\nDran denken: Wenn Sie das Modell aus irgendwelchen Gründen neu fitten, müssen Sie \"flussabwärts\", also danach kommenden Objekte, auch neu berechnen.\n\n\n# Bester Modellkandidat\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: boost_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n3 Recipe Steps\n\n• step_impute_bag()\n• step_center()\n• step_scale()\n\n── Model ───────────────────────────────────────────────────────────────────────\nBoosted Tree Model Specification (regression)\n\nMain Arguments:\n  mtry = 3\n  min_n = 17\n  tree_depth = 8\n  learn_rate = 0.126813600681226\n\nComputational engine: xgboost \n```\n:::\n:::\n\n\n# Final fit\n\n\n\n::: {.cell}\n\n:::\n\n\n\n# Final Predict\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,398\nColumns: 3\n$ budget     <dbl> -0.60852594, -0.60614924, -0.60852594, -0.42487164, -0.5545…\n$ popularity <dbl> -0.38100960, -0.40511279, -0.03123597, 0.01096644, -0.43337…\n$ runtime    <dbl> -0.80848591, -1.94040243, -0.35571930, 1.00258052, -0.71793…\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n---\n\nCategories: \n\n- ds1\n- tidymodels\n- statlearning\n- tmdb\n- random-forest\n- num\n\n",
    "supporting": [
      "tmdb05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}