{
  "hash": "dcd099bcc41ab4e6054d00fdee2fa945",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: germeval08-extract-spacy\nexpoints: 1\nextype: string\nexsolution: NA\ncategories:\n- wordembedding\n- textmining\n- python\n- string\ndate: '2023-11-16'\nslug: germeval08-extract-spacy\ntitle: germeval08-extract-spacy\n\n---\n\n\n\n\n\n\n# Aufgabe\n\nExtrahieren Sie deutsche Worembedding aus [SpaCy](https://spacy.io/) für den GermEval-Datensatz (Train).\n\n\nNutzen Sie die [GermEval-2018-Daten](https://heidata.uni-heidelberg.de/dataset.xhtml?persistentId=doi:10.11588/data/0B5VML).\n\nDie Daten sind unter CC-BY-4.0 lizensiert. Author: Wiegand, Michael (Spoken Language Systems, Saarland University (2010-2018), Leibniz Institute for the German Language (since 2019)),\n\nDie Daten sind auch über das R-Paket [PradaData](https://github.com/sebastiansauer/pradadata/tree/master/data-raw/GermEval-2018-Data-master) zu beziehen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndata(\"germeval_train\", package = \"pradadata\")\n```\n:::\n\n\n\n\nHinweise:\n\n- Orientieren Sie sich im Übrigen an den [allgemeinen Hinweisen des Datenwerks](https://datenwerk.netlify.app/hinweise).\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport spacy\nimport de_core_news_sm\nimport pandas as pd\nnlp = de_core_news_sm.load()\n```\n:::\n\n\n\n## Daten in Python importieren\n\n\n::: {.cell}\n\n```{.python .cell-code}\ncsv_file_path = '/home/sebastian/git-repos/pradadata/data-raw/germeval_train.csv'\n\ngermeval_train = pd.read_csv(csv_file_path)\n```\n:::\n\n\n## Vorbereiten\n\nAls String konvertieren:\n\n\n::: {.cell}\n\n```{.python .cell-code}\ntweets = germeval_train['text']\ntweets2 = tweets.astype(str)\ntweets3 = tweets2.to_string()\n```\n:::\n\n\n\nNLP-Features berechnen:\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndoc = nlp(tweets3)\n```\n:::\n\n\n\n## Wortvektoren berechnen\n\n\n::: {.cell}\n\n```{.python .cell-code}\nwordvec = [token.vector for token in doc]\nlen(wordvec)\n```\n:::\n\n\n## Export\n\nals Pandas DF:\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndf = pd.DataFrame(wordvec)\n\ndimensions = df.shape\ndimensions\n```\n:::\n\n\n\nIn CSV schreiben:\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndf.to_csv(\"germeval_spacy_embed.csv\")\n```\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- wordembedding\n- textmining\n- python\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}