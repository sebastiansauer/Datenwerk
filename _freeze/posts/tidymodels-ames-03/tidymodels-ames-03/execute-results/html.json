{
  "hash": "d95d344e44b960984f2d391378b67e45",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: tidymodels-ames-03\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nextol: 1\nexpoints: 1\ncategories:\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\ndate: '2023-05-17'\nslug: tidymodels-ames-03\ntitle: tidymodels-ames-03\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nBerechnen Sie ein lineares Modell mit tidymodels und zwar anhand des `ames` Datensatzes.\n\nModellgleichung: `Sale_Price ~ Gr_Liv_Area, data = ames`.\n\nBerechnen Sie ein multiplikatives (exponenzielles) Modell.\n\nRücktransformieren Sie die Log-Werte in \"Roh-Dollar\".\n\nGeben Sie den mittleren Vorhersagewert an als Lösung.\n\n*Hinweise*:\n\n- Fixieren Sie die Zufallszahlen auf den Startwert 42.\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-1_2356d9b40bef6f8089cb1167d8498378'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\ndata(ames)\n```\n:::\n\n\n\nMultiplikatives Modell:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-2_9e610ed19f21e5d856ac032fb5b71df5'}\n\n```{.r .cell-code}\names <- \n  ames %>% \n  mutate(Sale_Price = log10(Sale_Price)) %>% \n  select(Sale_Price, Gr_Liv_Area)\n```\n:::\n\n\nNicht vergessen: AV-Transformation in beiden Samples!\n\n\nDatensatz aufteilen:\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-3_1d5a90185cdcc8c332f5c7a6ba096e40'}\n\n```{.r .cell-code}\nset.seed(42)\names_split <- initial_split(ames, prop = 0.80, strata = Sale_Price)\names_train <- training(ames_split)\names_test  <-  testing(ames_split)\n```\n:::\n\n\n\n\nModell definieren:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-4_de460612b6d146bd08898595ce3aa11c'}\n\n```{.r .cell-code}\nm1 <-\n  linear_reg() # engine ist \"lm\" im Default\n```\n:::\n\n\n\n\nModell fitten:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-5_9efa2ad18f5ff40b01c38d5b00776c3d'}\n\n```{.r .cell-code}\nfit1 <-\n  m1 %>% \n  fit(Sale_Price ~ Gr_Liv_Area, data = ames)\n```\n:::\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-6_2334c399a40dd7f5510ed5049d256b72'}\n\n```{.r .cell-code}\nfit1 %>% pluck(\"fit\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nCoefficients:\n(Intercept)  Gr_Liv_Area  \n  4.8552133    0.0002437  \n```\n\n\n:::\n:::\n\n\n\n\nModellgüte im Train-Sample:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-7_570a12a537483ca3a5a09a98f2aa85db'}\n\n```{.r .cell-code}\nfit1_performance <-\n  fit1 %>% \n  extract_fit_engine()  # identisch zu pluck(\"fit\")\n```\n:::\n\n\n\n\nModellgüte im Train-Sample:\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-8_9737ae4931b31eabd5cfbb3fe2c38f76'}\n\n```{.r .cell-code}\nfit1_performance %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::lm(formula = Sale_Price ~ Gr_Liv_Area, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.02587 -0.06577  0.01342  0.07202  0.39231 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 4.855e+00  7.355e-03  660.12   <2e-16 ***\nGr_Liv_Area 2.437e-04  4.648e-06   52.43   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1271 on 2928 degrees of freedom\nMultiple R-squared:  0.4842,\tAdjusted R-squared:  0.484 \nF-statistic:  2749 on 1 and 2928 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\nR-Quadrat via easystats:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-9_a69576afd5709dbcbbbf81a1e5950590'}\n\n```{.r .cell-code}\nlibrary(easystats)\nfit1_performance %>% r2()  # rmse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# R2 for Linear Regression\n       R2: 0.484\n  adj. R2: 0.484\n```\n\n\n:::\n:::\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-10_acc39f3b8ab462d784386fb27b795615'}\n\n```{.r .cell-code}\ntidy(fit1_performance)  # ähnlich zu parameters()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate  std.error statistic p.value\n  <chr>          <dbl>      <dbl>     <dbl>   <dbl>\n1 (Intercept) 4.86     0.00736        660.        0\n2 Gr_Liv_Area 0.000244 0.00000465      52.4       0\n```\n\n\n:::\n:::\n\n\n\n\nVorhersagen im Test-Sample:\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-11_efa2b713e427dac2cf607e5643a3f6ac'}\n\n```{.r .cell-code}\npreds <- predict(fit1, new_data = ames_test)  # liefert TABELLE (tibble) zurück\nhead(preds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 1\n  .pred\n  <dbl>\n1  5.07\n2  5.18\n3  5.31\n4  5.11\n5  5.18\n6  5.10\n```\n\n\n:::\n:::\n\n\n`preds` ist ein Tibble, also müssen wir noch die Spalte `.pred.` herausziehen, z.B. mit `pluck(preds, \".pred\")`:\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-12_f64b61ab1cd561225a45ad105d88ad35'}\n\n```{.r .cell-code}\npreds_vec <- preds$.pred\n```\n:::\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-13_4d86394c6872eb903b679e023a44eb71'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  mutate(preds = pluck(preds, \".pred\"),  # pluck aus der Tabelle rausziehen\n         .pred = preds_vec)  # oder  mit dem Dollar-Operator\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Sale_Price Gr_Liv_Area preds .pred\n       <dbl>       <int> <dbl> <dbl>\n1       5.02         896  5.07  5.07\n2       5.24        1329  5.18  5.18\n3       5.60        1856  5.31  5.31\n4       5.15        1056  5.11  5.11\n5       5.26        1337  5.18  5.18\n6       4.98         987  5.10  5.10\n```\n\n\n:::\n:::\n\n\nOder mit `unnest`:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-14_dff06610ff3a3ce2af5589412b014119'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  mutate(preds = preds) %>% \n  unnest(preds) # Listenspalte \"entschachteln\"\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       <dbl>       <int> <dbl>\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n```\n\n\n:::\n:::\n\n\nOder wir binden einfach die Spalte an den Tibble:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-15_7bd0791b9f55504bb1a775fc440cdd8e'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test %>% \n  bind_cols(preds = preds)  # nimmt Tabelle und bindet die Spalten dieser Tabelle an eine Tabelle\n\nhead(ames_test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Sale_Price Gr_Liv_Area .pred\n       <dbl>       <int> <dbl>\n1       5.02         896  5.07\n2       5.24        1329  5.18\n3       5.60        1856  5.31\n4       5.15        1056  5.11\n5       5.26        1337  5.18\n6       4.98         987  5.10\n```\n\n\n:::\n:::\n\n\n\n\nModellgüte im Test-Sample:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-16_a557774e383fd610939fd850999f1b44'}\n\n```{.r .cell-code}\nrsq(ames_test2,\n    truth = Sale_Price,\n    estimate = .pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard       0.517\n```\n\n\n:::\n:::\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-17_6f6922ff92f9228fee1b5c6c01f1c42f'}\n\n```{.r .cell-code}\nsol <- 0.51679\n```\n:::\n\n\n\n\nZur Interpretation von Log10-Werten\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-18_cd126ca4c3587dee50afd94cc0206b6f'}\n\n```{.r .cell-code}\n5e5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5e+05\n```\n\n\n:::\n\n```{.r .cell-code}\n5*10^5 - 500000\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\nRücktransformation (ohne Bias-Korrektur):\n\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-19_2955aba31e41549bfc217364f2d8c2b3'}\n\n```{.r .cell-code}\names_test2 <-\n  ames_test2 %>% \n  mutate(pred_raw = 10^(.pred))\n```\n:::\n\n\n\n\nMittelwert der Vorhersagen:\n\n\n::: {.cell hash='tidymodels-ames-03_cache/html/unnamed-chunk-20_8aeb1eb4b2ba3e4a8d55eadad5616c42'}\n\n```{.r .cell-code}\nsol <- mean(ames_test2$pred_raw)\nsol\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 175973.8\n```\n\n\n:::\n:::\n\n\n\n\n\n\n---\n\nCategories: \n\n- ds1\n- tidymodels\n- prediction\n- yacsda\n- statlearning\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}