{
  "hash": "a88679f13c3dda58f2945b050719d9d5",
  "result": {
    "markdown": "---\nexname: bike01\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nexpoints: 1\ncategories:\n- stat-learning\n- tidymodels\n- num\ndate: '2023-03-27'\nslug: bike01\ntitle: bike01\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nKann man die Anzahl gerade verliehener Fahrräder eines entsprechenden Anbieters anhand der Temperatur vorhersagen?\n\nIn dieser Übung untersuchen wir diese Frage.\n\nSie können die Daten von der [Webseite der UCI](https://archive.ics.uci.edu/ml/datasets/Bike+Sharing+Dataset#) herunterladen.\n\nWir beziehen uns auf den Datensatz `day`.\n\nBerechnen Sie ein lineares Modell mit der Anzahl der aktuell vermieteten Räder als AV und der aktuellen Temperatur als UV!\n\nGeben Sie den MSE an!\n\n[Hinweise](https://sebastiansauer.github.io/Lehre/Hinweise/Hinweise-Bearbeitung.html)\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-1_bd7cde4e7a2f85a18f45b596a35d70c3'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-2_ba1f1d0a6af3cc4d8cb0ff28cd798431'}\n\n```{.r .cell-code}\nd <- read.csv(\"/Users/sebastiansaueruser/datasets/Bike-Sharing-Dataset/day.csv\")\n```\n:::\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-3_b0d2cbfa618abd8eb3fc759efc4bd7d5'}\n\n```{.r .cell-code}\nglimpse(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 731\nColumns: 16\n$ instant    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ dteday     <chr> \"2011-01-01\", \"2011-01-02\", \"2011-01-03\", \"2011-01-04\", \"20…\n$ season     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ yr         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ mnth       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ holiday    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ weekday    <int> 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4,…\n$ workingday <int> 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1,…\n$ weathersit <int> 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2,…\n$ temp       <dbl> 0.3441670, 0.3634780, 0.1963640, 0.2000000, 0.2269570, 0.20…\n$ atemp      <dbl> 0.3636250, 0.3537390, 0.1894050, 0.2121220, 0.2292700, 0.23…\n$ hum        <dbl> 0.805833, 0.696087, 0.437273, 0.590435, 0.436957, 0.518261,…\n$ windspeed  <dbl> 0.1604460, 0.2485390, 0.2483090, 0.1602960, 0.1869000, 0.08…\n$ casual     <int> 331, 131, 120, 108, 82, 88, 148, 68, 54, 41, 43, 25, 38, 54…\n$ registered <int> 654, 670, 1229, 1454, 1518, 1518, 1362, 891, 768, 1280, 122…\n$ cnt        <int> 985, 801, 1349, 1562, 1600, 1606, 1510, 959, 822, 1321, 126…\n```\n:::\n:::\n\n\n## Data split\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-4_a92829e933dbefb979dfbc6b97b2e69a'}\n\n```{.r .cell-code}\nset.seed(42)\nsplit_vec <- initial_split(d, strata = cnt)\n\nd_train <- training(split_vec)\nd_test <- testing(split_vec)\n```\n:::\n\n\n\n\n## Define recipe\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-5_b6b742a22486fb6b9a0be978717c9d14'}\n\n```{.r .cell-code}\nrec1 <- \n  recipe(cnt ~ temp, data = d)\n```\n:::\n\n\n\n\n## Define model\n\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-6_f686c762c5d4b86d79caf00bcd897981'}\n\n```{.r .cell-code}\nm1 <-\n  linear_reg()\n```\n:::\n\n\n\n\n\n## Workflow\n\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-7_608270cc4df92030109b8d74a2685893'}\n\n```{.r .cell-code}\nwf1 <-\n  workflow() %>% \n  add_model(m1) %>% \n  add_recipe(rec1) \n```\n:::\n\n\n\n\n## Fit\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-8_de51976d57c0600a8a277c0d0c4c5a74'}\n\n```{.r .cell-code}\nfit1 <- last_fit(wf1, split_vec)\nfit1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Resampling results\n# Manual resampling \n# A tibble: 1 × 6\n  splits            id               .metrics .notes   .predictions .workflow \n  <list>            <chr>            <list>   <list>   <list>       <list>    \n1 <split [547/184]> train/test split <tibble> <tibble> <tibble>     <workflow>\n```\n:::\n:::\n\n\n\n\n## Model performance (metrics) in test set\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-9_51b90c3af58790931dd7f0c5063955d7'}\n\n```{.r .cell-code}\nfit1 %>% collect_metrics()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard    1509.    Preprocessor1_Model1\n2 rsq     standard       0.411 Preprocessor1_Model1\n```\n:::\n:::\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-10_4ea221c5cea378169bb6b3970e5a33da'}\n\n```{.r .cell-code}\nMSE <- fit1 %>% collect_metrics() %>% pluck(3, 1)\nMSE\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1509.477\n```\n:::\n:::\n\n\n\n\n**Solution**: 1509.4768321\n\n\n\n::: {.cell hash='bike01_cache/html/unnamed-chunk-11_4fde48370e9f64616921ab54a4687ce8'}\n\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- stat-learning\n- tidymodels\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}