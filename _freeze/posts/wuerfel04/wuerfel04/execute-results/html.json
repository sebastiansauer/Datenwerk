{
  "hash": "ca7f574252c94f6c3ad6f847dc716770",
  "result": {
    "markdown": "---\nexname: wuerfel04\nextype: num\nexsolution: 0.08\nexshuffle: no\nextol: 1\nexpoints: 1\ndate: '2022-10-28'\nslug: wuerfel04\ntitle: wuerfel04\n\n---\n\n---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n# Exercise\n\nWas ist die Wahrscheinlichkeit, mit zwei fairen Würfeln genau 10 Augen zu werfen?\n\nHinweise:\n\n- Nutzen Sie Simulationsmnethoden der Wahrscheinlichkeitsrechnung, keine exakten Rechnung auf Basis der Wahrscheinlichkeitsrechnung.\n- Geben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).\n- Setzen Sie bei Simulationsaufgaben immer die Zufallszahlen mit `set.seed()`. Sofern kein anderer Wert für `set.seed()` genannt, verwenden Sie die Zahl `42`. \n- Da es bei dieser Aufgabe nötig ist, zwei Mal Zufallszahlen zu berechnen (für zwei Würfel nämlich), verwenden Sie beim ersten Würfel die Zahl `42` und beim zweiten Würfel die Zahl `43`.\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\n::: {.cell}\n\n:::\n\n\n\nEinen Würfelwurf in R kann man so simulieren:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n\nBei `sample` gibt `x` den Ereignisraum, $\\Omega$, an, `size` die Stichprobengröße und \n`prob` gibt für jedes Element von `x` die Wahrscheinlichkeit an.\n\nDas machen wir jetzt 1000 Mal. Viel Spaß beim Tippen...\n\n\n...\n...\n...\n\nOkay, das sollten wir einfacher hinkriegen.\nMan kann R sagen, dass sie eine Funktion (wie `sample`) oft ausführen soll.\nDamit können wir viele Würfelwürfe simulieren.\nDiese \"Wiederholungsfunktion\" heißt  `replicate(n, expr)`;\ndabei gibt `n` an, wie oft die Funktion wiederholt werden soll,\nund `expr` ist der Ausdruck (die Funktion), die wiederholt werden soll,\ndas ist bei uns die Funktion `sample`, wie oben dargestellt.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1 2 4 4 2 4 3 3 2 5\n```\n:::\n:::\n\n\n\nKönnen wir natürlich auch zich Mal wiederholen, nicht nur 10 Mal,\nsagen wir $10^4$ Mal:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.4968\n```\n:::\n:::\n\n\n\nAh, interessant: Der Mittelwert ist etwa 3.5...\n\n\nJetzt werfen wir noch einen zweiten Würfel genau so oft:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.4983\n```\n:::\n:::\n\n\n\nDas packen wir jetzt in eine Tabelle und ergänzen die Augensumme für jede Wiederholung des Doppelwurfes:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n     w1    w2 w_sum\n  <dbl> <dbl> <dbl>\n1     1     4     5\n2     1     1     2\n3     3     2     5\n4     6     6    12\n5     5     3     8\n6     5     5    10\n```\n:::\n:::\n\n\n\nJetzt ist es einfach:\n\nWir zählen einfach, wie oft das Ergebnis 10 vorkommt in der Tabelle.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  `w_sum == 10`     n\n  <lgl>         <int>\n1 FALSE          9148\n2 TRUE            852\n```\n:::\n:::\n\n\nErgänzen wir die Anteile dieser Anzahl:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  `w_sum == 10`     n Anteil\n  <lgl>         <int>  <dbl>\n1 FALSE          9148 0.915 \n2 TRUE            852 0.0852\n```\n:::\n:::\n\n\n\nDie Lösung lautet also: `0.08` (gerundet auf zwei Dezimalen)\n\n\nAuf einfache Weise können wir entsprechend die Wahrscheinlichkeit für *mindestens* $k$ Augen (bei zwei Würfelwürfen) ermitteln, mit $k$ ist die gesuchte Augensumme, hier 10.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  `w_sum >= 10`     n Anteil\n  <lgl>         <int>  <dbl>\n1 FALSE          8316  0.832\n2 TRUE           1684  0.168\n```\n:::\n:::\n\n\n\nOder *höchstens* 10, ganz analog:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  `w_sum <= 10`     n Anteil\n  <lgl>         <int>  <dbl>\n1 FALSE           832 0.0832\n2 TRUE           9168 0.917 \n```\n:::\n:::\n\n\n\n\n\n---\n\nCategories: \n\n~\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}