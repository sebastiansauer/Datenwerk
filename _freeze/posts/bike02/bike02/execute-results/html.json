{
  "hash": "4fce01bf267e2c7b61585fb66c7ffc18",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: bike02\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nexpoints: 1\ncategories:\n- statlearning\n- tidymodels\n- num\ndate: '2023-05-17'\nslug: bike02\ntitle: bike02\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nKann man die Anzahl gerade verliehener Fahrräder eines entsprechenden Anbieters anhand der Temperatur vorhersagen?\n\nIn dieser Übung untersuchen wir diese Frage.\n\nSie können die Daten von der [Webseite der UCI](https://archive.ics.uci.edu/ml/datasets/Bike+Sharing+Dataset#) herunterladen.\n\nWir beziehen uns auf den Datensatz `day`.\n\nBerechnen Sie einen Entscheidungsbaum  mit der Anzahl der aktuell vermieteten Räder als AV und der aktuellen Temperatur als UV!\n\nTunen Sie den Cp-Parameter des Baumes.\n\nGeben Sie den MSE an!\n\n[Hinweise](https://datenwerk.netlify.app/Hinweise.html)\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-1_7ed4bd3306cc32badba08d53b4578f73'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(tictoc)\n```\n:::\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-2_aa0f2a32aa19ef83c4adc861553b6c04'}\n\n```{.r .cell-code}\nd <- read.csv(\"/Users/sebastiansaueruser/datasets/Bike-Sharing-Dataset/day.csv\")\n```\n:::\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-3_0dfa3a6ec7ac79fa2e54063cbd1605ef'}\n\n```{.r .cell-code}\nglimpse(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 731\nColumns: 16\n$ instant    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ dteday     <chr> \"2011-01-01\", \"2011-01-02\", \"2011-01-03\", \"2011-01-04\", \"20…\n$ season     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ yr         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ mnth       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ holiday    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,…\n$ weekday    <int> 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4,…\n$ workingday <int> 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1,…\n$ weathersit <int> 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2,…\n$ temp       <dbl> 0.3441670, 0.3634780, 0.1963640, 0.2000000, 0.2269570, 0.20…\n$ atemp      <dbl> 0.3636250, 0.3537390, 0.1894050, 0.2121220, 0.2292700, 0.23…\n$ hum        <dbl> 0.805833, 0.696087, 0.437273, 0.590435, 0.436957, 0.518261,…\n$ windspeed  <dbl> 0.1604460, 0.2485390, 0.2483090, 0.1602960, 0.1869000, 0.08…\n$ casual     <int> 331, 131, 120, 108, 82, 88, 148, 68, 54, 41, 43, 25, 38, 54…\n$ registered <int> 654, 670, 1229, 1454, 1518, 1518, 1362, 891, 768, 1280, 122…\n$ cnt        <int> 985, 801, 1349, 1562, 1600, 1606, 1510, 959, 822, 1321, 126…\n```\n\n\n:::\n:::\n\n\n## Data split\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-4_afac3dd82a398b377477bf6d41d6d17f'}\n\n```{.r .cell-code}\nset.seed(42)\nd_split <- initial_split(d, strata = cnt)\n\nd_train <- training(d_split)\nd_test <- testing(d_split)\n```\n:::\n\n\n\n\n## Define recipe\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-5_d347758d9d2e87f892dcd6aa5ee4ba08'}\n\n```{.r .cell-code}\nrec1 <- \n  recipe(cnt ~ temp, data = d)\n```\n:::\n\n\n\n\n## Define model\n\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-6_89890a125d9243326bb069dc69576cfb'}\n\n```{.r .cell-code}\nm1 <-\n  decision_tree(cost_complexity = tune(),\n                mode = \"regression\")\n```\n:::\n\n\n\n\n## Define Resamples\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-7_d9c7026003dffc6713abeea41260807b'}\n\n```{.r .cell-code}\nrsmpl <- vfold_cv(d_train)\n```\n:::\n\n\n\n## Workflow\n\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-8_8d705eecaa900cd724a5cb70f5f5e404'}\n\n```{.r .cell-code}\nwf1 <-\n  workflow() %>% \n  add_model(m1) %>% \n  add_recipe(rec1) \n```\n:::\n\n\n\n\n## Fit\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-9_1d04535e78a23707cee8e747f3fb858a'}\n\n```{.r .cell-code}\ntic()\nfit1 <- tune_grid(\n  object = wf1, \n  resamples = rsmpl)\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n7.197 sec elapsed\n```\n\n\n:::\n\n```{.r .cell-code}\nfit1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Tuning results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics          .notes          \n   <list>           <chr>  <list>            <list>          \n 1 <split [492/55]> Fold01 <tibble [20 × 5]> <tibble [0 × 3]>\n 2 <split [492/55]> Fold02 <tibble [20 × 5]> <tibble [0 × 3]>\n 3 <split [492/55]> Fold03 <tibble [20 × 5]> <tibble [0 × 3]>\n 4 <split [492/55]> Fold04 <tibble [20 × 5]> <tibble [0 × 3]>\n 5 <split [492/55]> Fold05 <tibble [20 × 5]> <tibble [0 × 3]>\n 6 <split [492/55]> Fold06 <tibble [20 × 5]> <tibble [0 × 3]>\n 7 <split [492/55]> Fold07 <tibble [20 × 5]> <tibble [0 × 3]>\n 8 <split [493/54]> Fold08 <tibble [20 × 5]> <tibble [0 × 3]>\n 9 <split [493/54]> Fold09 <tibble [20 × 5]> <tibble [0 × 3]>\n10 <split [493/54]> Fold10 <tibble [20 × 5]> <tibble [0 × 3]>\n```\n\n\n:::\n:::\n\n\n\n## Bester Kandidat\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-10_1f4676641ff9466dadbe0272a8dc6290'}\n\n```{.r .cell-code}\nshow_best(fit1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  cost_complexity .metric .estimator  mean     n std_err .config              \n            <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1      0.0208     rmse    standard   1478.    10    34.7 Preprocessor1_Model09\n2      0.00220    rmse    standard   1538.    10    36.4 Preprocessor1_Model01\n3      0.000306   rmse    standard   1556.    10    40.3 Preprocessor1_Model07\n4      0.00000175 rmse    standard   1558.    10    39.7 Preprocessor1_Model02\n5      0.0000194  rmse    standard   1558.    10    39.7 Preprocessor1_Model03\n```\n\n\n:::\n:::\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-11_548a57b0cea69875b21f9a76d2a67a36'}\n\n```{.r .cell-code}\nwf1_best <-\n  wf1 %>% \n  finalize_workflow(parameters = select_best(fit1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n```\n\n\n:::\n:::\n\n\n\n## Last Fit\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-12_0e388cf54ace5f70dec16bcfdcc5d310'}\n\n```{.r .cell-code}\nfit_testsample <- last_fit(wf1_best, d_split)\n```\n:::\n\n\n\n\n## Model performance (metrics) in test set\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-13_8e41282c59a4b74f6b304c45abec9f87'}\n\n```{.r .cell-code}\nfit_testsample %>% collect_metrics()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard    1430.    Preprocessor1_Model1\n2 rsq     standard       0.473 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-14_410bbf77057f0c9a9e285b1526c4ba6d'}\n\n```{.r .cell-code}\nMSE <- fit_testsample %>% collect_metrics() %>% pluck(3, 1)\nMSE\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1430.304\n```\n\n\n:::\n:::\n\n\n\n\n**Solution**: 1430.3042213\n\n\n\n::: {.cell hash='bike02_cache/html/unnamed-chunk-15_16451843afd1031d6a5827bd4f2a6a54'}\n\n:::\n\n\n\n\n\n---\n\nCategories: \n\n- statlearning\n- tidymodels\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}