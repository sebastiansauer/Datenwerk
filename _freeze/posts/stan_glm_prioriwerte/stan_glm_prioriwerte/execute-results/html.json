{
  "hash": "00cfc1cccb38b82016ca95f62c018007",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexname: stan_glm_prioriwerte\nextype: schoice\nexsolution: 512\nexshuffle: no\ncategories:\n- bayes\n- regression\n- qm2\n- qm2-pruefung\ndate: '2022-12-15'\nslug: stan_glm_prioriwerte\ntitle: stan_glm_prioriwerte\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\nBerechnet man eine Posteriori-Verteilung mit `stan_glm()`, \nso kann man entweder die schwach informativen Prioriwerte der Standardeinstellung verwenden, \noder selber Prioriwerte definieren.\n\nBetrachten Sie dazu dieses Modell:\n\n```\nstan_glm(price ~ cut, data = diamonds, \n                   prior = normal(location = c(100, 100, 100, 100),\n                                  scale = c(10, 10, 10, 10)),\n                   prior_intercept = normal(3000, 500))\n```\n\nBeziehen Sie sich auf den Datensatz `diamonds`.\n\nHinweise:\n\n- Gehen Sie davon aus, dass die Post-Verteilung von Intercept und Gruppeneffekte normalverteilt sind.\n\n\nWelche Aussage dazu passt (am besten)?\n\nAnswerlist\n----------\n* Es wird für (genau) einen Parameter eine Priori-Verteilung definiert.\n* Für das Regressionsgewicht $\\beta_1$ sind negative Werte *apriori* plausibel.\n* Mit `prior = normal()` werden Gruppenmittelwerte definiert.\n* Alle Parameter des Modells sind normalverteilt.\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\nProbieren geht über Studieren:\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\nDie Prioris, die Stan gewählt hat, kann man sich so anschauen:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nPriors for model 'm1' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 3933, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 3933, scale = 9974)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = [0,0,0,...], scale = [2.5,2.5,2.5,...])\n  Adjusted prior:\n    ~ normal(location = [0,0,0,...], scale = [34685.38,20362.28,22862.49,...])\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 0.00025)\n------\nSee help('prior_summary.stanreg') for more details\n```\n\n\n:::\n:::\n\n\n\n\nDa gilt: $\\forall i: \\beta_i \\sim \\mathcal{N}(0, 2.5)$ (alle betas sind normalverteilt mit Mittelwert 0 und Streuung 2.5), liegt die Wahrscheinlichkeit (apriori) bei 50%,\ndass der Wert von \\beta_i$ negativ ist.\nAnders gesagt: Wir glauben zu 50%, dass der Parameter einen negativen Wert hat.\n\n\nHier sind die Modellparameter:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nParameter    |  Median |              95% CI |     pd |  Rhat |     ESS |                       Prior\n-----------------------------------------------------------------------------------------------------\n(Intercept)  | 4360.63 | [ 4158.15, 4552.45] |   100% | 1.006 | 1074.00 | Normal (3932.80 +- 9973.60)\ncutGood      | -433.15 | [ -657.78, -200.59] | 99.98% | 1.005 | 1261.00 |   Normal (0.00 +- 34685.38)\ncutIdeal     | -902.84 | [-1103.86, -692.43] |   100% | 1.006 | 1118.00 |   Normal (0.00 +- 20362.28)\ncutPremium   |  223.17 | [   17.57,  434.14] | 98.15% | 1.005 | 1145.00 |   Normal (0.00 +- 22862.49)\ncutVery Good | -378.54 | [ -586.46, -165.75] |   100% | 1.006 | 1128.00 |   Normal (0.00 +- 23922.15)\n```\n\n\n:::\n:::\n\n\nWie man sieht, sind negative Werte auch *aposteriori* plausibel für $\\beta_1$, `cutGood`:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](unnamed-chunk-5-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\n\n\n\nAnswerlist\n----------\n\n\n* Falsch. Es gibt mehrere Parameter im Modell (Achsenabschnitt, 4 Prädiktoren, sigma)\n* Wahr. Für `cutGood` sind negative Werte plausibel.\n* Falsch. `prior = normal()` werden Regressionskoeffizienten in ihren Prioris definiert.\n* Falsch. sigma ist in Stans Voreinstellung exponentialverteilt.\n\n\n\n\n\n---\n\nCategories: \n\n- bayes\n- regression\n\n",
    "supporting": [
      "stan_glm_prioriwerte_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}