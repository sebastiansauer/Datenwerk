{
  "hash": "bc01fc0b0398f6510e08183547336202",
  "result": {
    "engine": "knitr",
    "markdown": "---\nextype: string\nexsolution: r paste0(R2,R5,R10,R20)\nexname: alphafehler-inflation4\nextol: 0.02\ncategories:\n- probability\n- R\n- inference\n- string\ndate: '2023-11-08'\nslug: alphafehler-inflation4\ntitle: alphafehler-inflation4\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nEine Klettererin verwendet ein Seil, dass eine Sicherheit von $r=.99$ hat: \nmit einer Wahrscheinlichkeit von 1% reißt das Seil.\nJetzt knüpft sie mehrere dieser Seile (hintereinander, Seil an Seil) zusammen zu einem \"Gesamtseil\".\nWie groß ist die Gefahr, dass das „Gesamtseil“ reist? \n\n\nHinweise:\n\n- Etwaige (physikalisch plausible) Verringerung der Zugfestigkeit durch (Seilbiegung aufgrund der) Knoten ist zu vernachlässigen.\n- Unterstellen Sie Unabhängkeit der einzelnen Ereignisse.\n- Wie immer, beachten sie die übrigen [Hinweise des Datenwerks](https://datenwerk.netlify.app/hinweise).    \n\n\n\nBetrachten wir mehrere Fälle:\n\n* Sie knüpft 2 zusammen.\n* Sie knüpft 5 zusammen.\n* Sie knüpft 10 zusammen.\n* Sie knüpft 20 zusammen.\n\n  \n  \n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\nSei $R$ die Wahrscheinlichkeit, dass das Gesamtseil hält (nicht reißt).\n$1-R$ ist dann die Wahrscheinlichkeit des Gegenereignisses: das Gesamtseil reißt.\n  \nAllgemein ist $R$ bei k Tests gleich r hoch k: $R=r^k$.\n(Das Aufaddieren der Fehlalarm-Wahrscheinlichkeit bezeichnet man als Alphafehler-Inflation.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nr <- .99\nR2 <- r^2 %>% round(2)  # Auf 2 Dezimalen runden\nR5  <- r^5  %>% round(2)\nR10 <- r^10  %>% round(2)\nR20 <- r^20  %>% round(2)\n```\n:::\n\n\nDie Gesamtsicherheiten lauten also:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nR2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.98\n```\n\n\n:::\n\n```{.r .cell-code}\nR5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.95\n```\n\n\n:::\n\n```{.r .cell-code}\nR10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9\n```\n\n\n:::\n\n```{.r .cell-code}\nR20\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.82\n```\n\n\n:::\n:::\n\n\n\nDie Seilriss-Gefahr ist dann:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.02\n```\n\n\n:::\n\n```{.r .cell-code}\n1 - R5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05\n```\n\n\n:::\n\n```{.r .cell-code}\n1 - R10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1\n```\n\n\n:::\n\n```{.r .cell-code}\n1 - R20\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.18\n```\n\n\n:::\n:::\n\n\n\n\n# Vertiefung\n\nBetrachten wir abschließend aus Neugier die Wahrscheinlichkeit,\ndass die Klettererin abstürzt ($1-R$) als Funktion der Anzahl der Seie.\n\nDiese Überlegung ist etwas weiterführender und nicht ganz so zentral,\naber ziemlich interessant.\n\n\nDefinieren wir die Parameter:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanz_seile <- 1:20  # von 1 bis max 20 Seile\nr <- c(.9, .95, .99, .999)  # verschiedene Seil-Sicherheiten\n```\n:::\n\n\n\nJetzt erstellen wir einen Tabelle, die alle `anz_seile * r` Werte kombiniert:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- \n  expand_grid(anz_seile, r)\n\nhead(d)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| anz_seile|     r|\n|---------:|-----:|\n|         1| 0.900|\n|         1| 0.950|\n|         1| 0.990|\n|         1| 0.999|\n|         2| 0.900|\n|         2| 0.950|\n\n</div>\n:::\n:::\n\n\n\nJetzt berechnen wir für jede Kombination die Gesamtsicherheit `R` sowie die Wahrscheinlichkeit, dass das Seil reißt, $1-R$:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <-\n  d %>% \n  mutate(R = r^anz_seile,\n         seil_reisst_prob = 1 - R)\n```\n:::\n\n\n\nUnd plotten das Ganze mit dem Paket `ggpubr`: \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpubr)\nd <-\n  d |> \n  mutate(r_fctr = factor(r))  # um \"r\" zum Gruppieren zu verwenden, sollte es eine nominale Variable sein, daher wandeln wir mit \"factor\" in eine nominale Variable um.\n\nggline(d,\n       x = \"anz_seile\",\n       y = \"seil_reisst_prob\",\n       color = \"r_fctr\",\n       linetype = \"r_fctr\",\n       group = \"r_fctr\") +\n  labs(color = \"Reißfestigkeit\",\n       linetype = \"Reißfestigkeit\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-7-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nOder mit `ggplot` plotten:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% \n  ggplot(aes(x = anz_seile,\n             y = seil_reisst_prob,\n             color = factor(r))) +\n  geom_line() +\n  labs(color = \"Reißfestigkeit\")\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-8-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\n\nHat ein Seil eine Sicherheit von 90%, dann will man nicht dranhängen, wenn 20 Seile zusammengeknotet sind!\n\n\n\n\n    \nAntworten:\n\n* $R_2 = r\\cdot r = r^2 = 0.98$\n* $R_5 =  r^5 = 0.95$\n* $R_{10}= r^{10} = 0.9$\n* $R_{20}= r^{20} = 0.82$\n\n\n\n\n\n---\n\nCategories: \n\n- probability\n- R\n- inference\n- string\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}