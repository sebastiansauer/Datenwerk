{
  "hash": "805aa62987d5ea8f134df364b916602c",
  "result": {
    "markdown": "---\nexname: tidymodels-poly02\nextype: num\nexsolution: r fmt(sol)\nexshuffle: no\nexpoints: 1\ncategories:\n- R\n- statlearning\n- tidymodels\n- num\ndate: '2023-05-17'\nslug: tidymodels-poly02\ntitle: tidymodels-poly02\n\n---\n\n\n\n\n\n\n\n\n\n# Aufgabe\n\nFitten Sie ein Polynomial-Modell für folgende Modellgleichung:\n\n`body_mass_g ~ bill_length_mm`.\n\nGesucht ist der RMSE im Test-Set (optimal hinsichtlich minimalem Prognosefehler).\n\nHinweise:\n\n- Datensatz `penguins` (palmerpenguins)\n- Verwenden Sie Tidymodels\n- Fitten Sie Polynome des Grades 1 bis 10.\n- Definieren Sie die Polynomegrade als Tuningparameter.\n- Entfernen Sie fehlende Werte in den Prädiktoren.\n- Wie immer gilt: Verwenden Sie die Standardeinstellungen der Funktionen, soweit nicht anders angegeben.\n\n\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Lösung\n\n\nSetup:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-1_21dc494fa50056abd1bdabc607f7b3fd'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\ndata(penguins, package = \"palmerpenguins\")\n```\n:::\n\n\n\nDatenaufteilung:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-2_fa63df9987db4bcdcd39688d783f457f'}\n\n```{.r .cell-code}\nd_split <- initial_split(penguins)\nd_train <- training(d_split)\nd_test <- testing(d_split)\n```\n:::\n\n\n\n\nRezept:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-3_de5dfbd00a8e23539ce16999433b1d03'}\n\n```{.r .cell-code}\nrec1 <- \n  recipe(body_mass_g ~ bill_length_mm, data = penguins) %>% \n  step_naomit(all_predictors()) %>% \n  step_poly(all_predictors(), degree = tune()) %>% \n  update_role(contains(\"_poly_\"), new_role = \"predictor\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: No columns were selected in `update_role()`.\n```\n:::\n:::\n\n\n\n\nCheck:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-4_f031aea5c956cb38933900124cf0a044'}\n\n```{.r .cell-code}\nd_baked <- bake(prep(rec1), new_data = NULL)\n```\n:::\n\n\n\nRezepte mit Tuningparametern kann man nicht preppen/backen.\n\n\n\nWorkflow:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-5_a72cb6fa68c17cade097413ccced7175'}\n\n```{.r .cell-code}\nwf1 <-\n  workflow() %>% \n  add_model(linear_reg()) %>% \n  add_recipe(rec1)\n```\n:::\n\n\n\n\n\n\nTuning:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-6_7a5a797c87cec42ff4c073cba9477364'}\n\n```{.r .cell-code}\nset.seed(42)\ntune1 <-\n  tune_grid(\n    wf1,\n    resamples = vfold_cv(data = penguins),\n    metrics = metric_set(rmse),\n    grid = grid_regular(degree(range = c(1, 10)),\n                               levels = 10),\n    control = control_grid(save_workflow = TRUE)\n  )\n```\n:::\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-7_8c1487196e3d8105730e756bd5246667'}\n\n```{.r .cell-code}\nautoplot(tune1)\n```\n\n::: {.cell-output-display}\n![](unnamed-chunk-7-1.png){fig-pos='H' width=384}\n:::\n:::\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-8_99e418284866bc1bb7876db579e9c62c'}\n\n```{.r .cell-code}\nshow_best(tune1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 7\n  degree .metric .estimator  mean     n std_err .config              \n   <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1      2 rmse    standard    638.    10    22.7 Preprocessor02_Model1\n2      4 rmse    standard    641.    10    23.7 Preprocessor04_Model1\n3      1 rmse    standard    643.    10    21.8 Preprocessor01_Model1\n4      5 rmse    standard    643.    10    23.5 Preprocessor05_Model1\n5      3 rmse    standard    643.    10    24.2 Preprocessor03_Model1\n```\n:::\n:::\n\n\nFinalisieren:\n\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-9_317ab265192e2407c095ae6d28e0818e'}\n\n```{.r .cell-code}\nbest1 <- fit_best(tune1)\nbest1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_naomit()\n• step_poly()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n          (Intercept)  bill_length_mm_poly_1  bill_length_mm_poly_2  \n                 4202                   8813                  -1708  \n```\n:::\n:::\n\n\nPredicten:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-10_617e737fb9e8a6818779f4a895451940'}\n\n```{.r .cell-code}\nfinal1 <- last_fit(best1, d_split)\ncollect_metrics(final1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard     605.    Preprocessor1_Model1\n2 rsq     standard       0.323 Preprocessor1_Model1\n```\n:::\n:::\n\n\n\n\nOder so:\n\n\n::: {.cell hash='tidymodels-poly02_cache/html/unnamed-chunk-11_d7a4aefd10868d3abc1908dc9d4d6e0d'}\n\n```{.r .cell-code}\nsol <- \npredict(best1, new_data = d_test) %>% \n  bind_cols(d_test) %>% \n  rmse(truth = body_mass_g, estimate = .pred) %>% \n  pull(.estimate) %>% \n  pluck(1)\n\nsol\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 598.9329\n```\n:::\n:::\n\n\n\n\n\n\nDie Antwort lautet: 598.9328583.\n\n\n\n---\n\nCategories: \n\n- R\n- statlearning\n- tidymodels\n- num\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}