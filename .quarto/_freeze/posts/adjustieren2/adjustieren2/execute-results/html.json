{
  "hash": "388f07d6f2cff713f7cafb905a4d5867",
  "result": {
    "markdown": "---\nextype: cloze\nexclozetype: num|string\nexsolution: 3932.5|r regr_formel\nexname: adjustieren2\nexpoints: 0.5\ntags:\n- regression\n- lm\ncategories:\n- qm2\n- '2022'\ndate: '2022-09-04'\nslug: adjustieren2\ntitle: adjustieren2\n\n---\n\n\n\n\n\n\n\n\n\n\n# Exercise\n\n\nBetrachten Sie folgendes Modell, das den Zusammenhang des Preises (`price`) \nund dem Gewicht (`carat`) von Diamanten untersucht (Datensatz `diamonds`).\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-1_c6a28a5564e8e198bac31eb2871433aa'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndiamonds <- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/diamonds.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 53940 Columns: 11\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): cut, color, clarity dbl (8): ...1, carat, depth, table, price, x, y, z\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n:::\n\n\n\n\nAber zuerst zentrieren wir den metrischen Prädiktor `carat`, \num den Achsenabschnitt besser interpretieren zu können. \n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-2_57a748e01966430396f38bdc99babe30'}\n\n```{.r .cell-code}\ndiamonds <-\n  diamonds %>% \n  mutate(carat_z = carat - mean(carat, na.rm = TRUE))\n```\n:::\n\n\nDann berechnen wir ein (bayesianisches) Regressionsmodell, \nwobei wir auf die Standardwerte der Prior zurückgreifen.\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-3_f242c87e527b9db58c813f83adba5a5a'}\n\n```{.r .cell-code}\nlibrary(rstanarm)\nlibrary(easystats)\nlm1 <- stan_glm(price ~ carat_z, data = diamonds,\n                chains = 1,  # nur ein Mal Stichproben ziehen, spart Zeit (auf Kosten der Genauigkeit)\n                refresh = 0)\nparameters(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nParameter   |  Median |             95% CI |   pd | % in ROPE |  Rhat |     ESS |                       Prior\n-------------------------------------------------------------------------------------------------------------\n(Intercept) | 3933.11 | [3919.67, 3946.04] | 100% |        0% | 1.000 |  289.00 | Normal (3932.80 +- 9973.60)\ncarat_z     | 7757.01 | [7731.08, 7786.08] | 100% |        0% | 1.000 | 1181.00 |   Normal (0.00 +- 21040.85)\n```\n:::\n:::\n\n\n\n\n\nZur Verdeutlichung ein Diagramm zum Modell:\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-4_c23b3084e98fbaacc9e13f1d73e01d41'}\n\n```{.r .cell-code}\ndiamonds %>% \n  ggplot() +\n  aes(x = carat_z, y = price) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](unnamed-chunk-4-1.png){fig-pos='H' width=384}\n:::\n:::\n\n\nAnswerlist\n----------\na) Was kostet in Diamant mittlerer Größe laut Modell `lm1`? Runden Sie auf eine Dezimale. Geben Sie nur eine Zahl ein.\nb) Geben Sie eine Regressionsformel an, die `lm1` ergänzt, so dass die Schliffart (`cut`) des Diamanten kontrolliert (adjustiert) wird. Anders gesagt: Das Modell soll die mittleren Preise für jede der fünf Schliffarten angeben. Geben Sie nur die Regressionsformel an. Lassen Sie zwischen Termen jeweils ein Leerzeichen Abstand.\n\n\n\n\n\n*Hinweis*: Es gibt (laut Datensatz) folgende Schliffarten (und zwar in der folgenden Reihenfolge):\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-5_8c2749af7a653248bd4b44b127f4ee58'}\n\n```{.r .cell-code}\ndiamonds %>% \n  distinct(cut)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  cut      \n  <chr>    \n1 Ideal    \n2 Premium  \n3 Good     \n4 Very Good\n5 Fair     \n```\n:::\n:::\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-6_a1c01d8fa3ab0a88a95882b6830bb2ee'}\n\n```{.r .cell-code}\nlevels(diamonds$cut)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\n\n\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n</br>\n\n# Solution\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-7_d4f8069a6f42d69ffc37b0763ace7bcf'}\n\n:::\n\n\n\na) Unser Modell `lm1` schätzt den Preis eines Diamanten mittlerer Größe auf etwa `3932.5` (was immer auch die Einheiten sind, Dollar vermutlich).\n\nb) `price ~ carat_z + cut` \n\nDieses zweite Modell könnten wir so berechnen:\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-8_b68d3f4b6e7d8793c3f4ae0fff2fce50'}\n\n```{.r .cell-code}\nlm2 <- stan_glm(price ~ carat_z + cut, data = diamonds,\n                chains = 1,\n                refresh = 0)\nparameters(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nParameter    |  Median |             95% CI |   pd | % in ROPE |  Rhat |     ESS |                       Prior\n--------------------------------------------------------------------------------------------------------------\n(Intercept)  | 2406.07 | [2334.35, 2488.89] | 100% |        0% | 1.000 |  321.00 | Normal (3932.80 +- 9973.60)\ncarat_z      | 7870.55 | [7843.93, 7897.58] | 100% |        0% | 1.005 | 1047.00 |   Normal (0.00 +- 21040.85)\ncutGood      | 1118.79 | [1027.17, 1203.09] | 100% |        0% | 0.999 |  434.00 |   Normal (0.00 +- 34685.38)\ncutIdeal     | 1799.71 | [1714.31, 1869.75] | 100% |        0% | 0.999 |  338.00 |   Normal (0.00 +- 20362.28)\ncutPremium   | 1437.68 | [1353.65, 1512.30] | 100% |        0% | 0.999 |  351.00 |   Normal (0.00 +- 22862.49)\ncutVery Good | 1508.84 | [1422.69, 1582.24] | 100% |        0% | 1.000 |  344.00 |   Normal (0.00 +- 23922.15)\n```\n:::\n:::\n\n\n\nEin \"normales\" (frequentistisches) `lm` käme zu ähnlichen Ergebnissen:\n\n\n::: {.cell hash='adjustieren2_cache/html/unnamed-chunk-9_d05681dc3ef0c8ff6a0c838fc0540a5c'}\n\n```{.r .cell-code}\nlm(price ~ carat_z + cut, data = diamonds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = price ~ carat_z + cut, data = diamonds)\n\nCoefficients:\n (Intercept)       carat_z       cutGood      cutIdeal    cutPremium  \n        2405          7871          1120          1801          1439  \ncutVery Good  \n        1510  \n```\n:::\n:::\n\n\n\n\n\nMan könnte hier noch einen Interaktionseffekt ergänzen, wenn man Grund zur Annahme hat,\ndass es einen gibt.\n\n\n\n\n\n---\n\nCategories: \n\n- qm2\n- '2022'\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}