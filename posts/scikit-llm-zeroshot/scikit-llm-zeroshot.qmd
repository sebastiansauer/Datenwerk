---
date: today
draft: false   # ACHTUNG DRAFT STEHT AUF TRUE!
title: Scikit-Learn-LLM Zero Shot Learners 

execute: 
  eval: true 
  
highlight-style: arrow 
cache: true

extype: string
exsolution: 
exshuffle: no
categories:
- textmining
- nlp
- transformer
- chatgpt
- sentiment
- scikit

---








```{r global-knitr-options, include=FALSE}
knitr::opts_chunk$set(fig.pos = 'H',
                      fig.asp = 0.618,
                      fig.width = 4,
                      fig.cap = "", 
                      fig.path = "",
                      echo = TRUE, 
                      message = FALSE,
                      fig.show = "hold"
                      )
```







# Aufgabe


Fragen Sie ChatGPT via [Scikit-Learn-LLM](https://ealizadeh.com/blog/tutorial-scikit-llm/) zum Sentiment der ersten 7 Texte (=Tweets) aus dem Germeval-2018-Datensatz (Test).
Nutzen Sie die gleiche Zahl an Tweets aus dem Train-Datensatz zum Finetuning Ihres Modells.
Nutzen Sie den Endpoint `ZeroShotGPTClassifier`.




Hinweise:

- Beachten Sie die [Standardhinweise des Datenwerks](https://datenwerk.netlify.app/hinweise).
- Nutzen Sie Python, nicht R.
- Das Verwenden der OpenAI-API kostet Geld. üí∏ Informieren Sie sich vorab. Um auf die API zugreifen zu k√∂nnen, m√ºssen Sie sich ein Konto angelegt haben und √ºber ein Guthaben verf√ºgen. Werfen Sie hin und wieder einen Blick auf Ihr [OpenAI-Guthaben-Konto](https://platform.openai.com/usage).


::: {.callout-caution}
Aktuell sind `scikit-llm` und `openai` in den aktuellsten Versionen inkompatibel.

>    ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
scikit-llm 0.4.2 requires openai<1.0,>=0.27.9, but you have openai 1.3.5 which is incompatible.

Die einfachste L√∂sung ist, beide Pakete in verschiedenen venvs zu lagern. $\square$
:::

![sci-llm](https://ealizadeh.com/blog/tutorial-scikit-llm/img/_featured_image.png){width=33%}


</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>

# L√∂sung


Wir legen ggf. eine neue venv an:

```{r}
library(reticulate)
```


```{r}
#virtualenv_create("scikit-llm")
```

Und nutzen diese:

```{r use-venv}
use_virtualenv("scikit-llm")
```
Check:

```{r}
py_config()
```

```{r}
py_list_packages()
```



Ggf. m√ºssen Sie zun√§chst die n√∂tigen Module installieren, z.B. so: `reticulate::py_install("scikit-llm")`.


```{r}
#py_install("scikit-llm")
```



Module importieren:

```{python import}
from skllm import ZeroShotGPTClassifier   
from skllm.config import SKLLMConfig  # Anmeldung
import pandas as pd
import time 
import os
```



Train-Daten importieren:

```{python import-data-train}
csv_file_path_train = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_train.csv'
germeval_train = pd.read_csv(csv_file_path_train)
```

Test-Daten importieren:

```{python import-data-test}
csv_file_path_test = 'https://github.com/sebastiansauer/pradadata/raw/master/data-raw/germeval_test.csv'
germeval_test = pd.read_csv(csv_file_path_test)
```




Die ersten paar Texte aus dem Train-Datensatz herausziehen:

```{python}
n_tweets = 7
X_train = germeval_train["text"].head(n_tweets).tolist()
X_train
```

Und hier sind die Labels dazu:

```{python}
y_train = germeval_train["c1"].head(n_tweets).tolist()
y_train
```


Und analog f√ºr den Test-Datensatz:

```{python}
X_test = germeval_test["text"].head(n_tweets).tolist()
```



Anmelden bei OpenAI:


```{python}
OPENAI_SECRET_KEY = os.environ.get("OPENAI_API_KEY")
OPENAI_ORG_ID = os.environ.get("OPENAI_ORG_ID")

SKLLMConfig.set_openai_key(OPENAI_SECRET_KEY)
SKLLMConfig.set_openai_org(OPENAI_ORG_ID)
```


Model definieren:

```{python clf}
clf = ZeroShotGPTClassifier(openai_model="gpt-3.5-turbo")
```


Model fitten:

```{python fit}
clf.fit(X = X_train, y = y_train)  
```


Vorhersagen:


```{python predict}
#| eval: false
y_pred = clf.predict(X = X_test)  
```

`````
  0%|          | 0/7 [00:00<?, ?it/s]
 14%|‚ñà‚ñç        | 1/7 [00:38<03:48, 38.03s/it]
 29%|‚ñà‚ñà‚ñä       | 2/7 [00:48<01:48, 21.62s/it]
 43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 3/7 [01:16<01:38, 24.65s/it]
 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 4/7 [01:18<00:47, 15.81s/it]
 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 5/7 [01:28<00:27, 13.69s/it]
 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 6/7 [01:31<00:09,  9.87s/it]
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 7/7 [01:33<00:00, 13.32s/it]
`````


Voil√†:



```{python}
#| eval: false
for tweet, sentiment in zip(X_test, y_pred):
    print(f"Review: {tweet}\nPredicted Sentiment: {sentiment}\n\n")
```


````
Review: Meine Mutter hat mir erz√§hlt, dass mein Vater einen Wahlkreiskandidaten nicht gew√§hlt hat, weil der gegen die Homo-Ehe ist ‚ò∫
Predicted Sentiment: OFFENSE


Review: @Tom174_ @davidbest95 Meine Reaktion; |LBR| Nicht jeder Moslem ist ein Terrorist. Aber jeder Moslem glaubt an √úberlieferungen, die Gewalt und Terror beg√ºnstigen.
Predicted Sentiment: OFFENSE


Review: #Merkel rollt dem Emir von #Katar, der islamistischen Terror unterst√ºtzt, den roten Teppich aus.Wir brauchen einen sofortigen #Waffenstopp!
Predicted Sentiment: OFFENSE


Review: ‚ÄûMerle ist kein junges unschuldiges M√§dchen‚Äú Kch....... üò± #tatort
Predicted Sentiment: OFFENSE


Review: @umweltundaktiv Asylantenflut bringt eben nur negatives f√ºr Deutschland. Drum Asylanenstop und R√ºckf√ºhrung der Mehrzahl.
Predicted Sentiment: OFFENSE


Review: @_StultaMundi Die Bibel enth√§lt ebenfalls Gesetze des Zivil- und Strafrechts.
Predicted Sentiment: OTHER


Review: @Thueringen_ @Miquwarchar @Pontifex_de Man munkelt, Franziskus ist gro√üer "Kiss"- und "Black Sabbath"-Fan! #RockOn
Predicted Sentiment: OTHER
````




