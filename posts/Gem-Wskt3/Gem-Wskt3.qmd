---
extype: num
exsolution: r exams::fmt(sol)
exname: Gem-Wskt3
extol: r exams::num_to_tol(sol, reltol = 0.01)
expoints: 1
categories:
- probability
- dyn
- bayes
- num
- qm2
- qm2-pruefung
date: '2023-11-08'
slug: Gem-Wskt3
title: Gem-Wskt3

---





```{r global-knitr-options, include=FALSE}
knitr::opts_chunk$set(fig.pos = 'H',
                      fig.asp = 0.618,
                      fig.width = 7,
                      fig.cap = "", 
                      fig.path = "",
                      echo = FALSE,
                      message = FALSE,
                      warning = FALSE,
                      cache = FALSE,
                      #dpi = 72,
                      fig.show = "hold")

library(tidyverse)
```









```{r data generation, echo = FALSE, results = "hide"}
ok <- FALSE
while(!ok) {
  pe <- round(runif(1, 0.05, 0.15), digits = 2)
  per <- round(runif(1, 0.6, 0.8), digits = 2)
  pnenr <- round(runif(1, 0.6, 0.8), digits = 2)

  prob1 <- pe * per
  prob2 <- pe * (1 - per)
  prob3 <- (1 - pe) * (1 - pnenr)
  prob4 <- (1 - pe) * pnenr

  tab <- cbind(c(prob1, prob3), c(prob2, prob4))

  sol <- c(tab[1, 1] / sum(tab[, 1]), tab[1, 1] / sum(tab[1, ]),
    tab[2, 1] / sum(tab[2, ]), tab[1, 2] / sum(tab[1, ]))

  ok <- sum(tab) == 1 & all(tab > 0) & all(tab < 1)
}

tab2 <- cbind(rbind(tab, colSums(tab)), c(rowSums(tab), 1))
tab2 <- format(tab2 * 100, digits = 2, nsmall = 2, trim = TRUE)
tab2 <- gsub(" ", "", tab2, fixed = TRUE)

sol <- round(as.vector(tab), digits = 2)
lab <- c("E \\cap R", "\\overline{E} \\cap R", "E \\cap \\overline{R}", "\\overline{E} \\cap \\overline{R}")


sol_sample_idx <- sample(1:4, 1)
lab_sample <- lab[sol_sample_idx]
```



# Aufgabe

Ein renommiertes Unternehmen sucht ei Kandidati (m/w/d) für eine (hoch dotierte) Führungsposition. Das könnten Sie sein.
Ein Managementberatungsunternehmung führt ein Assessmentcenter durch,
welches pro Kandidati eine positive bzw. negative Empfehlung ergibt.
Aus früheren Erfahrungen heraus wissen die Berater, 
dass die tatsächlich geeigneten Kandidaten (Ereignis $E$ wie *eligible*) mit $`r per * 100`\%$ eine positive Empfehlung für die Stelle ausgesprochen bekommen (Ereignis $R$ wie *recommendation*).
Weiterhin bekommen von den *nicht* geeigneten Kandidaten $`r pnenr * 100`\%$ eine negative Empfehlung.
Insgesamt wissen die Berater, dass $`r pe * 100`\%$ der Bewerber/innen tatsächlich geeignet sind.


**Geben Sie den Wert folgender Kenngröße aus der entsprechenden Kontingenztabelle an:** 
$`r lab_sample`$!


*Hinweise*: 

- $\overline{R}=R^C= \neg R$ (logische Verneinung).
- $\cap$ meint das logische "Und".
- Geben Sie Wahrscheinlichkeiten nicht als Prozentzahlen, sondern als Anteile an.
- Runden Sie auf zwei Dezimalstellen.
- Achten Sie darauf, das richtige Dezimaltrennzeichen Ihres Systems zu verwenden.




</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>

# Lösung

Einige Wahrscheinlichkeiten lassen sich direkt aus dem Text errechnen:



$P(E \cap R) = P(R | E) \cdot P(E) = `r per` \cdot `r pe` = `r prob1` = `r 100 * prob1`\%$



$P(\overline{E} \cap \overline{R}) =
    P(\overline{R} | \overline{E}) \cdot P(\overline{E}) = `r pnenr` \cdot `r 1 - pe` = `r prob4` = `r 100 * prob4`\%$
    
    



Die restlichen gemeinsamen Wahrscheinlichkeiten lassen sich durch Addieren und Subtrahieren in der Kontingenztabelle errechnen:



|               | $R$                | $\overline{R}$     | Summe              |
|:-------------:|:------------------:|:------------------:|:------------------:|
|$E$            | **`r tab2[1, 1]`** |  _`r tab2[1, 2]`_  | **`r tab2[1, 3]`** |
|$\overline{E}$ |  _`r tab2[2, 1]`_  | **`r tab2[2, 2]`** |  _`r tab2[2, 3]`_  |
|Summe          |  _`r tab2[3, 1]`_  |  _`r tab2[3, 2]`_  | **`r tab2[3, 3]`** |



```{r}
sol <- sol %>% round(2)
sol <- sol[sol_sample_idx]
```




*Lösung*: Der gesuchte Wert lautet: `r sol`.




---

Categories: 

- probability
- dyn
- bayes
- num

