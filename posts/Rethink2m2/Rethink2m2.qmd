---
extype: string
exsolution: NA
exname: rethink2m2
expoints: 1
categories:
- probability
- bayes-grid
- bayes
- rethink-chap2
- string
- qm2
- qm2-pruefung
date: '2023-11-08'
slug: Rethink2m2
title: Rethink2m2

---



```{r libs, include = FALSE}
library(tidyverse)
```


```{r global-knitr-options, include=FALSE}
knitr::opts_chunk$set(fig.pos = 'H',
                      fig.asp = 0.618,
                      fig.width = 4,
                      fig.cap = "", 
                      fig.path = "",
                      message = FALSE,
                      warning = FALSE,
                     # out.width = "100%",
                      cache = TRUE)
```








# Aufgabe

This question is taken from McElreath, R. (2020). *Statistical rethinking: A Bayesian course with examples in R and Stan* (2. Ed.). Taylor and Francis, CRC Press.


Recall the globe tossing model from the chapter (also see [exercise globus1](https://datenwerk.netlify.app/posts/globus1/index.html)).
Compute and plot the grid approximate posterior distribution for each of the following sets of observations. In each case, assume a uniform prior for *p*.

Data: 

1. WWW
2. WWWL
3. LWWLWWW


Now assume a prior for p that is equal to zero when p < 0.5 and is a positive constant when p ≥ 0.5. Again compute and plot the grid approximate posterior distribution for each of the sets of observations in the problem just above.


NB:

- Consider 21 different values for *p* such that $p = (0, .05, 1., .15, \ldots, 1)$.
- Round to 2 decimal places.




</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>

# Lösung

The solution is taken from [this source](https://sr2-solutions.wjakethompson.com/bayesian-inference.html).


```{r}
library(tidyverse)

dist <- 
  tibble(
    # Gridwerte bestimmen:
    p_grid = seq(from = 0, to = 1, length.out = 21),
    # Priori-Wskt bestimmen:
    prior  = case_when(
      p_grid < 0.5 ~ 0,  # Null, wenn p < 0.5 
      p_grid >= 0.5 ~ 1)) %>%  # 1, wenn p >= 0.5
  mutate(
    # Likelihood berechnen:
    likelihood_1 = dbinom(3, size = 3, prob = p_grid),
    likelihood_2 = dbinom(3, size = 4, prob = p_grid),
    likelihood_3 = dbinom(5, size = 7, prob = p_grid),
    # unstand. Posterior-Wskt:
    unstand_post_1 = likelihood_1 * prior,
    unstand_post_2 = likelihood_2 * prior,
    unstand_post_3 = likelihood_3 * prior,
    # stand. Post-Wskt:
    std_post_1 = unstand_post_1 / sum(unstand_post_1),
    std_post_2 = unstand_post_2 / sum(unstand_post_2),
    std_post_3 = unstand_post_3 / sum(unstand_post_3)
    ) 
```

Here is the Bayes Box:

```{r echo=FALSE}
knitr::kable(round(dist, 2))
```


Jetzt können wir das Diagramm zeichnen.

Mit `ggpubr`:


```{r}
#| out-width: 100%
library(ggpubr)
ggline(dist, 
       x = "p_grid", 
       y = "std_post_1")
```


Oder mit `ggplot2`:


```{r}
ggplot(dist) +
  aes(x = p_grid, y= std_post_1) +
  geom_line()+
  geom_point() +
  labs(x = "p(W)",
       y = "Posteriori-Wahrscheinlichkeit",
       title = "Daten: WWW")


```


```{r}
ggplot(dist) +
  aes(x = p_grid, y= std_post_2) +
  geom_line()+
  geom_point() +
  labs(x = "p(W)",
       y = "Posteriori-Wahrscheinlichkeit",
       title = "Daten: WWWL")


```



```{r}
ggplot(dist) +
  aes(x = p_grid, y= std_post_3) +
  geom_line()+
  geom_point() +
  labs(x = "p(W)",
       y = "Posteriori-Wahrscheinlichkeit",
       title = "Daten: LWWLWWW")
```






---

Categories: 

- probability
- bayes-grid
- bayes
- rethink-chap2
- string

