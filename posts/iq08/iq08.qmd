---
exname: iq08
extype: num
exsolution: r exams::fmt(solution, 2)
exshuffle: no
extol: 0.02
expoints: 1
categories:
- probability
- simulation
- normal-distribution
- num
date: '2023-10-20'
slug: iq08
title: iq08

---






```{r global-knitr-options, include=FALSE}
knitr::opts_chunk$set(fig.pos = 'H',
                      fig.asp = 0.618,
                      fig.width = 4,
                      fig.cap = "", 
                      fig.path = "",
                      echo = TRUE, 
                      message = FALSE,
                      fig.show = "hold")
```







# Aufgabe

An einer Elite-Hochschule wird man nur zugelassen, wenn man sowohl schön als auch schlau ist.

"Schön" sei definiert als  eine SD-Einheit über dem mittleren Aussehen, unter der Annahme, dass Aussehen normalverteilt ist.

"Schlau" sei definiert als eine SD-Einheit über dem mittleren Wert, unter der Annahme, dass die Variable normalverteilt ist.

*Wie hoch ist die Wahrscheinlichkeit, an dieser Elite-Uni zugelassen zu werden?*

Hinweise:

- Nutzen Sie Simulationsmethoden.
- Gehen Sie von folgender Verteilung für Schönheit und für Schlauheit aus: $X \sim N(0,1)$
- Intelligenz und Schönheit sollen als unabhängig angenommen werden.
- Geben Sie Anteile oder Wahrscheinlichkeiten stets mit zwei Dezimalstellen an (sofern nicht anders verlangt).
- Simulieren Sie $n=10^4$ Stichproben.
- Nutzen Sie die Zahl 42 als Startwert für Ihre Zufallszahlen (um die Reproduzierbarkeit zu gewährleisten).
- [Weitere Hinweise](https://start-bayes.netlify.app/pruefung#bearbeitungshinweise)



</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>

# Lösung


Die Wahrscheinlichkeit für "schön", $S1$ ist gleich der Wahrscheinlichkeit für "Schlau", $S2$.


```{r}
library(tidyverse)
```

Wir simulieren die Daten:

```{r}
set.seed(42)

d <- tibble(
  id = 1:10^4,
  schoenheit = rnorm(n = 10^4, mean = 0, sd = 1),
  schlauheit = rnorm(n = 10^4, mean = 0, sd = 1))
```

Da es nur um Anteile (bzw. Wahrscheinlichkeiten) der Population geht, 
können wir mit z-Werten arbeiten.

Zur Erinnerung: 
Ein z-Wert von 1 bedeutet, dass der Messwert eine SD-Einheit größer ist als der Mittelwert der Verteilung.



Dann filtern wir wie in der Angabe gefragt:



```{r}
d2 <-
  d %>% 
  count(schoenheit > 1, schlauheit > 1) %>%  # Das Komma wird als logisches UND interpretiert
  mutate(prop = n / sum(n))

d2
```


Wieder nehmen wir den Anteil her und bezeichnen ihn als Wahrscheinlichkeit.
Das ist eine schöne Sache dieser Simulationsmethoden:
Es vereinfacht die Angelegenheit, denn mit Häufigkeiten lässt sich einfacher hantieren
als mit Wahrscheinlichkeiten.
Und die Anteile erfüllen die Kolmogorov-Axiome,
wir können also beruhigt rechnen. Falls Sie also vor Sorge
um die Reinheit der Mathematik nicht schlafen konnten, kann ich Sie insofern beruhigen :-)

Natürlich könnte man die Frage auch analytisch lösen (mit dem Multiplikationssatz für unabhängige Ereignisse).

Die Wahrscheinlichkeit für einen Wert $x >= 115, X \sim N(100,15)$ beträgt:

```{r}
pr_1sd_ueber_mw <- 1- pnorm(115, 100, 15)
pr_1sd_ueber_mw
```

Dannn:

```{r}
pr_1sd_ueber_mw * pr_1sd_ueber_mw
```





```{r echo = FALSE}
solution <-
  d2 %>% 
  pull(prop) %>% 
  magrittr::extract(4)
```



**Antwort**: *Die Lösung lautet also `r solution`.*

Interessant ist es vielleicht, die Gesamtpopulation zu visualisieren:


```{r}
d %>% 
  mutate(ist_schoen = if_else(schoenheit > 1, TRUE, FALSE),
         ist_schlau = if_else(schlauheit > 1, TRUE, FALSE),
         ist_schoen_schlau = if_else(ist_schoen & ist_schlau, TRUE, FALSE)) %>% 
  ggplot() +
  aes(x = schoenheit, y = schlauheit, color = ist_schoen_schlau, alpha = .1) +
  geom_point()
```


Wäre die Aufnahmeregel, dass es reichte, entweder schön oder schlau (beides ist auch ok) zu sein,
wäre der Anteil an zugelassenen Personen größer:





```{r}
d3 <-
  d %>% 
  count(schoenheit > 1 | schlauheit > 1) %>%  # der horizontale Balken steht für das logische ODER.
  mutate(prop = n / sum(n))

d3
```





---

Categories: 

- probability
- simulation
- normal-distribution
- num

