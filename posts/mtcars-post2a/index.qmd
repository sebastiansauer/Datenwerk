---
extype: schoice
exsolution: 8
exname: mtcars-post2a
categories:
- bayes
- regression
- post
- exam-22
- qm2
- mtcars
- paper
date: 2024-11-12
slug: mtcars-post2a
title: mtcars-post2a

---





```{r global-knitr-options, include=FALSE, message=FALSE}
knitr::opts_chunk$set(fig.pos = 'H',
                      fig.asp = 0.618,
                      fig.width = 4,
                      fig.cap = "", 
                      fig.path = "",
                      echo = TRUE,
                      message = FALSE,
                      fig.show = "hold")

library(tidyverse)
options(mc.cores = parallel::detectCores())

```





# Aufgabe



Im Datensatz `mtcars`: Wie groß ist der Effekt der UV `vs`  auf die AV `mpg`?  Geben Sie die Breite des 95% PI an (im Bezug zur gesuchten Größe).



[Hinweise](https://start-bayes.netlify.app/pruefung#bearbeitungshinweise)



Dazu wird folgendes Modell berechnet.


Setup:

```{r message = FALSE}
data(mtcars)
library(tidyverse)
library(rstanarm)
library(easystats) 
```




Modell berechnen:

```{r}
m1 <- stan_glm(mpg ~ vs, data = mtcars,
               seed = 42,
               refresh = 0)
```



95%-PI:

```{r}
#| echo: false
post_m1_vs <- parameters(m1)
post_m1_vs |> print_md()
```


Visualisierung der Posterior-Verteilung (95% CI):

```{r}
#| echo: false
post_m1_vs |> plot(show_intercept = FALSE)
```




**Aufgabe** Wählen Sie die am besten passende Option.


Answerlist
----------

* 0.7
* 2.7
* 4.7
* 6.7
* 8.7


</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>
</br>


# Lösung


Berechnen wir die Breite des Intervalls:

Der folgende R-Code ist nicht so wichtig. Man kann das Ergebnis direkt aus der Tabelle ablesen: CI_high - CI_low in der Zeile der UV.



```{r}
#| echo: false
breite <- post_m1_vs$CI_high[post_m1_vs$Parameter=="vs"] - post_m1_vs$CI_low[post_m1_vs$Parameter=="vs"] 
breite
```



Die Antwort für lautet also `r breite`.



Answerlist
----------

* Falsch
* Falsch
* Falsch
* Wahr
* Falsch






---

Categories: 

- bayes
- regression
- post
- exam-22

